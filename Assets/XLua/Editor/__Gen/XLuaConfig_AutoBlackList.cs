//////////////////////////////////////////////////////////////////////////
//
//      UPDATE TIME : 05/15/2024 18:05:29
//      DO NOT EDIT THIS FILE!! THIS IS AUTOMATICALLY GENERATED!!
//
//////////////////////////////////////////////////////////////////////////

// ReSharper disable once CheckNamespace
// ReSharper disable once InconsistentNaming
// ReSharper disable once UnusedType.Global
// ReSharper disable ArrangeObjectCreationWhenTypeEvident
// ReSharper disable RedundantEmptyObjectCreationArgumentList
// ReSharper disable StringLiteralTypo
public static class XLuaConfig_AutoBlackList
{
	[XLua.BlackList] 
	// ReSharper disable once UnusedMember.Global
	public static System.Collections.Generic.List<System.Collections.Generic.List<string>> BlackList = new System.Collections.Generic.List<System.Collections.Generic.List<string>>()
	{
		new System.Collections.Generic.List<string>() { "AkBankManager", "LoadInitBankEditor", "System.Boolean" },
		new System.Collections.Generic.List<string>() { "AkBasePathGetter", "GetDefaultGeneratedSoundbanksPath" },
		new System.Collections.Generic.List<string>() { "AkBasePathGetter", "GetFullSoundBankPathEditor" },
		new System.Collections.Generic.List<string>() { "AkBasePathGetter", "GetSoundBankPaths", "System.String", "System.String&", "System.String&" },
		new System.Collections.Generic.List<string>() { "AkBasePathGetter", "GetWwiseProjectDirectory" },
		new System.Collections.Generic.List<string>() { "AkBasePathGetter", "GetWwiseProjectPath" },
		new System.Collections.Generic.List<string>() { "AkSoundEngine", "EditorIsSoundEngineLoaded" },
		new System.Collections.Generic.List<string>() { "AkUtilities", "BeginMigration", "System.Int32" },
		new System.Collections.Generic.List<string>() { "AkUtilities", "CreateFolder", "System.String" },
		new System.Collections.Generic.List<string>() { "AkUtilities", "DirectoryCopy", "System.String", "System.String", "System.Boolean" },
		new System.Collections.Generic.List<string>() { "AkUtilities", "EnableBoolSoundbankSettingInWproj", "System.String", "System.String" },
		new System.Collections.Generic.List<string>() { "AkUtilities", "EndMigration" },
		new System.Collections.Generic.List<string>() { "AkUtilities", "ExecuteCommandLine", "System.String", "System.String" },
		new System.Collections.Generic.List<string>() { "AkUtilities", "GenerateSoundbanks", "System.Collections.Generic.List`1[System.String]" },
		new System.Collections.Generic.List<string>() { "AkUtilities", "GetAllBankPaths" },
		new System.Collections.Generic.List<string>() { "AkUtilities", "GetAllBankPaths", "System.String" },
		new System.Collections.Generic.List<string>() { "AkUtilities", "GetEventDurations" },
		new System.Collections.Generic.List<string>() { "AkUtilities", "GetFullPath", "System.String", "System.String" },
		new System.Collections.Generic.List<string>() { "AkUtilities", "GetLastRectAbsolute", "UnityEngine.Rect" },
		new System.Collections.Generic.List<string>() { "AkUtilities", "GetTooltip", "UnityEditor.SerializedProperty" },
		new System.Collections.Generic.List<string>() { "AkUtilities", "GetWwiseSoundBankDestinationFolder", "System.String" },
		new System.Collections.Generic.List<string>() { "AkUtilities", "IsMigrating" },
		new System.Collections.Generic.List<string>() { "AkUtilities", "IsMigrationRequired", "AkUtilities+MigrationStep" },
		new System.Collections.Generic.List<string>() { "AkUtilities", "IsSoundbankGenerationAvailable" },
		new System.Collections.Generic.List<string>() { "AkUtilities", "IsSoundbankOverrideEnabled", "System.String" },
		new System.Collections.Generic.List<string>() { "AkUtilities", "IsWwiseProjectAvailable" },
		new System.Collections.Generic.List<string>() { "AkUtilities", "MakeRelativePath", "System.String", "System.String" },
		new System.Collections.Generic.List<string>() { "AkUtilities", "MigrationStartIndex" },
		new System.Collections.Generic.List<string>() { "AkUtilities", "MigrationStopIndex" },
		new System.Collections.Generic.List<string>() { "AkUtilities", "MoveAssetsFromDirectory", "System.String", "System.String", "System.Boolean" },
		new System.Collections.Generic.List<string>() { "AkUtilities", "MoveFolder", "System.String", "System.String" },
		new System.Collections.Generic.List<string>() { "AkUtilities", "ParseOsxPathFromWinePath", "System.String" },
		new System.Collections.Generic.List<string>() { "AkUtilities", "PlatformMapping" },
		new System.Collections.Generic.List<string>() { "AkUtilities", "RepaintInspector" },
		new System.Collections.Generic.List<string>() { "AkUtilities", "SetSoundbankHeaderFilePath", "System.String", "System.String" },
		new System.Collections.Generic.List<string>() { "AkUtilities", "SetSoundbanksDestinationFoldersInWproj", "System.String", "System.String" },
		new System.Collections.Generic.List<string>() { "AkUtilities", "SoundBankDestinationsUpdated", "System.String" },
		new System.Collections.Generic.List<string>() { "AkWwiseInitializationSettings", "GetHashOfActiveSettings" },
		new System.Collections.Generic.List<string>() { "AkWwiseInitializationSettings", "GetOrCreateAsset", "System.String", "System.String" },
		new System.Collections.Generic.List<string>() { "AkWwiseInitializationSettings", "UpdatePlatforms" },
		new System.Collections.Generic.List<string>() { "AkWwiseInitializationSettings+PlatformSettings", "IsDistinctPlatform", "System.String" },
		new System.Collections.Generic.List<string>() { "AK.Wwise.BaseType", "SetupReference", "System.String", "System.Guid" },
		new System.Collections.Generic.List<string>() { "WwiseGroupValueObjectReference", "GetWwiseObjectForMigration", "WwiseObjectType", "System.Byte[]", "System.Int32", "System.Byte[]", "System.Int32" },
		new System.Collections.Generic.List<string>() { "WwiseGroupValueObjectReference", "SetupGroupObjectReference", "System.String", "System.Guid" },
		new System.Collections.Generic.List<string>() { "WwiseObjectReference", "ClearWwiseObjectDataMap" },
		new System.Collections.Generic.List<string>() { "WwiseObjectReference", "CompleteData" },
		new System.Collections.Generic.List<string>() { "WwiseObjectReference", "DeleteWwiseObject", "WwiseObjectType", "System.Guid" },
		new System.Collections.Generic.List<string>() { "WwiseObjectReference", "FindOrCreateWwiseObject", "WwiseObjectType", "System.String", "System.Guid" },
		new System.Collections.Generic.List<string>() { "WwiseObjectReference", "FindWwiseObject", "WwiseObjectType", "System.Guid" },
		new System.Collections.Generic.List<string>() { "WwiseObjectReference", "GetAssetFileName", "System.Guid" },
		new System.Collections.Generic.List<string>() { "WwiseObjectReference", "GetParentPath", "WwiseObjectType" },
		new System.Collections.Generic.List<string>() { "WwiseObjectReference", "GetWwiseObjectForMigration", "WwiseObjectType", "System.Byte[]", "System.Int32" },
		new System.Collections.Generic.List<string>() { "WwiseObjectReference", "IsComplete" },
		new System.Collections.Generic.List<string>() { "WwiseObjectReference", "UpdateWwiseObjectDataMap", "WwiseObjectType", "System.String", "System.Guid" },
		new System.Collections.Generic.List<string>() { "WwiseObjectReference", "UpdateWwiseObject", "WwiseObjectType", "System.String", "System.Guid" },
		new System.Collections.Generic.List<string>() { "AkAmbient", "Migrate", "UnityEditor.SerializedObject" },
		new System.Collections.Generic.List<string>() { "AkEnvironmentPortal", "envList" },
		new System.Collections.Generic.List<string>() { "AkEvent", "Migrate", "UnityEditor.SerializedObject" },
		new System.Collections.Generic.List<string>() { "AkGameObj", "Migrate10" },
		new System.Collections.Generic.List<string>() { "AkGameObj", "Migrate14" },
		new System.Collections.Generic.List<string>() { "AkGameObj", "Migrate9" },
		new System.Collections.Generic.List<string>() { "AkGameObj", "OnDrawGizmosSelected" },
		new System.Collections.Generic.List<string>() { "AkGameObj", "PostMigration14" },
		new System.Collections.Generic.List<string>() { "AkGameObj", "PreMigration14" },
		new System.Collections.Generic.List<string>() { "AkGameObjListenerList", "AddToInitialListenerList", "AkAudioListener" },
		new System.Collections.Generic.List<string>() { "AkGameObjListenerList", "RemoveFromInitialListenerList", "AkAudioListener" },
		new System.Collections.Generic.List<string>() { "AkInitializer", "Migrate15" },
		new System.Collections.Generic.List<string>() { "AkInitializer", "PostMigration15" },
		new System.Collections.Generic.List<string>() { "AkInitializer", "PreMigration15" },
		new System.Collections.Generic.List<string>() { "AkSoundEngineController", "DisableEditorLateUpdate" },
		new System.Collections.Generic.List<string>() { "AkSoundEngineController", "DisposeOnEditor" },
		new System.Collections.Generic.List<string>() { "AkSoundEngineController", "EnableEditorLateUpdate" },
		new System.Collections.Generic.List<string>() { "AkSpatialAudioDebugDraw", "drawDiffractionPaths" },
		new System.Collections.Generic.List<string>() { "AkSpatialAudioDebugDraw", "drawFirstOrderReflections" },
		new System.Collections.Generic.List<string>() { "AkSpatialAudioDebugDraw", "drawHigherOrderReflections" },
		new System.Collections.Generic.List<string>() { "AkSpatialAudioDebugDraw", "drawSecondOrderReflections" },
		new System.Collections.Generic.List<string>() { "AkSpatialAudioEmitter", "drawDiffractionPaths" },
		new System.Collections.Generic.List<string>() { "AkSpatialAudioEmitter", "drawFirstOrderReflections" },
		new System.Collections.Generic.List<string>() { "AkSpatialAudioEmitter", "drawHigherOrderReflections" },
		new System.Collections.Generic.List<string>() { "AkSpatialAudioEmitter", "drawSecondOrderReflections" },
		new System.Collections.Generic.List<string>() { "BrainFailProductions.PolyFew.AsImpL.Loader", "ImportingAssets" },
		new System.Collections.Generic.List<string>() { "BrainFailProductions.PolyFew.AsImpL.Loader", "altTexPath" },
		new System.Collections.Generic.List<string>() { "BrainFailProductions.PolyFew.AsImpL.ObjectBuilder", "alternativeTexPath" },
		new System.Collections.Generic.List<string>() { "BrainFailProductions.PolyFew.AsImpL.ObjectImporter", "AllImported" },
		new System.Collections.Generic.List<string>() { "BrainFailProductions.PolyFew.AsImpL.ObjectImporter", "ImportFile", "System.String", "UnityEngine.Transform", "BrainFailProductions.PolyFew.AsImpL.ImportOptions" },
		new System.Collections.Generic.List<string>() { "BrainFailProductions.PolyFew.AsImpL.ObjectImporter", "ImportMessage" },
		new System.Collections.Generic.List<string>() { "BrainFailProductions.PolyFew.AsImpL.ObjectImporter", "ImportProgress" },
		new System.Collections.Generic.List<string>() { "BrainFailProductions.PolyFew.AsImpL.ObjectImporter", "importAssetPath" },
		new System.Collections.Generic.List<string>() { "BrainFailProductions.PolyFew.AsImpL.ObjectImporter", "importAssets" },
		new System.Collections.Generic.List<string>() { "BrainFailProductions.PolyFew.AsImpL.PathSettings", "editorRootPath" },
		new System.Collections.Generic.List<string>() { "BrainFailProductions.PolyFew.PolyFew", "dataContainer" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "BLOCK_C" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "BLOCK_CS" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "BLOCK_EMPTY" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "BinaryLineSweepTerrainMesh" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "BrushSizeX" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "BrushSizeY" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "ClearLightData" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "CurrentEditMode" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "DrawArea" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "DrawAreaPreview" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "DrawBlockPreview" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "DrawGrid" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "DrawLight" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "DrawMapData" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "EnterEditMode", "System.Int32", "CityLogicEditMode" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "ExitEditMode" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "ExportBinaryData", "System.String&", "System.Nullable`1[UnityEngine.Vector2Int]", "System.String&" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "ExportCityMapFile", "System.String", "System.Char", "System.Char", "System.String", "System.String", "System.Nullable`1[UnityEngine.Vector2Int]" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "ExportLightBinaryData", "System.String&" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "ForceReset" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "ForceSave" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "GenerateMeshFromNavmesh" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "GenerateUnwalkableTexture", "System.String&", "System.String&" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "InEdit" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "LoadSave", "CityEditor.CityEditorSave" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "MAP_FILE_NAME" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "OnDrawEditSceneGUI" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "OnInspectorAreaGui" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "PreviewAlpha" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "Save" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "SelectBrush" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "SetCursorPos", "System.Int32", "System.Int32" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "SetShowGrid", "System.Boolean" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "TOOL_BLOCK" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "TOOL_ERASE" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "TOOL_NONE" },
		new System.Collections.Generic.List<string>() { "CityEditorLogic", "UnLoad" },
		new System.Collections.Generic.List<string>() { "CityGroundMeshNavMarker", "Area" },
		new System.Collections.Generic.List<string>() { "CityGroundMeshNavMarker", "NavMeshSource" },
		new System.Collections.Generic.List<string>() { "CityGroundVolumeNavMarker", "Area" },
		new System.Collections.Generic.List<string>() { "CityGroundVolumeNavMarker", "Center" },
		new System.Collections.Generic.List<string>() { "CityGroundVolumeNavMarker", "Size" },
		new System.Collections.Generic.List<string>() { "DragonReborn.City.CityRootMaterialRef", "SetRefMaterialTilingScale", "System.Action`1[UnityEngine.Object]" },
		new System.Collections.Generic.List<string>() { "DragonReborn.City.SafeAreaEdgeAccessor", "WriteToStream", "System.IO.Stream", "System.Byte[]", "SafeAreaEdgeData[]" },
		new System.Collections.Generic.List<string>() { "DragonReborn.City.ZoneSliceDataAccessor", "WriteToStream", "System.IO.Stream", "System.Collections.Generic.IReadOnlyDictionary`2[System.Int32,System.Collections.Generic.List`1]" },
		new System.Collections.Generic.List<string>() { "DragonReborn.ECSExtension.FacingCameraData", "InstanceId" },
		new System.Collections.Generic.List<string>() { "DragonReborn.SLG.Troop.UnitView", "skillId" },
		new System.Collections.Generic.List<string>() { "DragonReborn.UI.ILuaComponent", "LuaScriptFullPath" },
		new System.Collections.Generic.List<string>() { "DragonReborn.UI.ILuaComponent", "SetLuaScriptFullPath", "System.String" },
		new System.Collections.Generic.List<string>() { "DragonReborn.UI.LuaBaseComponent", "LuaScriptFullPath" },
		new System.Collections.Generic.List<string>() { "DragonReborn.UI.LuaBaseComponent", "SetLuaScriptFullPath", "System.String" },
		new System.Collections.Generic.List<string>() { "DragonReborn.UI.LuaTableViewProCell", "LuaScriptFullPath" },
		new System.Collections.Generic.List<string>() { "DragonReborn.UI.LuaTableViewProCell", "SetLuaScriptFullPath", "System.String" },
		new System.Collections.Generic.List<string>() { "DragonReborn.UI.LuaUIMediator", "LuaScriptFullPath" },
		new System.Collections.Generic.List<string>() { "DragonReborn.UI.LuaUIMediator", "SetLuaScriptFullPath", "System.String" },
		new System.Collections.Generic.List<string>() { "FpVxToolRefHolder", "ClearData", "System.Int32[]" },
		new System.Collections.Generic.List<string>() { "FpVxToolRefHolder", "SaveCommonTriggerData", "System.Int32", "System.String", "FpAnimation.FpAnimationCommonTrigger", "System.Int32", "System.Int32", "System.Int32" },
		new System.Collections.Generic.List<string>() { "FpVxToolRefHolder", "SaveFpAnimatorData", "System.Int32", "System.String", "FpAnimation.FpAnimator" },
		new System.Collections.Generic.List<string>() { "JCVoronoi", "CreateDiagram" },
		new System.Collections.Generic.List<string>() { "JCVoronoi", "DeleteDiagram", "System.IntPtr" },
		new System.Collections.Generic.List<string>() { "JCVoronoi", "FreeDiagram", "System.IntPtr" },
		new System.Collections.Generic.List<string>() { "JCVoronoi", "GenerateDiagram", "System.Int32", "System.IntPtr", "System.IntPtr" },
		new System.Collections.Generic.List<string>() { "JCVoronoi", "GetDiagramFirstEdge", "System.IntPtr" },
		new System.Collections.Generic.List<string>() { "JCVoronoi", "GetDiagramMax", "System.IntPtr" },
		new System.Collections.Generic.List<string>() { "JCVoronoi", "GetDiagramMin", "System.IntPtr" },
		new System.Collections.Generic.List<string>() { "JCVoronoi", "GetDiagramNextEdge", "System.IntPtr" },
		new System.Collections.Generic.List<string>() { "JCVoronoi", "GetDiagramSiteCount", "System.IntPtr" },
		new System.Collections.Generic.List<string>() { "JCVoronoi", "GetDiagramSite", "System.IntPtr", "System.Int32" },
		new System.Collections.Generic.List<string>() { "JCVoronoi", "GetEdgePoint", "System.IntPtr", "System.Int32" },
		new System.Collections.Generic.List<string>() { "JCVoronoi", "GetEdgeSite", "System.IntPtr", "System.Int32" },
		new System.Collections.Generic.List<string>() { "JCVoronoi", "GetGraphEdgeEdge", "System.IntPtr" },
		new System.Collections.Generic.List<string>() { "JCVoronoi", "GetSiteFirstGraphEdge", "System.IntPtr" },
		new System.Collections.Generic.List<string>() { "JCVoronoi", "GetSiteIndex", "System.IntPtr" },
		new System.Collections.Generic.List<string>() { "JCVoronoi", "GetSiteNextGraphEdge", "System.IntPtr" },
		new System.Collections.Generic.List<string>() { "JCVoronoi", "GetSitePosition", "System.IntPtr" },
		new System.Collections.Generic.List<string>() { "Kingdom.MapFogOperationContext", "DrawDebugMist", "System.Int32" },
		new System.Collections.Generic.List<string>() { "Kingdom.MapFogSettings", "DebugColor" },
		new System.Collections.Generic.List<string>() { "Kingdom.MapFogSettings", "DebugMistCellEffectNormal" },
		new System.Collections.Generic.List<string>() { "Kingdom.MapFogSettings", "DebugMistCellEffectRound" },
		new System.Collections.Generic.List<string>() { "Kingdom.MapFogSettings", "DebugMistCellID" },
		new System.Collections.Generic.List<string>() { "Kingdom.MapFogSystem", "SetDissolveCell_Debug", "System.Int32", "UnityEngine.Color32", "System.Boolean" },
		new System.Collections.Generic.List<string>() { "Kingdom.MapSettings", "SaveMapSettings" },
		new System.Collections.Generic.List<string>() { "Kingdom.MistBin", "WriteBin", "System.IO.BinaryWriter" },
		new System.Collections.Generic.List<string>() { "Lod.U2DWidgetMaterialSetter", "AddAllWidgetMeshes" },
		new System.Collections.Generic.List<string>() { "LuaMouseClickHandler", "LuaScriptFullPath" },
		new System.Collections.Generic.List<string>() { "LuaMouseClickHandler", "SetLuaScriptFullPath", "System.String" },
		new System.Collections.Generic.List<string>() { "LuaScriptLoader", "LoadFromAssetManagerEditor2", "System.String&" },
		new System.Collections.Generic.List<string>() { "LuaScriptLoader", "LoadFromAssetManagerEditor", "System.String&" },
		new System.Collections.Generic.List<string>() { "QualityLevelExportController", "PreviewLevel", "System.Int32" },
		new System.Collections.Generic.List<string>() { "QualityLevelGroup", "PreviewLevel", "System.Int32" },
		new System.Collections.Generic.List<string>() { "QualityLevelLoader", "GetPrefabNames" },
		new System.Collections.Generic.List<string>() { "RenderExtension.GeoGrassRenderer", "GetGrassMesh" },
		new System.Collections.Generic.List<string>() { "RenderExtension.SceneEnvData", "SaveCurrentRenderSetting" },
		new System.Collections.Generic.List<string>() { "ScreenFadeInOutBehavior", "OnGraphStop", "UnityEngine.Playables.Playable" },
		new System.Collections.Generic.List<string>() { "UnityEngine.UI.Extensions.CUIBezierCurve", "EDITOR_ControlPoints" },
		new System.Collections.Generic.List<string>() { "UnityEngine.UI.Extensions.CUIGraphic", "EDITOR_RefCurves" },
		new System.Collections.Generic.List<string>() { "UnityEngine.UI.Extensions.CUIGraphic", "EDITOR_RefCurvesControlRatioPoints" },
		new System.Collections.Generic.List<string>() { "UnityEngine.UI.Extensions.ShineEffect", "OnRebuildRequested" },
		new System.Collections.Generic.List<string>() { "XLua.ObjectTranslator", "PushParams", "System.IntPtr", "System.Array" },
		new System.Collections.Generic.List<string>() { "XLua.ObjectTranslator", "RegisterTypeChecker", "XLua.ObjectTranslator+INotAccessGenTypeChecker" },
		new System.Collections.Generic.List<string>() { "XLua.ObjectTranslatorPool", "FindTranslator", "System.IntPtr" },
		new System.Collections.Generic.List<string>() { "Cinemachine.ConfinerOven+BakedSolution", "GetBakedPath" },
		new System.Collections.Generic.List<string>() { "AssetModeSwitch", "AssetModeSwitchEditorKey" },
		new System.Collections.Generic.List<string>() { "DragonReborn.AssetTool.AssetLoaderProxy", "AssetDatabaseLoader" },
		new System.Collections.Generic.List<string>() { "DragonReborn.AssetTool.ResourcesLoader", "CollectResourceFiles", "System.Collections.Generic.Dictionary`2[System.String,System.String]" },
		new System.Collections.Generic.List<string>() { "DragonReborn.SafetyUtils", "DecryptHeadOffset", "System.String", "System.String", "System.String" },
		new System.Collections.Generic.List<string>() { "DragonReborn.SafetyUtils", "EncryptHeadOffset", "System.String", "System.String" },
		new System.Collections.Generic.List<string>() { "DragonReborn.SafetyUtils", "EncryptXOR", "System.String" },
		new System.Collections.Generic.List<string>() { "AbstractComponentStatusRecord", "EditorMoveDown", "System.Int32" },
		new System.Collections.Generic.List<string>() { "AbstractComponentStatusRecord", "EditorRemove", "System.Int32" },
		new System.Collections.Generic.List<string>() { "ComponentStatusRecord`2", "EditorMoveDown", "System.Int32" },
		new System.Collections.Generic.List<string>() { "ComponentStatusRecord`2", "EditorRemove", "System.Int32" },
		new System.Collections.Generic.List<string>() { "DragonReborn.UI.AutoLoader", "isDebug" },
		new System.Collections.Generic.List<string>() { "DragonReborn.UI.ExTransitionProvider", "Save" },
		new System.Collections.Generic.List<string>() { "DragonReborn.UI.ExTransitionProvider", "buttonClickSoundList" },
		new System.Collections.Generic.List<string>() { "DragonReborn.UI.UIGraphicRaycastShapeModifier", "Initialize$UIGraphicRaycastShapeModifierHelper_IsPointInPolygon_000009DC$BurstDirectCall" },
		new System.Collections.Generic.List<string>() { "DragonReborn.UI.UIMediatorPropertyDatabase", "LoadFromAllUIScenes" },
		new System.Collections.Generic.List<string>() { "IStatusRecord", "EditorMoveDown", "System.Int32" },
		new System.Collections.Generic.List<string>() { "IStatusRecord", "EditorRemove", "System.Int32" },
		new System.Collections.Generic.List<string>() { "PoolGameObjectHelper", "debugAsyncCallBack" },
		new System.Collections.Generic.List<string>() { "PoolGameObjectHelper", "debugAsyncCancel" },
		new System.Collections.Generic.List<string>() { "PoolGameObjectHelper", "debugCreatePath" },
		new System.Collections.Generic.List<string>() { "PoolGameObjectHelper", "debugDefaultRet" },
		new System.Collections.Generic.List<string>() { "PoolGameObjectHelper", "isDebugBlackName" },
		new System.Collections.Generic.List<string>() { "StatusRecordChild", "EditorMoveDown", "System.Int32" },
		new System.Collections.Generic.List<string>() { "StatusRecordChild", "EditorRemove", "System.Int32" },
		new System.Collections.Generic.List<string>() { "StatusRecordParent", "EditorMoveDown", "System.Int32" },
		new System.Collections.Generic.List<string>() { "StatusRecordParent", "EditorRemove", "System.Int32" },
		new System.Collections.Generic.List<string>() { "StatusRecordParent", "IsAllEditorStatusValidate" },
		new System.Collections.Generic.List<string>() { "TableViewPro", "CreateEditorContent", "System.Boolean" },
		new System.Collections.Generic.List<string>() { "TableViewPro", "EditorClearContent" },
		new System.Collections.Generic.List<string>() { "FxSetting", "Contains", "UnityEngine.GameObject" },
		new System.Collections.Generic.List<string>() { "FxSetting", "CreateFxConf", "UnityEngine.GameObject" },
		new System.Collections.Generic.List<string>() { "FxSetting", "GetFxConf", "UnityEngine.GameObject" },
		new System.Collections.Generic.List<string>() { "FxSetting+FxConf", "SetLevel", "System.Int32", "System.Boolean", "System.Boolean" },
		new System.Collections.Generic.List<string>() { "ECS.RVO.PreCalculationJob+InternalCompilerQueryAndHandleData", "AddRequiredComponentTypes", "System.Span`1[Unity.Entities.ComponentType]&" },
		new System.Collections.Generic.List<string>() { "ECS.RVO.PreCalculationJob+InternalCompilerQueryAndHandleData", "GetRequiredComponentTypeCount" },
		new System.Collections.Generic.List<string>() { "ECS.RVO.PreCalculationJob+InternalCompilerQueryAndHandleData", "QueryHasRequiredComponentsForExecuteMethodToRun", "Unity.Entities.EntityQuery&", "System.Span`1[Unity.Entities.ComponentType]&" },
		new System.Collections.Generic.List<string>() { "MB3_MeshBakerCommon", "CopyAssignedSettingsAssetToMySettings" },
		new System.Collections.Generic.List<string>() { "MB3_MeshBakerCommon", "CopyMySettingsToAssignedSettingsAsset" },
		new System.Collections.Generic.List<string>() { "MB3_MeshBakerCommon", "CreateMeshBakerSettingsAsset" },
		new System.Collections.Generic.List<string>() { "PowerUtilities.Texture2DEx", "GetTextureImporter", "UnityEngine.Texture" },
		new System.Collections.Generic.List<string>() { "PowerUtilities.Texture2DEx", "IsCompressionFormat", "UnityEngine.Texture", "System.String" },
		new System.Collections.Generic.List<string>() { "PowerUtilities.Texture2DEx", "SetReadable", "UnityEngine.Texture", "System.Boolean" },
		new System.Collections.Generic.List<string>() { "PowerUtilities.Texture2DEx", "Setting", "UnityEngine.Texture", "System.Action`1[UnityEditor.TextureImporter]" },
		new System.Collections.Generic.List<string>() { "PowerUtilities.Features.GammaUISettingSO", "isShowStates" },
		new System.Collections.Generic.List<string>() { "PowerUtilities.GammaUIParticleControl", "Update" },
		new System.Collections.Generic.List<string>() { "PowerUtilities.InstancedGroupCullingInfo", "ToString" },
		new System.Collections.Generic.List<string>() { "PowerUtilities.LightmapInfoRecorder", "RecordLightmapInfos" },
		new System.Collections.Generic.List<string>() { "PowerUtilities.LightmapInfoRecorder", "RecordLightmapInfos", "UnityEngine.MeshRenderer[]", "UnityEngine.Vector4[]&", "System.Int32[]&" },
		new System.Collections.Generic.List<string>() { "PowerUtilities.RenderFeatures.SRPFeature", "nodeInfo" },
		new System.Collections.Generic.List<string>() { "PowerUtilities.UIDocumentEventRegister", "monos" },
		new System.Collections.Generic.List<string>() { "UnityEngine.U2D.Animation.SpriteResolver", "onDeserializedCallback" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Animations.Rigging.BoneRenderer", "ClearBones" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Animations.Rigging.BoneRenderer", "ExtractBones" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Animations.Rigging.BoneRenderer", "Invalidate" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Animations.Rigging.BoneRenderer", "Reset" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Animations.Rigging.BoneRenderer", "bones" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Animations.Rigging.BoneRenderer", "onAddBoneRenderer" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Animations.Rigging.BoneRenderer", "onRemoveBoneRenderer" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Animations.Rigging.BoneRenderer", "tips" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Animations.Rigging.BoneRenderer", "set_transforms", "UnityEngine.Animations.Rigging.BoneRenderer" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Animations.Rigging.IRigEffectorHolder", "AddEffector", "UnityEngine.Transform", "UnityEngine.Animations.Rigging.RigEffectorData+Style" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Animations.Rigging.IRigEffectorHolder", "ContainsEffector", "UnityEngine.Transform" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Animations.Rigging.IRigEffectorHolder", "RemoveEffector", "UnityEngine.Transform" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Animations.Rigging.IRigEffectorHolder", "effectors" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Animations.Rigging.Rig", "AddEffector", "UnityEngine.Transform", "UnityEngine.Animations.Rigging.RigEffectorData+Style" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Animations.Rigging.Rig", "ContainsEffector", "UnityEngine.Transform" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Animations.Rigging.Rig", "RemoveEffector", "UnityEngine.Transform" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Animations.Rigging.Rig", "effectors" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Animations.Rigging.RigBuilder", "AddEffector", "UnityEngine.Transform", "UnityEngine.Animations.Rigging.RigEffectorData+Style" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Animations.Rigging.RigBuilder", "ContainsEffector", "UnityEngine.Transform" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Animations.Rigging.RigBuilder", "RemoveEffector", "UnityEngine.Transform" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Animations.Rigging.RigBuilder", "effectors" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Animations.Rigging.TwistChainConstraintJobBinder`1", "Update", "UnityEngine.Animations.Rigging.TwistChainConstraintJob", "UnityEngine.Animations.Rigging.TwistChainConstraintJobBinder`1+T&" },
		new System.Collections.Generic.List<string>() { "Unity.Collections.AllocatorManager", "Initialize$SlabAllocator_Try_000000C5$BurstDirectCall" },
		new System.Collections.Generic.List<string>() { "Unity.Collections.AllocatorManager", "Initialize$StackAllocator_Try_000000B7$BurstDirectCall" },
		new System.Collections.Generic.List<string>() { "Unity.Collections.AllocatorManager+AllocatorHandle", "InvalidChildAllocatorIndex" },
		new System.Collections.Generic.List<string>() { "Unity.Collections.AllocatorManager+AllocatorHandle", "InvalidChildSafetyHandleIndex" },
		new System.Collections.Generic.List<string>() { "Unity.Collections.CollectionHelper", "CreateSafetyHandle", "Unity.Collections.AllocatorManager+AllocatorHandle" },
		new System.Collections.Generic.List<string>() { "Unity.Collections.CollectionHelper", "DisposeSafetyHandle", "Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle&" },
		new System.Collections.Generic.List<string>() { "Unity.Collections.CollectionHelper", "SetStaticSafetyId", "Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle&", "System.Int32&" },
		new System.Collections.Generic.List<string>() { "Unity.Collections.CollectionHelper", "SetStaticSafetyId", "Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle&", "System.Int32&", "Unity.Collections.FixedString512Bytes" },
		new System.Collections.Generic.List<string>() { "Unity.Collections.LowLevel.Unsafe.NativeBitArrayUnsafeUtility", "GetAtomicSafetyHandle", "Unity.Collections.NativeBitArray&" },
		new System.Collections.Generic.List<string>() { "Unity.Collections.LowLevel.Unsafe.NativeBitArrayUnsafeUtility", "SetAtomicSafetyHandle", "Unity.Collections.NativeBitArray&", "Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle" },
		new System.Collections.Generic.List<string>() { "Unity.Collections.LowLevel.Unsafe.NativeListUnsafeUtility", "GetAtomicSafetyHandle", "Unity.Collections.NativeList`1&" },
		new System.Collections.Generic.List<string>() { "Unity.Entities.EntityManager+EntityManagerDebug", "GetAuthoringObjectForEntity", "Unity.Entities.Entity" },
		new System.Collections.Generic.List<string>() { "Unity.Entities.EntityManager+EntityManagerDebug", "GetEntitiesForAuthoringObject", "UnityEngine.Component", "Unity.Collections.NativeList`1[Unity.Entities.Entity]" },
		new System.Collections.Generic.List<string>() { "Unity.Entities.EntityManager+EntityManagerDebug", "GetEntitiesForAuthoringObject", "UnityEngine.GameObject", "Unity.Collections.NativeList`1[Unity.Entities.Entity]" },
		new System.Collections.Generic.List<string>() { "Unity.Entities.EntityManager+EntityManagerDebug", "GetEntitiesForAuthoringObject", "UnityEngine.Object", "Unity.Collections.NativeList`1[Unity.Entities.Entity]" },
		new System.Collections.Generic.List<string>() { "Unity.Entities.Internal.InternalCompilerInterface", "GetRefRO", "System.IntPtr", "System.Int32", "Unity.Entities.ComponentTypeHandle`1&" },
		new System.Collections.Generic.List<string>() { "Unity.Entities.Internal.InternalCompilerInterface", "GetRefRW", "System.IntPtr", "System.Int32", "Unity.Entities.ComponentTypeHandle`1&" },
		new System.Collections.Generic.List<string>() { "Unity.Entities.Internal.InternalCompilerInterface", "UnsafeGetUncheckedRefRO", "System.IntPtr", "System.Int32", "Unity.Entities.ComponentTypeHandle`1&" },
		new System.Collections.Generic.List<string>() { "Unity.Entities.Internal.InternalCompilerInterface", "UnsafeGetUncheckedRefRW", "System.IntPtr", "System.Int32", "Unity.Entities.ComponentTypeHandle`1&" },
		new System.Collections.Generic.List<string>() { "Unity.Entities.Serialization.SerializeUtility", "SerializeWorldIntoYAML", "Unity.Entities.EntityManager", "System.IO.StreamWriter", "System.Boolean" },
		new System.Collections.Generic.List<string>() { "Unity.Entities.Serialization.UntypedWeakReferenceId", "CreateFromObjectInstance", "UnityEngine.Object" },
		new System.Collections.Generic.List<string>() { "Unity.Entities.Serialization.UntypedWeakReferenceId", "GetEditorObject", "Unity.Entities.Serialization.UntypedWeakReferenceId" },
		new System.Collections.Generic.List<string>() { "Unity.Entities.Baking.IncrementalBakingLog+JournalBakingInfo", "ChangedAssetsOnDisk" },
		new System.Collections.Generic.List<string>() { "Unity.Entities.IBaker", "GetDotsSettings" },
		new System.Collections.Generic.List<string>() { "Unity.Formats.USD.ImportHelpers", "ImportAsPrefab", "USD.NET.Scene" },
		new System.Collections.Generic.List<string>() { "Unity.Formats.USD.ImportHelpers", "ImportAsTimelineClip", "USD.NET.Scene" },
		new System.Collections.Generic.List<string>() { "Unity.Formats.USD.SceneImporter", "SavePrefab", "UnityEngine.GameObject", "System.String", "System.String", "Unity.Formats.USD.SceneImportOptions" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.CoreUtils", "EnsureFolderTreeInAssetFilePath", "System.String" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.CoreUtils", "LoadAllAssets", "System.String", "System.Boolean" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.DebugUI+Table", "Header" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.DebugUI+Table", "scroll" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.ProbeTouchupVolume", "GetExtents" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.ProbeVolume", "GetExtents" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.ProbeVolume", "GetHashCode" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.ProbeVolumePerSceneData", "StripSupportData" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.ReloadAttribute", "package" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.ReloadAttribute", "paths" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.SceneRenderPipeline", "renderPipelineAsset" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.VolumeComponent", "GetSourceName", "UnityEngine.Component" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.VolumeComponent", "GetSourceTerm" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.VolumeComponent", "TryGetApplyMethodForFieldName", "UnityEditor.SerializedProperty", "System.Action`1[UnityEditor.SerializedProperty]&" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.VolumeComponent", "TryGetRevertMethodForFieldName", "UnityEditor.SerializedProperty", "System.Action`1[UnityEditor.SerializedProperty]&" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.XRGraphics", "tryEnable" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.Universal.ShaderUtils", "GetShaderGUID", "UnityEngine.Rendering.Universal.ShaderPathID" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.Universal.UniversalRenderPipelineAsset", "Create", "UnityEngine.Rendering.Universal.ScriptableRendererData" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.Universal.UniversalRenderPipelineAsset", "autodeskInteractiveMaskedShader" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.Universal.UniversalRenderPipelineAsset", "autodeskInteractiveShader" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.Universal.UniversalRenderPipelineAsset", "autodeskInteractiveTransparentShader" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.Universal.UniversalRenderPipelineAsset", "defaultSpeedTree7Shader" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.Universal.UniversalRenderPipelineAsset", "defaultSpeedTree8Shader" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.Universal.UniversalRenderPipelineAsset", "editorResourcesGUID" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.Universal.UniversalRenderPipelineAsset", "packagePath" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.Universal.UniversalRenderPipelineAsset", "renderPipelineShaderTag" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.Universal.UniversalRenderPipelineAsset", "terrainDetailGrassBillboardShader" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.Universal.UniversalRenderPipelineAsset", "terrainDetailGrassShader" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.Universal.UniversalRenderPipelineAsset", "terrainDetailLitShader" },
		new System.Collections.Generic.List<string>() { "Unity.Scenes.EntityChangeSetSerialization+ResourcePacket", "SerializeResourcePacket", "Unity.Entities.EntityChangeSet", "Unity.Collections.LowLevel.Unsafe.UnsafeAppendBuffer&" },
		new System.Collections.Generic.List<string>() { "Unity.Scenes.SceneSectionStreamingSystem", "Initialize$SceneSectionStreamingSystem_34D9617_LambdaJob_0_Job_RunWithoutJobSystem_000000FE$BurstDirectCall" },
		new System.Collections.Generic.List<string>() { "Unity.Scenes.SubScene", "AllSubScenes" },
		new System.Collections.Generic.List<string>() { "Unity.Scenes.SubScene", "EditableScenePath" },
		new System.Collections.Generic.List<string>() { "Unity.Scenes.SubScene", "EditingScene" },
		new System.Collections.Generic.List<string>() { "Unity.Scenes.SubScene", "HierarchyColor" },
		new System.Collections.Generic.List<string>() { "Unity.Scenes.SubScene", "IsLoaded" },
		new System.Collections.Generic.List<string>() { "Unity.Scenes.SubScene", "SceneAsset" },
		new System.Collections.Generic.List<string>() { "Unity.Scenes.SubScene", "SceneName" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Timeline.AnimationPlayableAsset", "LiveLink" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Timeline.ControlTrack", "GatherProperties", "UnityEngine.Playables.PlayableDirector", "UnityEngine.Timeline.IPropertyCollector" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Timeline.ParticleControlPlayable", "OnPlayableDestroy", "UnityEngine.Playables.Playable" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Animator", "GetCurrentAnimationClipState", "System.Int32" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Animator", "GetNextAnimationClipState", "System.Int32" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Animator", "Stop" },
		new System.Collections.Generic.List<string>() { "UnityEngine.AnimatorControllerParameter", "set_name", "UnityEngine.AnimatorControllerParameter" },
		new System.Collections.Generic.List<string>() { "UnityEngine.AnimatorCullingMode", "BasedOnRenderers" },
		new System.Collections.Generic.List<string>() { "UnityEngine.AssetBundle", "CreateFromFile", "System.String" },
		new System.Collections.Generic.List<string>() { "UnityEngine.AssetBundle", "CreateFromMemoryImmediate", "System.Byte[]" },
		new System.Collections.Generic.List<string>() { "UnityEngine.AssetBundle", "CreateFromMemory", "System.Byte[]" },
		new System.Collections.Generic.List<string>() { "UnityEngine.AudioHighPassFilter", "highpassResonaceQ" },
		new System.Collections.Generic.List<string>() { "UnityEngine.AudioLowPassFilter", "lowpassResonaceQ" },
		new System.Collections.Generic.List<string>() { "UnityEngine.AudioReverbFilter", "lFReference" },
		new System.Collections.Generic.List<string>() { "UnityEngine.AudioSettings", "GetSpatializerPluginNames" },
		new System.Collections.Generic.List<string>() { "UnityEngine.AudioSettings", "SetSpatializerPluginName", "System.String" },
		new System.Collections.Generic.List<string>() { "UnityEngine.AudioSettings", "driverCaps" },
		new System.Collections.Generic.List<string>() { "UnityEngine.AudioSource", "DisableGamepadOutput" },
		new System.Collections.Generic.List<string>() { "UnityEngine.AudioSource", "GamepadSpeakerSupportsOutputType", "UnityEngine.GamepadSpeakerOutputType" },
		new System.Collections.Generic.List<string>() { "UnityEngine.AudioSource", "PlayOnGamepad", "System.Int32" },
		new System.Collections.Generic.List<string>() { "UnityEngine.AudioSource", "SetGamepadSpeakerMixLevelDefault", "System.Int32" },
		new System.Collections.Generic.List<string>() { "UnityEngine.AudioSource", "SetGamepadSpeakerMixLevel", "System.Int32", "System.Int32" },
		new System.Collections.Generic.List<string>() { "UnityEngine.AudioSource", "SetGamepadSpeakerRestrictedAudio", "System.Int32", "System.Boolean" },
		new System.Collections.Generic.List<string>() { "UnityEngine.AudioSource", "gamepadSpeakerOutputType" },
		new System.Collections.Generic.List<string>() { "UnityEngine.AudioSource", "pan" },
		new System.Collections.Generic.List<string>() { "UnityEngine.AudioSource", "panLevel" },
		new System.Collections.Generic.List<string>() { "Unity.Collections.LowLevel.Unsafe.NativeArrayUnsafeUtility", "GetAtomicSafetyHandle", "Unity.Collections.NativeArray`1" },
		new System.Collections.Generic.List<string>() { "Unity.Collections.LowLevel.Unsafe.NativeArrayUnsafeUtility", "SetAtomicSafetyHandle", "Unity.Collections.NativeArray`1&", "Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle" },
		new System.Collections.Generic.List<string>() { "Unity.Collections.LowLevel.Unsafe.NativeSliceUnsafeUtility", "GetAtomicSafetyHandle", "Unity.Collections.NativeSlice`1" },
		new System.Collections.Generic.List<string>() { "Unity.Collections.LowLevel.Unsafe.NativeSliceUnsafeUtility", "SetAtomicSafetyHandle", "Unity.Collections.NativeSlice`1&", "Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle" },
		new System.Collections.Generic.List<string>() { "Unity.Jobs.JobHandle", "Equals", "System.Object" },
		new System.Collections.Generic.List<string>() { "Unity.Jobs.JobHandle", "GetHashCode" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Caching", "ResetNoBackupFlag", "System.String", "System.Int32" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Caching", "ResetNoBackupFlag", "System.String", "UnityEngine.Hash128" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Caching", "ResetNoBackupFlag", "UnityEngine.CachedAssetBundle" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Caching", "SetNoBackupFlag", "System.String", "System.Int32" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Caching", "SetNoBackupFlag", "System.String", "UnityEngine.Hash128" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Caching", "SetNoBackupFlag", "UnityEngine.CachedAssetBundle" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Camera", "DoClear" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Camera", "GetScreenHeight" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Camera", "GetScreenWidth" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Camera", "GetStereoProjectionMatrices" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Camera", "GetStereoViewMatrices" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Camera", "ResetFieldOfView" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Camera", "SetStereoProjectionMatrices", "UnityEngine.Matrix4x4", "UnityEngine.Matrix4x4" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Camera", "SetStereoViewMatrices", "UnityEngine.Matrix4x4", "UnityEngine.Matrix4x4" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Camera", "far" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Camera", "fov" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Camera", "hdr" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Camera", "isOrthoGraphic" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Camera", "mainCamera" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Camera", "near" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Camera", "stereoMirrorMode" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Component", "animation" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Component", "audio" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Component", "camera" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Component", "collider" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Component", "collider2D" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Component", "constantForce" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Component", "hingeJoint" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Component", "light" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Component", "networkView" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Component", "particleSystem" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Component", "renderer" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Component", "rigidbody" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Component", "rigidbody2D" },
		new System.Collections.Generic.List<string>() { "UnityEngine.DrivenRectTransformTracker", "StartRecordingUndo" },
		new System.Collections.Generic.List<string>() { "UnityEngine.DrivenRectTransformTracker", "StopRecordingUndo" },
		new System.Collections.Generic.List<string>() { "UnityEngine.GameObject", "AddComponent", "System.String" },
		new System.Collections.Generic.List<string>() { "UnityEngine.GameObject", "PlayAnimation", "UnityEngine.Object" },
		new System.Collections.Generic.List<string>() { "UnityEngine.GameObject", "SampleAnimation", "UnityEngine.Object", "System.Single" },
		new System.Collections.Generic.List<string>() { "UnityEngine.GameObject", "StopAnimation" },
		new System.Collections.Generic.List<string>() { "UnityEngine.GameObject", "animation" },
		new System.Collections.Generic.List<string>() { "UnityEngine.GameObject", "audio" },
		new System.Collections.Generic.List<string>() { "UnityEngine.GameObject", "camera" },
		new System.Collections.Generic.List<string>() { "UnityEngine.GameObject", "collider" },
		new System.Collections.Generic.List<string>() { "UnityEngine.GameObject", "collider2D" },
		new System.Collections.Generic.List<string>() { "UnityEngine.GameObject", "constantForce" },
		new System.Collections.Generic.List<string>() { "UnityEngine.GameObject", "hingeJoint" },
		new System.Collections.Generic.List<string>() { "UnityEngine.GameObject", "light" },
		new System.Collections.Generic.List<string>() { "UnityEngine.GameObject", "networkView" },
		new System.Collections.Generic.List<string>() { "UnityEngine.GameObject", "particleSystem" },
		new System.Collections.Generic.List<string>() { "UnityEngine.GameObject", "renderer" },
		new System.Collections.Generic.List<string>() { "UnityEngine.GameObject", "rigidbody" },
		new System.Collections.Generic.List<string>() { "UnityEngine.GameObject", "rigidbody2D" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Graphics", "CreateGPUFence" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Graphics", "CreateGPUFence", "UnityEngine.Rendering.SynchronisationStage" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Graphics", "DrawMesh", "UnityEngine.Mesh", "UnityEngine.Matrix4x4" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Graphics", "DrawMesh", "UnityEngine.Mesh", "UnityEngine.Matrix4x4", "System.Int32" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Graphics", "DrawMesh", "UnityEngine.Mesh", "UnityEngine.Vector3", "UnityEngine.Quaternion" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Graphics", "DrawMesh", "UnityEngine.Mesh", "UnityEngine.Vector3", "UnityEngine.Quaternion", "System.Int32" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Graphics", "DrawProceduralIndirect", "UnityEngine.MeshTopology", "UnityEngine.ComputeBuffer", "System.Int32" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Graphics", "DrawProcedural", "UnityEngine.MeshTopology", "System.Int32", "System.Int32" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Graphics", "WaitOnGPUFence", "UnityEngine.Rendering.GPUFence" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Graphics", "WaitOnGPUFence", "UnityEngine.Rendering.GPUFence", "UnityEngine.Rendering.SynchronisationStage" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Graphics", "deviceName" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Graphics", "deviceVendor" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Graphics", "deviceVersion" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Light", "SetLightDirty" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Light", "alreadyLightmapped" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Light", "areaSize" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Light", "isBaked" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Light", "lightmapBakeType" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Light", "lightmappingMode" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Light", "shadowAngle" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Light", "shadowRadius" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightProbeGroup", "dering" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightProbeGroup", "set_probePositions", "UnityEngine.LightProbeGroup" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "albedoBoost" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "ao" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "aoExponentDirect" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "aoExponentIndirect" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "aoMaxDistance" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "autoGenerate" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "bounces" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "compressLightmaps" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "denoiserTypeAO" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "denoiserTypeDirect" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "denoiserTypeIndirect" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "directSampleCount" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "directionalityMode" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "environmentImportanceSampling" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "environmentSampleCount" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "exportTrainingData" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "extractAO" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "filterTypeAO" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "filterTypeDirect" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "filterTypeIndirect" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "filteringAtrousPositionSigmaAO" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "filteringAtrousPositionSigmaDirect" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "filteringAtrousPositionSigmaIndirect" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "filteringGaussRadiusAO" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "filteringGaussRadiusDirect" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "filteringGaussRadiusIndirect" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "filteringGaussianRadiusAO" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "filteringGaussianRadiusDirect" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "filteringGaussianRadiusIndirect" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "filteringMode" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "finalGather" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "finalGatherFiltering" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "finalGatherRayCount" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "indirectResolution" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "indirectSampleCount" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "indirectScale" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "lightProbeSampleCountMultiplier" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "lightmapCompression" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "lightmapMaxSize" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "lightmapPadding" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "lightmapResolution" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "lightmapper" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "maxBounces" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "minBounces" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "mixedBakeMode" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "prioritizeView" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "respectSceneVisibilityWhenBakingGI" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "russianRouletteStartBounce" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "sampling" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightingSettings", "trainingDataDestination" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightmapData", "lightmap" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightmapData", "lightmapFar" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightmapData", "lightmapNear" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightmapsMode", "Directional" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightmapsMode", "Dual" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightmapsMode", "SeparateDirectional" },
		new System.Collections.Generic.List<string>() { "UnityEngine.LightmapsMode", "Single" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Material", "ApplyPropertyOverride", "UnityEngine.Material", "System.Int32", "System.Boolean" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Material", "ApplyPropertyOverride", "UnityEngine.Material", "System.String", "System.Boolean" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Material", "IsChildOf", "UnityEngine.Material" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Material", "IsPropertyLockedByAncestor", "System.Int32" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Material", "IsPropertyLockedByAncestor", "System.String" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Material", "IsPropertyLocked", "System.Int32" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Material", "IsPropertyLocked", "System.String" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Material", "IsPropertyOverriden", "System.Int32" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Material", "IsPropertyOverriden", "System.String" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Material", "RevertAllPropertyOverrides" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Material", "RevertPropertyOverride", "System.Int32" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Material", "RevertPropertyOverride", "System.String" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Material", "SetPropertyLock", "System.Int32", "System.Boolean" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Material", "SetPropertyLock", "System.String", "System.Boolean" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Material", "isVariant" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Material", "parent" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Mesh", "uv1" },
		new System.Collections.Generic.List<string>() { "UnityEngine.MeshRenderer", "receiveGI" },
		new System.Collections.Generic.List<string>() { "UnityEngine.MeshRenderer", "scaleInLightmap" },
		new System.Collections.Generic.List<string>() { "UnityEngine.MeshRenderer", "stitchLightmapSeams" },
		new System.Collections.Generic.List<string>() { "UnityEngine.MonoBehaviour", "runInEditMode" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Playables.PlayableGraph", "GetEditorName" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Projector", "isOrthoGraphic" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Projector", "orthoGraphicSize" },
		new System.Collections.Generic.List<string>() { "UnityEngine.QualitySettings", "GetActiveQualityLevelsForPlatformCount", "System.String" },
		new System.Collections.Generic.List<string>() { "UnityEngine.QualitySettings", "GetActiveQualityLevelsForPlatform", "System.String" },
		new System.Collections.Generic.List<string>() { "UnityEngine.QualitySettings", "GetAllRenderPipelineAssetsForPlatform", "System.String", "System.Collections.Generic.List`1[UnityEngine.Rendering.RenderPipelineAsset]&" },
		new System.Collections.Generic.List<string>() { "UnityEngine.QualitySettings", "GetRenderPipelineAssetsForPlatform", "System.String", "System.Collections.Generic.HashSet`1&" },
		new System.Collections.Generic.List<string>() { "UnityEngine.QualitySettings", "IsPlatformIncluded", "System.String", "System.Int32" },
		new System.Collections.Generic.List<string>() { "UnityEngine.QualitySettings", "TryExcludePlatformAt", "System.String", "System.Int32", "System.Exception&" },
		new System.Collections.Generic.List<string>() { "UnityEngine.QualitySettings", "TryIncludePlatformAt", "System.String", "System.Int32", "System.Exception&" },
		new System.Collections.Generic.List<string>() { "UnityEngine.RenderTexture", "SetBorderColor", "UnityEngine.Color" },
		new System.Collections.Generic.List<string>() { "UnityEngine.RenderTexture", "generateMips" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Renderer", "lightProbeAnchor" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Renderer", "lightmapTilingOffset" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.GraphicsSettings", "set_videoShadersIncludeMode", "UnityEngine.Rendering.GraphicsSettings" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.RenderPipelineAsset", "terrainBrushPassIndex" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Rendering.ScriptableRenderContext", "EmitWorldGeometryForSceneView", "UnityEngine.Camera" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Resources", "LoadAssetAtPath", "System.String" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Resources", "LoadAssetAtPath", "System.String", "System.Type" },
		new System.Collections.Generic.List<string>() { "UnityEngine.RuntimePlatform", "BB10Player" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Screen", "GetResolution" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Screen", "showCursor" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Shader", "SetGlobalTexGenMode", "System.String", "UnityEngine.TexGenMode" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Shader", "SetGlobalTextureMatrixName", "System.String", "System.String" },
		new System.Collections.Generic.List<string>() { "UnityEngine.SystemLanguage", "Hugarian" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Texture", "imageContentsHash" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Texture2D", "alphaIsTransparency" },
		new System.Collections.Generic.List<string>() { "UnityEngine.TextureFormat", "ATC_RGB4" },
		new System.Collections.Generic.List<string>() { "UnityEngine.TextureFormat", "ATC_RGBA8" },
		new System.Collections.Generic.List<string>() { "UnityEngine.TextureFormat", "PVRTC_2BPP_RGB" },
		new System.Collections.Generic.List<string>() { "UnityEngine.TextureFormat", "PVRTC_2BPP_RGBA" },
		new System.Collections.Generic.List<string>() { "UnityEngine.TextureFormat", "PVRTC_4BPP_RGB" },
		new System.Collections.Generic.List<string>() { "UnityEngine.TextureFormat", "PVRTC_4BPP_RGBA" },
		new System.Collections.Generic.List<string>() { "UnityEngine.TextureMipmapLimitGroups", "CreateGroup", "System.String" },
		new System.Collections.Generic.List<string>() { "UnityEngine.TextureMipmapLimitGroups", "RemoveGroup", "System.String" },
		new System.Collections.Generic.List<string>() { "UnityEngine.GUIStyleState", "scaledBackgrounds" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Input", "IsJoystickPreconfigured", "System.String" },
		new System.Collections.Generic.List<string>() { "UnityEngine.ParticleCollisionEvent", "collider" },
		new System.Collections.Generic.List<string>() { "UnityEngine.ParticleSystem", "safeCollisionEventSize" },
		new System.Collections.Generic.List<string>() { "UnityEngine.ParticleSystem+MinMaxCurve", "curveScalar" },
		new System.Collections.Generic.List<string>() { "UnityEngine.ParticleSystemForceField", "FindAll" },
		new System.Collections.Generic.List<string>() { "UnityEngine.ParticleSystemRenderer", "supportsMeshInstancing" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Terrain", "bakeLightProbesForTrees" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Terrain", "deringLightProbesForTrees" },
		new System.Collections.Generic.List<string>() { "UnityEngine.TerrainData", "GetClampedDetailPatches", "System.Single" },
		new System.Collections.Generic.List<string>() { "UnityEngine.TerrainData", "SetTerrainLayersRegisterUndo", "UnityEngine.TerrainLayer[]", "System.String" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Tilemaps.Tilemap", "ClearAllEditorPreviewTiles" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Tilemaps.Tilemap", "EditorPreviewBoxFill", "UnityEngine.Vector3Int", "UnityEngine.Object", "System.Int32", "System.Int32", "System.Int32", "System.Int32" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Tilemaps.Tilemap", "EditorPreviewFloodFill", "UnityEngine.Vector3Int", "UnityEngine.Tilemaps.TileBase" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Tilemaps.Tilemap", "GetEditorPreviewColor", "UnityEngine.Vector3Int" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Tilemaps.Tilemap", "GetEditorPreviewSprite", "UnityEngine.Vector3Int" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Tilemaps.Tilemap", "GetEditorPreviewTileFlags", "UnityEngine.Vector3Int" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Tilemaps.Tilemap", "GetEditorPreviewTile", "UnityEngine.Vector3Int" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Tilemaps.Tilemap", "GetEditorPreviewTransformMatrix", "UnityEngine.Vector3Int" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Tilemaps.Tilemap", "HasEditorPreviewTile", "UnityEngine.Vector3Int" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Tilemaps.Tilemap", "SetEditorPreviewColor", "UnityEngine.Vector3Int", "UnityEngine.Color" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Tilemaps.Tilemap", "SetEditorPreviewTile", "UnityEngine.Vector3Int", "UnityEngine.Tilemaps.TileBase" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Tilemaps.Tilemap", "SetEditorPreviewTransformMatrix", "UnityEngine.Vector3Int", "UnityEngine.Matrix4x4" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Tilemaps.Tilemap", "editorPreviewOrigin" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Tilemaps.Tilemap", "editorPreviewSize" },
		new System.Collections.Generic.List<string>() { "UnityEngine.UI.DefaultControls", "set_factory", "UnityEngine.UI.DefaultControls" },
		new System.Collections.Generic.List<string>() { "UnityEngine.UI.Graphic", "OnRebuildRequested" },
		new System.Collections.Generic.List<string>() { "UnityEngine.UI.InputField", "caretSelectPosition" },
		new System.Collections.Generic.List<string>() { "UnityEngine.UI.Text", "OnRebuildRequested" },
		new System.Collections.Generic.List<string>() { "UnityEngine.CanvasRenderer", "onRequestRebuild" },
		new System.Collections.Generic.List<string>() { "UnityEngine.Networking.UnityWebRequest", "isError" },
		new System.Collections.Generic.List<string>() { "UnityEngine.WWW", "oggVorbis" },
		new System.Collections.Generic.List<string>() { "FpAnimation.FpAnimationCommonTrigger+FpAnimTrigger", "Finish" },
		new System.Collections.Generic.List<string>() { "FpAnimation.FpAnimationCommonTrigger+FpAnimTrigger", "OnFinish" },
		new System.Collections.Generic.List<string>() { "FpAnimation.FpAnimationCommonTrigger+FpAnimTrigger", "OnPreview" },
		new System.Collections.Generic.List<string>() { "FpAnimation.FpAnimationCommonTrigger+FpAnimTrigger", "OnReset" },
		new System.Collections.Generic.List<string>() { "FpAnimation.FpAnimationCommonTrigger+FpAnimTrigger", "Preview" },
		new System.Collections.Generic.List<string>() { "FpAnimation.FpAnimationCommonTrigger+FpAnimTrigger", "Reset" },
		new System.Collections.Generic.List<string>() { "FpAnimation.FpAnimationCommonTrigger+FpAnimTrigger", "triggerName" },
		new System.Collections.Generic.List<string>() { "FpAnimation.FpAnimator", "RandomColor" },
		new System.Collections.Generic.List<string>() { "FpAnimation.FpAnimator", "expand" },
		new System.Collections.Generic.List<string>() { "FpAnimation.FpAnimator", "inspectBgColor" },
		new System.Collections.Generic.List<string>() { "FpAnimation.FpAnimator", "inspectDefaultColor" },
		new System.Collections.Generic.List<string>() { "FpImage", "editorPath" },
		new System.Collections.Generic.List<string>() { "Spine.Unity.BlendModeMaterials", "TransferSettingsFrom", "Spine.Unity.BlendModeMaterialsAsset" },
		new System.Collections.Generic.List<string>() { "Spine.Unity.BlendModeMaterials", "UpdateBlendmodeMaterialsRequiredState", "Spine.SkeletonData" },
		new System.Collections.Generic.List<string>() { "Spine.Unity.SkeletonDataAsset", "errorIfSkeletonFileNullGlobal" },
		new System.Collections.Generic.List<string>() { "Spine.Unity.SkeletonDataCompatibility", "DisplayCompatibilityProblem", "System.String", "UnityEngine.TextAsset" },
		new System.Collections.Generic.List<string>() { "Spine.Unity.SkeletonDataCompatibility", "GetCompatibilityProblemInfo", "Spine.Unity.SkeletonDataCompatibility+VersionInfo" },
		new System.Collections.Generic.List<string>() { "Spine.Unity.SkeletonDataCompatibility", "GetVersionInfo", "UnityEngine.TextAsset", "System.Boolean&", "System.String&" },
		new System.Collections.Generic.List<string>() { "Spine.Unity.SkeletonDataCompatibility", "IsJsonFile", "UnityEngine.TextAsset" },
		new System.Collections.Generic.List<string>() { "Spine.Unity.SkeletonRenderer", "EditorSkipSkinSync" },
		new System.Collections.Generic.List<string>() { "Spine.Unity.SkeletonRenderer", "EditorUpdateMeshFilterHideFlags" },
		new System.Collections.Generic.List<string>() { "Spine.Unity.SkeletonRenderer", "Start" },
		new System.Collections.Generic.List<string>() { "Spine.Unity.SkeletonRenderer", "fixPrefabOverrideViaMeshFilter" },
		new System.Collections.Generic.List<string>() { "Spine.Unity.SkeletonRenderer", "fixPrefabOverrideViaMeshFilterGlobal" },
		new System.Collections.Generic.List<string>() { "Spine.Unity.SpineSpriteAtlasAsset", "AccessPackedTextureEditor", "UnityEngine.U2D.SpriteAtlas" },
		new System.Collections.Generic.List<string>() { "Spine.Unity.SpineSpriteAtlasAsset", "AnySpriteAtlasNeedsRegionsLoaded" },
		new System.Collections.Generic.List<string>() { "Spine.Unity.SpineSpriteAtlasAsset", "LoadRegionsInEditorPlayMode" },
		new System.Collections.Generic.List<string>() { "Spine.Unity.SpineSpriteAtlasAsset", "RegionsNeedLoading" },
		new System.Collections.Generic.List<string>() { "Spine.Unity.SpineSpriteAtlasAsset", "UpdateByStartingEditorPlayMode" },
		new System.Collections.Generic.List<string>() { "Spine.Unity.SpineSpriteAtlasAsset", "UpdateWhenEditorPlayModeStarted" },

	};
}
