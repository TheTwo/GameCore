---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hao.wu.ss
--- DateTime: 2023/8/5 15:24
---

--- scene: scene_child_pet_info

local BaseUIComponent = require('BaseUIComponent')
local Delegate = require('Delegate')
local ModuleRefer = require("ModuleRefer")
local I18N = require("I18N")
local UIHelper = require('UIHelper')
local ConfigRefer = require("ConfigRefer")
local UIMediatorNames = require("UIMediatorNames")
local HeroUIUtilities = require("HeroUIUtilities")
local LuaReusedComponentPool = require('LuaReusedComponentPool')
local EventConst = require('EventConst')

---@class UIPetInfoComponent : BaseUIComponent
local UIPetInfoComponent = class('UIPetInfoComponent', BaseUIComponent)

---@class UIPetInfoComponentData
---@field petId number
---@field forbidStrengthen boolean
---@field petInfo wds.PetInfo
---@field showAsGetPet boolean

local ATTR_DISP_ID_POWER = 100
local SP_PET_RANK_BASE = "sp_hero_main_base_circle_0"

local INDEX_SE_SKILL = 1
local INDEX_SLG_SKILL = 2
local INDEX_SOC_SKILL = 3

function UIPetInfoComponent:ctor()
	self._petId = -1
	---@type fun(id: number)
	self._dataUpdateCallback = nil
end

function UIPetInfoComponent:OnCreate(param)
	self:InitObjects()
end

function UIPetInfoComponent:OnShow()
	g_Game.EventManager:AddListener(EventConst.PET_RENAME, Delegate.GetOrCreate(self, self.RefreshPetName))
end

function UIPetInfoComponent:OnHide()
	g_Game.EventManager:RemoveListener(EventConst.PET_RENAME, Delegate.GetOrCreate(self, self.RefreshPetName))
end

function UIPetInfoComponent:InitObjects()
	--self.powerGroup = self:GameObject("p_power")
	self.powerText = self:Text("p_text_power")
	self.qualityBase = self:Image("p_base_quality")
	self.rankBase = self:Image("p_base_strengthen")

	self.textLevel = self:Text("p_text_lv", "pet_param5")
	self.textLevelNumber = self:Text("p_text_lv_number")
	self.textMaxLevelNumber = self:Text("p_text_lv_number_top")
	self.textName = self:Text("p_text_name")

	self.attrTable = self:TableViewPro("p_table_info")
	self.attrTableCloseButton = self:Button("p_btn_info", Delegate.GetOrCreate(self, self.OnAttrTableCloseButtonClick))
	self.attrDetailButton = self:Button("p_btn_detail", Delegate.GetOrCreate(self, self.OnAttrDetailButtonClick))

	self.skillText = self:Text("p_text_skill", "hero_card")

	-- self.rankButton = self:Button("p_btn_strengthen", Delegate.GetOrCreate(self, self.OnRankButtonClick))

	self.aptitudeButton1 = self:Button("p_btn_aptitude_1", Delegate.GetOrCreate(self, self.OnAptitude1Click))
	self.aptitudeButton2 = self:Button("p_btn_aptitude_2", Delegate.GetOrCreate(self, self.OnAptitude2Click))
	self.aptitudeButton3 = self:Button("p_btn_aptitude_3", Delegate.GetOrCreate(self, self.OnAptitude3Click))

	self.starBase1 = self:Image("p_base_1")
	self.starIcon1 = self:Image("p_icon_aptitude_1")
	self.starText1 = self:Text("p_text_aptitude_1", ConfigRefer.PetConsts:PetAttrCtgrEstm1())
	self.starBase2 = self:Image("p_base_2")
	self.starIcon2 = self:Image("p_icon_aptitude_2")
	self.starText2 = self:Text("p_text_aptitude_2", ConfigRefer.PetConsts:PetAttrCtgrEstm2())
	self.starBase3 = self:Image("p_base_3")
	self.starIcon3 = self:Image("p_icon_aptitude_3")
	self.starText3 = self:Text("p_text_aptitude_3", ConfigRefer.PetConsts:PetAttrCtgrEstm3())
	self.compPosition = self:LuaObject('p_position')
	self.compType = self:LuaObject('p_type_0')
	---@type BaseSkillIcon
	self.fixedSkill = self:LuaObject("child_item_skill_1")

	---@type BaseSkillIcon
	self.dropSkill = self:LuaObject("child_item_skill")

	self.imgIconStrengthen = self:Image('p_icon_strengthen')
	self.goAttr = self:GameObject('attr')
	self.imgIconAttr = self:Image('p_icon_attr')
    self.textAttrName = self:Text('p_text_attr_name')
    self.textAttrNum = self:Text('p_text_attr_num')
    self.imgIconSatr1 = self:Image('p_icon_satr_1')
    self.imgIconSatr2 = self:Image('p_icon_satr_2')
    self.imgIconSatr3 = self:Image('p_icon_satr_3')
    self.imgIconSatr4 = self:Image('p_icon_satr_4')
    self.imgIconSatr5 = self:Image('p_icon_satr_5')
    self.imgStars = {self.imgIconSatr1, self.imgIconSatr2, self.imgIconSatr3, self.imgIconSatr4, self.imgIconSatr5}
	self.goAttr:SetActive(false)
	---@see UIHeroAssociateIconComponent
	self.luaStyleIcon = self:LuaObject('child_icon_style')
	self.imageWorkTypeIcon = self:Image('p_icon_type_main')
	self.textWorkTypeLv = self:Text('p_text_type_lv_main')
	---@type CS.UnityEngine.UI.Image
	self.workTypeImgs = {}
	---@type CS.UnityEngine.UI.Text
	self.workTyprTexts = {}
	---@see PetGeneComp
	self.luaPetGene = self:LuaObject('child_pet_dna')

	---星级
	---@type PetStarLevelComponent
	self.group_star = self:LuaBaseComponent('group_star')
    ---工种
    ---@type UIPetWorkTypeComp
    self.p_type_main = self:LuaBaseComponent('p_type_main')
    self.p_layout_type_main = self:Transform('p_layout_type_main')
    self.pool_type_info_main = LuaReusedComponentPool.new(self.p_type_main, self.p_layout_type_main)

    self.btnUpgrade = self:Button('p_btn_upgrade', Delegate.GetOrCreate(self, self.OnUpgradeClick))

	--战斗标签
	self.child_pet_lable_feature = self:LuaObject('child_pet_lable_feature')
	self.p_text_dna = self:Text('p_text_dna', 'pet_gene_name')
	self.p_group_dna = self:GameObject('p_group_dna')
	self.p_group_dna:SetVisible(true)
end

---@param data UIPetInfoComponentData
function UIPetInfoComponent:OnFeedData(data)
	self._petId = data and data.petId or 0
	self._showAsGetPet = data and data.showAsGetPet or false
	-- if data.forbidStrengthen then
	-- 	self.rankButton.interactable = false
	-- end
	self.petInfo = (data or {}).petInfo or {}
	self:RefreshUI()
end

---@param callback fun(id: number)
function UIPetInfoComponent:SetDataUpdateCallback(callback)
	self._dataUpdateCallback = callback
end

function UIPetInfoComponent:RefreshUI()
	for _, img in ipairs(self.workTypeImgs) do
		UIHelper.DeleteUIGameObject(img.gameObject)
		self.workTypeImgs = {}
	end
	for _, text in ipairs(self.workTyprTexts) do
		UIHelper.DeleteUIGameObject(text.gameObject)
		self.workTyprTexts = {}
	end
	if (not self._petId or self._petId <= 0) then return end
	local pet = ModuleRefer.PetModule:GetPetByID(self._petId)
	local petCfg = ModuleRefer.PetModule:GetPetCfg(pet.ConfigId)
	self.textName.text = ModuleRefer.PetModule:GetQualityStr(petCfg:Quality(),I18N.Get(petCfg:Name()))
	self.textLevelNumber.text = pet.Level
	local maxLevel = ModuleRefer.PetModule:GetMaxLevel()
	self.textMaxLevelNumber.text = "/" .. maxLevel
	self.qualityBase.color = UIHelper.TryParseHtmlString(HeroUIUtilities.GetQualityColor(petCfg:Quality()))
	local curPetBattleType = ModuleRefer.PetModule:GetPetBattleLabel(pet.ConfigId)
	local petTier = ModuleRefer.PetModule:GetPetTier(pet.ConfigId)

	-- 掉落技能
	if self.dropSkill then
		local skillBase = ConfigRefer.PetSkillBase:Find(petCfg:RefSkillTemplate())
		local dropSkill = skillBase and skillBase:DropSkill() or 0
		self.dropSkill:FeedData({index = dropSkill,
			skillLevel = 1,
			quality = petCfg:Quality(),
			isPet = true,
			clickCallBack = function()
				g_Game.UIManager:Open(UIMediatorNames.UICommonPopupCardDetailMediator, {type = 6, cfgId = dropSkill})
			end
		})
	end

	-- 固定技能
    local skillId = petCfg:SLGSkillID(2)
    local slgSkillCell = ConfigRefer.SlgSkillInfo:Find(skillId)
    self.fixedSkill:FeedData({
        skillId = slgSkillCell:SkillId(),
        index = slgSkillCell:SkillId(),
        skillLevel = 1,
        isPetFix = true,
        quality = petCfg:Quality(),
        clickCallBack = Delegate.GetOrCreate(self, self.OnSlgSkillClick),
    })


	-- 属性
	-- 战力
	local power = ModuleRefer.PetModule:GetPetAttrDisplayValue(self._petId, ATTR_DISP_ID_POWER)
	self.powerText.text = CS.System.String.Format("{0:#,0}", power)

	-- 其他属性
	self.attrTable:Clear()
	for i = 1, ConfigRefer.PetConsts:PetAttrUIShowListLength() do
		local attrId = ConfigRefer.PetConsts:PetAttrUIShowList(i)
		local dispConf = ConfigRefer.AttrDisplay:Find(attrId)
		local value, text = ModuleRefer.PetModule:GetPetAttrDisplayValue(self._petId, attrId)
		if (ModuleRefer.AttrModule:IsAttrValueShow(dispConf, value)) then
			self.attrTable:AppendData({
				index = i,
				text = I18N.Get(text),
				value = tostring(value),
			})
		end
	end

    -- 风格
	local tagId = petCfg:AssociatedTagInfo()
	self.luaStyleIcon:FeedData({
		tagId = tagId,
	})

    -- 基因
    self.luaPetGene:SetVisible(self.petInfo ~= nil)
    if self.petInfo then
        self.luaPetGene:FeedData(self.petInfo)
    end

    -- 星级展示
	if self._showAsGetPet then
		self:SimpleInitStart()
		self:DelayExecute(Delegate.GetOrCreate(self, self.SetStars), 1.1)
	else
    	self:SetStars()
	end

    -- 工种
    self.pool_type_info_main:HideAll()
    for i = 1, petCfg:PetWorksLength() do
        local petWorkCfg = ConfigRefer.PetWork:Find(petCfg:PetWorks(i))
        local workType = petWorkCfg:Type()
        local level = petWorkCfg:Level()
        local param = {level = level, name = ModuleRefer.PetModule:GetPetWorkTypeStr(workType), icon = ModuleRefer.PetModule:GetPetWorkTypeIcon(workType)}
        local itemMain = self.pool_type_info_main:GetItem().Lua
        itemMain:FeedData(param)
    end

	-- 战斗标签
	if self.child_pet_lable_feature then
		local petTypeCfg = ModuleRefer.PetModule:GetTypeCfg(pet.Type)
		local petTagId = petTypeCfg:PetTagDisplay()
		if petTagId and petTagId > 0 then
			self.child_pet_lable_feature:SetVisible(true)
			self.child_pet_lable_feature:FeedData(petTagId)
		else
			self.child_pet_lable_feature:SetVisible(false)
		end
	end
end

function UIPetInfoComponent:OnSlgSkillClick(param)
    g_Game.UIManager:Open(UIMediatorNames.UICommonPopupCardDetailMediator, {type = 2, cfgId = param.index, level = 1})
end

function UIPetInfoComponent:OnAttrTableCloseButtonClick()
	self.attrTableCloseButton.gameObject:SetActive(false)
	self.attrTable.gameObject:SetActive(false)
end

function UIPetInfoComponent:OnAttrDetailButtonClick()
	-- self.attrTable.gameObject:SetActive(true)
	-- self.attrTableCloseButton.gameObject:SetActive(true)
	g_Game.UIManager:Open(UIMediatorNames.UIPetMainPopupMediator, {petId = self._petId})
end

-- function UIPetInfoComponent:OnRankButtonClick()
-- 	g_Game.UIManager:Open(UIMediatorNames.UIPetRankUpMediator, {
-- 		petId = self._petId,
-- 		closeCallback = self._dataUpdateCallback,
-- 	})
-- end

function UIPetInfoComponent:OnSeCardClick()
	local pet = ModuleRefer.PetModule:GetPetByID(self._petId)
	local petCfg = ModuleRefer.PetModule:GetPetCfg(pet.ConfigId)
	local cardId = petCfg:SESkillID(2)
	local slgSkillId = petCfg:SLGSkillID(2)
	local slgSkillCell = ConfigRefer.SlgSkillInfo:Find(slgSkillId)
	local param = {}
	param.type = 4
	param.slgSkillId = slgSkillCell:SkillId()
	param.cardId = cardId
	param.isLock = false
	param.skillLevel = 1
	param.slgSkillCell = slgSkillCell
	g_Game.UIManager:Open(UIMediatorNames.UICommonPopupCardDetailMediator, param)
end

-- function UIPetInfoComponent:OnSlgSkillClick()
-- 	local pet = ModuleRefer.PetModule:GetPetByID(self._petId)
-- 	local petCfg = ModuleRefer.PetModule:GetPetCfg(pet.ConfigId)
-- 	local cardId = petCfg:SESkillID(1)
-- 	local slgSkillId = petCfg:SLGSkillID(1)
-- 	local slgSkillCell = ConfigRefer.SlgSkillInfo:Find(slgSkillId)
-- 	local param = {}
-- 	param.type = 4
-- 	param.slgSkillId = slgSkillCell:SkillId()
-- 	param.cardId = cardId
-- 	param.isLock = false
-- 	param.skillLevel = 1
-- 	param.slgSkillCell = slgSkillCell
-- 	g_Game.UIManager:Open(UIMediatorNames.UICommonPopupCardDetailMediator, param)
-- end

function UIPetInfoComponent:OnSocSkillClick(skillId, skillLevel)
	g_Game.UIManager:Open(UIMediatorNames.UICommonPopupCardDetailMediator, {
		type = 3,
		cfgId = skillId,
		level = skillLevel or 1,
	})
end

function UIPetInfoComponent:OnUpgradeClick()
	if self._petId then
		g_Game.UIManager:Open(UIMediatorNames.UIPetMediator, {hideRelease = true, petId = self._petId})
	else
		g_Game.UIManager:Open(UIMediatorNames.UIPetMediator, {hideRelease = true})
	end
end

-- function UIPetInfoComponent:OnAptitude1Click()
-- 	ModuleRefer.ToastModule:ShowTextToast({
-- 		content = I18N.Get(ConfigRefer.PetConsts:PetAttrEstmCtgrAtkDes()),
-- 		clickTransform = self.aptitudeButton1.gameObject.transform,
-- 	})
-- end

-- function UIPetInfoComponent:OnAptitude2Click()
-- 	ModuleRefer.ToastModule:ShowTextToast({
-- 		content = I18N.Get(ConfigRefer.PetConsts:PetAttrEstmCtgrDefDes()),
-- 		clickTransform = self.aptitudeButton2.gameObject.transform,
-- 	})
-- end

-- function UIPetInfoComponent:OnAptitude3Click()
-- 	ModuleRefer.ToastModule:ShowTextToast({
-- 		content = I18N.Get(ConfigRefer.PetConsts:PetAttrEstmCtgrLivDes()),
-- 		clickTransform = self.aptitudeButton3.gameObject.transform,
-- 	})
-- end


function UIPetInfoComponent:SetStars()
    if self.group_star then
        if self._petId then
			---@type PetStarLevelComponentParam
            local param = {petId = self._petId, showAsGetPet = self._showAsGetPet}
            self.group_star:FeedData(param)
            self.group_star:SetVisible(true)
        else
            self.group_star:SetVisible(false)
        end
    end
end

function UIPetInfoComponent:SimpleInitStart()
	if self.group_star then
		local quality = nil
		if self._petId then
			local starLevel, skillLevels = ModuleRefer.PetModule:GetSkillLevelQuality(self._petId)
			if skillLevels and #skillLevels > 0 then
				quality = skillLevels[1].quality
			end
		end

		---@type PetStarLevelComponentParam
		local param = {simpleInit = {bigStarCount = 6, smallStarInfo = {{level = 5, quality = quality, forceLoad = true}, {level = 5, quality = quality, forceLoad = true}}}}
		self.group_star:FeedData(param)
		self.group_star:SetVisible(true)
	end
end

function UIPetInfoComponent:RefreshPetName()
	self.textName.text = ModuleRefer.PetModule:GetPetName(self._petId)
end

return UIPetInfoComponent

