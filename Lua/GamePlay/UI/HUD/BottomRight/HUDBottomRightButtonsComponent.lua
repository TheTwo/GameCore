---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by shoufeng.zhang.
--- DateTime: 2022/5/16 17:10
---
local BaseUIComponent = require('BaseUIComponent')
local UIHelper = require('UIHelper')
local ModuleRefer = require('ModuleRefer')
local Delegate = require('Delegate')
local DBEntityPath = require('DBEntityPath')
local EventConst = require('EventConst')
local ConfigRefer = require('ConfigRefer')
local UIMediatorNames = require('UIMediatorNames')
local I18N = require('I18N')
local NewFunctionUnlockIdDefine = require('NewFunctionUnlockIdDefine')
local NotificationType = require('NotificationType')
local HUDWarWarningComponent = require("HUDWarWarningComponent")

---@class HUDBottomRightButtonsComponent : BaseUIComponent
---@field _buttonList HUDBRButton[]
local HUDBottomRightButtonsComponent = class("HUDBottomRightButtonsComponent",BaseUIComponent)

---@protected
function HUDBottomRightButtonsComponent:ctor(...)
    BaseUIComponent.ctor(self, ...)
end

function HUDBottomRightButtonsComponent:OnCreate(param)
    --gacha button
    self._btn_gacha = self:Button('p_btn_recruit',Delegate.GetOrCreate(self,self.OnGachaButtonClick))
    self._go_lockGacha = self:GameObject('p_recruit_lock')
    self._txt_gacha = self:Text('p_text_recruit',  I18N.Get('system_gacha_title_short'))
    --button list
    self._btn_listExpend = self:Button('p_btn_change_l',Delegate.GetOrCreate(self,self.OnButtonListStateSwitch))
    self._btn_listShrink = self:Button('p_btn_change_r',Delegate.GetOrCreate(self,self.OnButtonListStateSwitch))
    self._buttonTmp = self:LuaBaseComponent('p_EntranceBtn')

    ---@type HUDBottomRightButtonsAllianceGroup
    self._p_group_league = self:LuaObject("p_group_league")

    self._child_reddot_default = self:LuaObject("child_reddot_default")
    self.goBubbleFreedraw = self:GameObject('p_bubble_freedraw')
    self.textFree = self:Text('p_text_free', "gacha_freegacha")
    self.goBubbleDraw = self:GameObject('p_bubble_draw')
    self.textNumDraw = self:Text('p_text_num_draw')
    self._btn_gacha.gameObject:SetActive(true)
    --generate buttons in list
    self._buttonList = {}
    ---@type HudRightdownConfigCell[]
    self._buttonsConfigs = {}
    for i, v in ConfigRefer.HudRightdown:ipairs() do
        table.insert(self._buttonsConfigs,v)
    end

    if #self._buttonsConfigs >= 2 then
        table.sort(self._buttonsConfigs,function(a, b)
            return a:Order() < b:Order()
        end)
    end

    for i = 1, #self._buttonsConfigs do
        local newBtn
        if i > 1 then
            newBtn = UIHelper.DuplicateUIComponent(self._buttonTmp)
        else
            newBtn = self._buttonTmp
        end
        table.insert(self._buttonList,newBtn.Lua)
        ModuleRefer.NewFunctionUnlockModule:AddToNewFunctionList(self._buttonsConfigs[i]:SystemSwitch(), newBtn.gameObject)
    end
 end

function HUDBottomRightButtonsComponent:GetTargetEventBtn(eventParam)
    for _, btn in pairs(self._buttonList) do
        if btn:CheckIsTarget(eventParam) then
            return btn._button
        end
    end
end

function HUDBottomRightButtonsComponent:SetupEvents(add)
    if not self._eventsAdd and add then
        self._eventsAdd = true
        g_Game.EventManager:AddListener(EventConst.HUD_BOTTOM_RIGHT_EVENT,Delegate.GetOrCreate(self,self.OnButtonClick))
        g_Game.DatabaseManager:AddChanged(DBEntityPath.Player.PlayerWrapper.Task.MsgPath, Delegate.GetOrCreate(self,self.Refresh))
        g_Game.DatabaseManager:AddChanged(DBEntityPath.CastleBrief.Castle.MsgPath, Delegate.GetOrCreate(self, self.RefreshGahcaButton))
        g_Game.EventManager:AddListener(EventConst.HUD_QUERY_ALLIANCE_ENTRY_VIEWPORT, Delegate.GetOrCreate(self, self.GetAllianceEntryPos))
        g_Game.EventManager:AddListener(EventConst.WORLD_EVENT_TOAST_OPEN, Delegate.GetOrCreate(self, self.OnWorldEventToastOpen))
        g_Game.EventManager:AddListener(EventConst.ALLIANCE_JOINED_WITH_DATA_READY, Delegate.GetOrCreate(self, self.OnAllianceGroupNeedRefresh))
        g_Game.EventManager:AddListener(EventConst.ALLIANCE_LEAVED, Delegate.GetOrCreate(self, self.OnAllianceGroupNeedRefresh))
        g_Game.EventManager:AddListener(EventConst.WORLD_TREND_STATE_CHANGED, Delegate.GetOrCreate(self, self.RefreshRedDot))
        g_Game.EventManager:AddListener(EventConst.SYSTEM_ENTRY_OPEN, Delegate.GetOrCreate(self,self.RefreshExpendBtnState))
        g_Game.EventManager:AddListener(EventConst.SLG_UNDER_ATTACK_WARNING, Delegate.GetOrCreate(self, self.OnUnderAttackWarning))
        ModuleRefer.InventoryModule:AddCountChangeListener(ModuleRefer.HeroCardModule:GetTenDrawCostItemId(), Delegate.GetOrCreate(self, self.RefreshGahcaButton))
        g_Game.DatabaseManager:AddChanged(DBEntityPath.Player.PlayerWrapper2.Gacha.MsgPath, Delegate.GetOrCreate(self, self.RefreshGahcaButton))
    elseif self._eventsAdd and not add then
        self._eventsAdd = false
        g_Game.EventManager:RemoveListener(EventConst.HUD_BOTTOM_RIGHT_EVENT,Delegate.GetOrCreate(self,self.OnButtonClick))
        g_Game.DatabaseManager:RemoveChanged(DBEntityPath.Player.PlayerWrapper.Task.MsgPath, Delegate.GetOrCreate(self,self.Refresh))
        g_Game.DatabaseManager:RemoveChanged(DBEntityPath.CastleBrief.Castle.MsgPath, Delegate.GetOrCreate(self, self.RefreshGahcaButton))
        g_Game.EventManager:RemoveListener(EventConst.HUD_QUERY_ALLIANCE_ENTRY_VIEWPORT, Delegate.GetOrCreate(self, self.GetAllianceEntryPos))
        g_Game.EventManager:RemoveListener(EventConst.WORLD_EVENT_TOAST_OPEN, Delegate.GetOrCreate(self, self.OnWorldEventToastOpen))
        g_Game.EventManager:RemoveListener(EventConst.ALLIANCE_JOINED_WITH_DATA_READY, Delegate.GetOrCreate(self, self.OnAllianceGroupNeedRefresh))
        g_Game.EventManager:RemoveListener(EventConst.ALLIANCE_LEAVED, Delegate.GetOrCreate(self, self.OnAllianceGroupNeedRefresh))
        g_Game.EventManager:RemoveListener(EventConst.WORLD_TREND_STATE_CHANGED, Delegate.GetOrCreate(self, self.RefreshRedDot))
        g_Game.EventManager:RemoveListener(EventConst.SYSTEM_ENTRY_OPEN, Delegate.GetOrCreate(self,self.RefreshExpendBtnState))
        g_Game.EventManager:RemoveListener(EventConst.SLG_UNDER_ATTACK_WARNING, Delegate.GetOrCreate(self, self.OnUnderAttackWarning))
        ModuleRefer.InventoryModule:RemoveCountChangeListener(ModuleRefer.HeroCardModule:GetTenDrawCostItemId(), Delegate.GetOrCreate(self, self.RefreshGahcaButton))
        g_Game.DatabaseManager:RemoveChanged(DBEntityPath.Player.PlayerWrapper2.Gacha.MsgPath, Delegate.GetOrCreate(self, self.RefreshGahcaButton))
    end
end

function HUDBottomRightButtonsComponent:OnShow(param)
    self:SetupEvents(true)
    for i = 1, #self._buttonsConfigs do
        self._buttonList[i]:FeedData(self._buttonsConfigs[i])
    end
    self:SetButtonListState(true)

    self:RefreshRedDot()
    self:RefreshExpendBtnState()
    local rightButtonNode = ModuleRefer.NotificationModule:GetDynamicNode("RightButtonsNode", NotificationType.BOTTOM_RIGHT_BUTTON)
    if self._child_reddot_default then
        ModuleRefer.NotificationModule:AttachToGameObject(rightButtonNode, self._child_reddot_default.go, self._child_reddot_default.redDot)
    end
end

function HUDBottomRightButtonsComponent:OnHide(param)
    self:SetupEvents(false)
end

function HUDBottomRightButtonsComponent:OnClose(param)
    self:SetupEvents(false)
end

function HUDBottomRightButtonsComponent:RefreshExpendBtnState()
    self:SetButtonListState( not self._buttonListState)
    local showCount = 0
    for i = 1, #self._buttonsConfigs do
        local sysIndex = self._buttonsConfigs[i]:SystemSwitch()
        if sysIndex and sysIndex > 0 then
            local isOpen = ModuleRefer.NewFunctionUnlockModule:CheckNewFunctionIsUnlocked(sysIndex)
            if isOpen then
                showCount = showCount + 1
            end
        end
    end
    if showCount < 5 then
        self._btn_listExpend:SetVisible(false)
        self._btn_listShrink:SetVisible(false)
    end
    self:RefreshGahcaButton()
end

function HUDBottomRightButtonsComponent:RefreshGahcaButton()
    local isOpen = ModuleRefer.HeroCardModule:CheckIsOpenGacha()
    self._go_lockGacha:SetActive(not isOpen)
    local freeTime = ModuleRefer.HeroCardModule:GetFreeTime()
    local curTime = g_Game.ServerTime:GetServerTimestampInSeconds()
    local isFree = freeTime ~= 0 and curTime >= freeTime
    self.goBubbleFreedraw:SetActive(isFree and isOpen)
    if isOpen and not isFree then
        local curNum = ModuleRefer.HeroCardModule:GetTenDrawCostItemNum()
        if curNum >= 10 then
            self.goBubbleDraw:SetActive(isOpen)
            if curNum > 99 then
                self.textNumDraw.text = "99+"
            else
                self.textNumDraw.text = curNum
            end
        else
            self.goBubbleDraw:SetActive(false)
        end
    else
        self.goBubbleDraw:SetActive(false)
    end
end

function HUDBottomRightButtonsComponent:RefreshRedDot()
    if not self.createRedDot then
        self:InitRedDot()
    end

    -- local isWorldTrendOpen = ModuleRefer.WorldTrendModule:IsOpen()
    -- local isShow = ModuleRefer.WorldTrendModule:IsHasReward() and isWorldTrendOpen
    -- local rightButtonRedDot = ModuleRefer.NotificationModule:GetDynamicNode("RightButtonsNode", NotificationType.BOTTOM_RIGHT_BUTTON)
    -- ModuleRefer.NotificationModule:SetDynamicNodeNotificationCount(rightButtonRedDot, isShow and 1 or 0)
end

function HUDBottomRightButtonsComponent:InitRedDot()
    if self.createRedDot then
        return
    end
    ModuleRefer.NotificationModule:GetOrCreateDynamicNode("RightButtonsNode", NotificationType.BOTTOM_RIGHT_BUTTON)
    self.createRedDot = true
end

function HUDBottomRightButtonsComponent:Refresh()
    for i = 1, #self._buttonsConfigs do
        self._buttonList[i]:OnButtonPackup(self._buttonListState)
    end
    self:OnAllianceGroupNeedRefresh()
end

function HUDBottomRightButtonsComponent:OnGachaButtonClick()
    local sysIndex = NewFunctionUnlockIdDefine.Global_gacha
    local cfg = ConfigRefer.SystemEntry:Find(sysIndex)
    if not cfg then
        return
    end
    if not ModuleRefer.NewFunctionUnlockModule:CheckNewFunctionIsUnlocked(sysIndex) then
        ModuleRefer.ToastModule:AddSimpleToast(I18N.Get(cfg:LockedTips()))
        return
    end
    g_Game.EventManager:TriggerEvent(EventConst.HUD_BOTTOM_RIGHT_EVENT,'HeroCardMediator')
end

function HUDBottomRightButtonsComponent:OnButtonListStateSwitch()
    self:SetButtonListState( not self._buttonListState)
    g_Game.EventManager:TriggerEvent(EventConst.CHANG_TOAST_SHOW_TYPE, self._buttonListState and 1 or 2)
end

---SetButtonListState
---@param state boolean true is Packup
function HUDBottomRightButtonsComponent:SetButtonListState(state)
    self._buttonListState = state
    self._btn_listExpend:SetVisible( self._buttonListState)
    self._btn_listShrink:SetVisible(not self._buttonListState)
    self:OnAllianceGroupNeedRefresh()
    --set buttons visible
    for i, v in pairs(self._buttonList) do
        v:OnButtonPackup(self._buttonListState)
    end
end

---OnButtonClick
---@param param string HudRightdownConfigCell:ClickThrough()
function HUDBottomRightButtonsComponent:OnButtonClick(param)
    if not param then
        return
    end
    local basicCamera = require("KingdomMapUtils").GetBasicCamera()
    if not basicCamera.enableDragging or not basicCamera.enablePinch then
        return
    end
    g_Logger.LogChannel('HUD Event',param)
    if not string.IsNullOrEmpty(param) then
        if UIMediatorNames[param] then
            g_Game.UIManager:Open(param)
        else
            g_Game.EventManager:TriggerEvent(EventConst.HUD_BOTTOM_RIGHT_SUB_BUTTON_CLICK, param)
        end
    end
end

---@class HUDQueryBtnViewPortResponse
---@field viewPortPos CS.UnityEngine.Vector3
---@field hide boolean

---@param response HUDQueryBtnViewPortResponse
function HUDBottomRightButtonsComponent:GetAllianceEntryPos(response)
    if response.viewPortPos then
        return
    end
    for _, v in pairs(self._buttonList) do
        if v._clickEvent == "ALLIANCE_HUD_ENTRY_CLICK" then
            if v.selfGo.activeSelf then
                local pos = v.selfGo.transform.localPosition
                pos.y = pos.y + 60
                pos = v.selfGo.transform.parent:TransformPoint(pos)
                local uiCamera = g_Game.UIManager:GetUICamera()
                local viewPortPos = uiCamera:WorldToViewportPoint(pos)
                response.viewPortPos = viewPortPos
                response.hide = not v.selfGo.activeInHierarchy
            elseif v:IsPackHide() then
                local pos = self._btn_listExpend.transform.localPosition
                pos.y = pos.y + 100
                pos = self._btn_listExpend.transform.parent:TransformPoint(pos)
                local uiCamera = g_Game.UIManager:GetUICamera()
                local viewPortPos = uiCamera:WorldToViewportPoint(pos)
                response.viewPortPos = viewPortPos
                response.hide = not v.selfGo.activeInHierarchy
            end
            return
        end
    end
end

function HUDBottomRightButtonsComponent:OnWorldEventToastOpen()
    if not self._buttonListState then
        self:SetButtonListState( not self._buttonListState)
    end
end

function HUDBottomRightButtonsComponent:OnAllianceGroupNeedRefresh()
    self._p_group_league:SetVisible(ModuleRefer.AllianceModule:IsInAlliance() or HUDWarWarningComponent.UnderAttack)
    self._p_group_league:OnAllianceGroupNeedRefresh(self._buttonListState)
end

function HUDBottomRightButtonsComponent:OnUnderAttackWarning()
    self:OnAllianceGroupNeedRefresh()
end

return HUDBottomRightButtonsComponent