---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by wupei.
--- DateTime: 2020/11/23
---

---@class SlgWorldObject
---@field _timers timer | FrameTimer
local SlgWorldObject = class('SlgWorldObject')
local TimerUtility = require('TimerUtility')

function SlgWorldObject:ctor()
    
end

function SlgWorldObject:Cleanup()
    self:CancelAllInvoke()
end

function SlgWorldObject:Invoke(callback, time)
    self:_DoInvoke(callback, time, false)
end

function SlgWorldObject:InvokeRepeating(callback, time)
    self:_DoInvoke(callback, time, true)
end

function SlgWorldObject:_DoInvoke(callback, time, loop)
    if callback == nil then
        g_Logger.Error("Invoke error, time = %s, callback = %s", time, callback)
        return
    end
    local key = callback
    if self._timers and self._timers[key] then
        if self._timers[key].running then
            --g_Logger.Error("Invoke error, timer key repeated. key = %s", key)
        else
            self._timers[key]:Start()
        end
        return
    end
    local timers = self._timers
    if not timers then
        timers = {}
        self._timers = timers
    end
    local timer
    if loop then
        timer = TimerUtility.IntervalRepeat(callback,time,-1)
    else
        timer = TimerUtility.DelayExecute(callback,time)
    end
    
    self._timers[key] = timer
end

function SlgWorldObject:CancelInvoke(callback)
    if not self._timers then
        return
    end
    local timer = self._timers[callback]
    if timer then
        TimerUtility.StopAndRecycle(timer)
        self._timers[callback] = nil
    end
end

function SlgWorldObject:IsInvoking(callback)
    if not self._timers then
        return false
    end
    if self._timers[callback] and self._timers[callback].running then
        return true
    end
    return false
end

function SlgWorldObject:CancelAllInvoke()
    if not self._timers then
        return
    end
    for i,v in ipairs(self._timers) do
        TimerUtility.StopAndRecycle(v)
        self._timers[i] = nil
    end
end

return SlgWorldObject