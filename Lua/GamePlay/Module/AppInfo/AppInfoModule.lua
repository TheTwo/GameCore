---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by yingjie.cui.
--- DateTime: 2023/3/8 10:17
---

local BaseModule = require('BaseModule')
local Version = require('Version')
local rapidJson = require("rapidjson")

---@class AppInfoModule
local AppInfoModule = class('AppInfoModule',BaseModule)

function AppInfoModule:ctor()

end

function AppInfoModule:OnRegister()
    -- 包内数据，随时可用
    local isEncryptMode = CS.DragonReborn.IOUtils.HasEncryptTag()
    local appInfoText = IOUtilsWrap.ReadStreamingAssetAsText('app_info.json', isEncryptMode)
    g_Logger.Log('Load app_info.json %s', appInfoText)
    self.appInfo = rapidJson.decode(appInfoText)
    CS.DragonReborn.VersionControl.VersionName = self.appInfo['version']
    CS.DragonReborn.VersionControl.BuildNumber = self.appInfo['build_number']
    CS.DragonReborn.VersionControl.CustomBuildNumber = self.appInfo['custom_build_number']
    CS.DragonReborn.VersionControl.RuntimeLocalAssetOnly = self.appInfo['local_asset_only']

    if CS.DragonReborn.VersionControl.RuntimeLocalAssetOnly then
        CS.DragonReborn.IOUtils.DeleteGameAssetDir('GameAssets')
        g_Logger.Log('Delete outside GameAssets for local_asset_only true!!!')
    end
end

function AppInfoModule:OnRemove()
    
end

function AppInfoModule:RuntimeLocalAssetOnly()
    return self.appInfo['local_asset_only']
end

function AppInfoModule:VersionName()
    return self.appInfo['version']
end

function AppInfoModule:BuildNumber()
    return self.appInfo['build_number'] or 0
end

function AppInfoModule:CustomBuildNumber()
    return self.appInfo['custom_build_number'] or 0
end

function AppInfoModule:CSharpVersion()
    local version = self.appInfo['csharp_version'] or ''
    return Version.Parse(version)
end

---@param targetVersion Version|string
function AppInfoModule:IsCSharpVersionMatch(targetVersion)
    if type(targetVersion) == 'string' then
        local flag, version = Version.TryParse(targetVersion)
        if not flag then
            g_Logger.WarnChannel('AppInfoModule', 'IsVersionMatch targetVersion is not matchable versionStr')
            return false
        end
        targetVersion = version
    end
    if type(targetVersion) == "table" and Version.Is(targetVersion) then
        return targetVersion <= self:CSharpVersion()
    end
    g_Logger.WarnChannel('AppInfoModule', 'IsVersionMatch targetVersion is not Version or versionStr')
    return false
end

function AppInfoModule:ResVersion()
    -- 取缓存的
    local currentResVersion = g_Game.PlayerPrefsEx:GetString('res_version')
    if not string.IsNullOrEmpty(currentResVersion) then
        return currentResVersion
    end

    -- 取包体描述文件的并更新缓存
    if self:CustomBuildNumber() > 0 then
        currentResVersion = string.format('%s.%s', self:VersionName(), self:CustomBuildNumber())
    end
    currentResVersion = string.format('%s.%s', self:VersionName(), self:BuildNumber())
    self:UpdateResVersion(currentResVersion)

    return currentResVersion
end

---@param resVersion string
function AppInfoModule:UpdateResVersion(resVersion)
    g_Game.PlayerPrefsEx:SetString('res_version', resVersion)
end

function AppInfoModule:IgnoreResVersionCheck()
    return self.appInfo['ignore_res_version_check'] or false
end

function AppInfoModule:DisplayName()
    return self:ResVersion()
end

function AppInfoModule:AppVersion()
	return string.format('%s.%s', self:VersionName(), self:BuildNumber())
end

function AppInfoModule:DirUrl()
    return self.appInfo['dir_url']
end

function AppInfoModule:PkgChannel()
    return self.appInfo['pkg_channel']
end

function AppInfoModule:UwaEnable()
    if USE_UWA then
        return self.appInfo['uwa_enable']
    end
    return false
end

function AppInfoModule:ControlByPoco()
    return self.appInfo['control_by_poco']
end

function AppInfoModule:UseFpxDiamond()
    return self.appInfo['use_fpx_diamond']
end

function AppInfoModule:GetDingTalkAt()
    local ret = self.appInfo['notice_on_duty']
    if string.IsNullOrEmpty(ret) then
        return false, nil
    end
    ret = CS.DragonReborn.SafetyUtils.FromBase64StringXor(ret)
    return true, ret
end

function AppInfoModule:SkipNewbie()
    if g_Game.PlayerPrefsEx:GetInt("GMSkipNewbie") == 1 then
        return true
    end
    
    return false
end

function AppInfoModule:ExceptionRestartEnable()
    if not UNITY_EDITOR and g_Game.PlayerPrefsEx:GetInt("GMPanelEnableExceptionRestart", 1) == 1 then
        return true
    end
    
    return false
end

return AppInfoModule
