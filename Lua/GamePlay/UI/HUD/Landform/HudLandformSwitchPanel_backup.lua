--local BaseUIComponent = require('BaseUIComponent')
--local ModuleRefer = require('ModuleRefer')
--local Delegate = require('Delegate')
--local ConfigRefer = require('ConfigRefer')
--local EventConst = require('EventConst')
--local I18N = require('I18N')
--local TouchMenuUIMediator = require('TouchMenuUIMediator')
--local LandformDisplayMode = require('LandformDisplayMode')
--local TerritoryDisplayMode = require('TerritoryDisplayMode')
--local KingdomMapUtils = require('KingdomMapUtils')
--
-----@class HudLandformSwitchPanel_backup : BaseUIComponent
-----@field super BaseUIComponent
--local HudLandformSwitchPanel = class("HudLandformSwitchPanel", BaseUIComponent)
--
--local TOGGLE_STRATEGY = 101
--local TOGGLE_LANDFORM = 102
--local TOGGLE_SUB_ALLIANCE = -1
--local TOGGLE_SUB_COMMUNICATION = -2
--
--function HudLandformSwitchPanel:ctor()
--    self.curSelectMode = 0
--    self.curSelectSubmode = 0
--    self.curDisplayMode = LandformDisplayMode.Hide
--end
--
--function HudLandformSwitchPanel:OnCreate(param)
--    ---@type CS.StatusRecordParent
--	self.toggleModeStrategy = self:BindComponent("child_toggle_strategy", typeof(CS.StatusRecordParent))
--    self.btnModeStrategy = self:Button("child_toggle_strategy", Delegate.GetOrCreate(self, self.OnModeStrategyClick))
--    ---@type CS.StatusRecordParent
--    self.toggleModeLandform = self:BindComponent("child_toggle_landform", typeof(CS.StatusRecordParent))
--    self.btnModeLandform = self:Button("child_toggle_landform", Delegate.GetOrCreate(self, self.OnModeLandformClick))
--
--    self.txtModeStrategy = self:Text("p_text_mode_strategy", 'bw_strategic_model')
--    self.txtModeLandform = self:Text("p_text_mode_landform", 'bw_circle_model')
--
--    -- 通讯范围信息
--    self.goNoteCommunication = self:GameObject('p_group_note_communication')
--    self.txtCommunicateRange = self:Text("p_text_communication", 'bw_info_signalrange_title')
--    self.txtCommunicateRange1 = self:Text("p_text_range_1", 'bw_info_signalrange_base')
--    self.txtCommunicateRange2 = self:Text("p_text_range_2", 'bw_info_signalrange_alliance')
--
--    -- 联盟领地信息
--    self.goNoteAlliance = self:GameObject('p_group_note_alliance')
--    self.txtAllianceNote1 = self:Text("p_text_alliance_1", 'bw_info_strategic_ally')
--    self.txtAllianceNote2 = self:Text("p_text_alliance_2", 'bw_info_strategic_enemy')
--    self.txtAllianceNote3 = self:Text("p_text_alliance_3", 'bw_info_strategic_neutral')
--    self.txtAllianceNote4 = self:Text("p_text_alliance_4", 'bw_info_strategic_luoling')
--
--    -- 战略模式子选项
--    self.tableStrategy = self:TableViewPro('p_table_strategy')
--
--    -- 圈层模式子选项
--    self.goLandform = self:GameObject('mode_landform')
--    self.tableLands = self:TableViewPro('p_table_landforms')
--    self.btnLandformTips = self:Button('p_btn_detail_landform', Delegate.GetOrCreate(self, self.OnLandformTipsClick))
--
--    ---@type HudLandformInfoPanel
--    self.landformInfo = self:LuaObject('child_landform_popup_info')
--end
--
--function HudLandformSwitchPanel:OnShow(param)
--    g_Game.EventManager:AddListener(EventConst.ON_LANDFORM_SELECT, Delegate.GetOrCreate(self, self.OnLandformSelect))
--    g_Game.EventManager:AddListener(EventConst.OPEN_LANDFORM_VIEW, Delegate.GetOrCreate(self, self.OnModeLandformClick))
--
--    -- 默认显示战略模式
--    self:ChangeDisplayMode(LandformDisplayMode.Strategy)
--end
--
--function HudLandformSwitchPanel:OnHide(param)
--    g_Game.EventManager:RemoveListener(EventConst.ON_LANDFORM_SELECT, Delegate.GetOrCreate(self, self.OnLandformSelect))
--    g_Game.EventManager:RemoveListener(EventConst.OPEN_LANDFORM_VIEW, Delegate.GetOrCreate(self, self.OnModeLandformClick))
--
--    g_Game.EventManager:TriggerEvent(EventConst.ON_LANDFORM_SELECT, TOGGLE_SUB_ALLIANCE)
--    g_Game.EventManager:TriggerEvent(EventConst.ENTER_COMMUNICATION_MODE, false)
--end
--
-----@param displayMode LandformDisplayMode
--function HudLandformSwitchPanel:ChangeDisplayMode(displayMode)
--    if self.curDisplayMode == displayMode then return end
--    self.curDisplayMode = displayMode
--
--    if displayMode == LandformDisplayMode.Strategy then
--        -- 仅显示战略模式，隐藏圈层模式内容，并强制切换选中战略模式
--        self.goLandform:SetVisible(false)
--        self.tableLands:SetVisible(false)
--        self:ChangeModeTo(TOGGLE_STRATEGY)
--    elseif displayMode == LandformDisplayMode.Both then
--        -- 显示战略模式和圈层模式内容
--        self.goLandform:SetVisible(true)
--    else
--        -- 复位选中状态
--        self.curSelectMode = 0
--        self.curSelectSubmode = 0
--    end
--end
--
--function HudLandformSwitchPanel:ChangeModeTo(targetMode)
--    if self.curSelectMode == targetMode then return end
--
--    self.curSelectMode = targetMode
--    if self.curSelectMode == TOGGLE_STRATEGY then
--        -- 默认显示联盟领地
--        self.curSelectSubmode = TOGGLE_SUB_ALLIANCE
--        ModuleRefer.LandformModule:ExitLandSelectMode()
--    else
--        ModuleRefer.LandformModule:EnterLandSelectMode()
--    end
--
--    -- 切换模式的时候，关闭环形菜单
--    TouchMenuUIMediator.CloseSingleton()
--
--    --self:RefreshUI()
--end
--
--function HudLandformSwitchPanel:RefreshUI()
--    self.goNoteAlliance:SetVisible(self.curSelectSubmode == TOGGLE_SUB_ALLIANCE)
--    self.goNoteCommunication:SetVisible(self.curSelectSubmode == TOGGLE_SUB_COMMUNICATION)
--    self.tableStrategy:SetVisible(self.curSelectMode == TOGGLE_STRATEGY)
--    self.tableLands:SetVisible(self.curSelectMode == TOGGLE_LANDFORM)
--    self.landformInfo:SetVisible(self.curSelectMode == TOGGLE_LANDFORM)
--
--    if self.curSelectMode == TOGGLE_STRATEGY then
--        self.txtModeStrategy.fontStyle = CS.UnityEngine.FontStyle.Bold
--        self.txtModeLandform.fontStyle = CS.UnityEngine.FontStyle.Normal
--        self.toggleModeStrategy:ApplyStatusRecord(1)
--        self.toggleModeLandform:ApplyStatusRecord(0)
--
--        self.tableStrategy:Clear()
--        ---@type HudLandformSwitchStrategyCellData
--        local cellData1 = {}
--        cellData1.type = TOGGLE_SUB_ALLIANCE
--        cellData1.isSelect = self.curSelectSubmode == TOGGLE_SUB_ALLIANCE
--        cellData1.desc = I18N.Get('bw_info_strategic_alliance')
--        cellData1.onClick = Delegate.GetOrCreate(self, self.OnStrategyCellClick)
--        self.tableStrategy:AppendData(cellData1)
--
--        ---@type HudLandformSwitchStrategyCellData
--        local cellData2 = {}
--        cellData2.type = TOGGLE_SUB_COMMUNICATION
--        cellData2.isSelect = self.curSelectSubmode == TOGGLE_SUB_COMMUNICATION
--        cellData2.desc = I18N.Get('bw_info_strategic_signal')
--        cellData2.onClick = Delegate.GetOrCreate(self, self.OnStrategyCellClick)
--        self.tableStrategy:AppendData(cellData2)
--    else
--        self.txtModeLandform.fontStyle = CS.UnityEngine.FontStyle.Bold
--        self.txtModeStrategy.fontStyle = CS.UnityEngine.FontStyle.Normal
--        self.toggleModeStrategy:ApplyStatusRecord(0)
--        self.toggleModeLandform:ApplyStatusRecord(1)
--
--        self.tableLands:Clear()
--        for _, cell in ConfigRefer.Land:ipairs() do
--            if cell:IsShow() then
--                ---@type HudLandformSwitchSubCellData
--                local cellData = {}
--                cellData.landCfgCell = cell
--                cellData.curSelectLandId = self.curSelectSubmode
--                self.tableLands:AppendData(cellData)
--            end
--        end
--
--        ---@type HudLandformInfoPanelData
--        local landformInfoData = {}
--        landformInfoData.landCfgId = self.curSelectSubmode
--        self.landformInfo:FeedData(landformInfoData)
--    end
--
--    -- 刷新显示逻辑
--    if self.curSelectMode == TOGGLE_STRATEGY then
--        -- 战略模式
--        ModuleRefer.TerritoryModule:ShowTerritory()
--        if self.curSelectSubmode == TOGGLE_SUB_ALLIANCE then
--            -- 联盟
--            ModuleRefer.TerritoryModule:ShowCreepAreas()
--            ModuleRefer.MapFogModule:ShowPlaneFog()
--            ModuleRefer.MapHUDModule:ShowHud()
--            KingdomMapUtils.ShowMapDecorations()
--            -- 不显示信号标，通讯范围涂色
--            --ModuleRefer.TerritoryModule:SetDrawMode(TerritoryDisplayMode.SymbolMap)
--            g_Game.EventManager:TriggerEvent(EventConst.ENTER_COMMUNICATION_MODE, false)
--        else
--            -- 通讯
--            ModuleRefer.TerritoryModule:HideCreepAreas()
--            ModuleRefer.MapFogModule:ShowPlaneFog()
--            ModuleRefer.MapHUDModule:ShowHud()
--            KingdomMapUtils.ShowMapDecorations()
--            -- 显示信号标，通讯范围涂色
--            --ModuleRefer.TerritoryModule:SetDrawMode(TerritoryDisplayMode.CommunicationMap)
--            g_Game.EventManager:TriggerEvent(EventConst.ENTER_COMMUNICATION_MODE, true)
--        end
--    else
--        -- 圈层模式
--        ModuleRefer.TerritoryModule:HideCreepAreas()
--        ModuleRefer.TerritoryModule:HideTerritory()
--        ModuleRefer.MapFogModule:HidePlaneFog()
--        ModuleRefer.MapHUDModule:HideHud()
--        KingdomMapUtils.HideMapDecorations()
--        -- 不显示信号标，通讯范围涂色
--        --ModuleRefer.TerritoryModule:SetDrawMode(TerritoryDisplayMode.SymbolMap)
--        g_Game.EventManager:TriggerEvent(EventConst.ENTER_COMMUNICATION_MODE, false)
--    end
--end
--
-----@param type number @-1联盟 -2通讯
--function HudLandformSwitchPanel:OnStrategyCellClick(type)
--    self.curSelectSubmode = type
--    self:RefreshUI()
--end
--
-----@param landCfgId number
--function HudLandformSwitchPanel:OnLandformSelect(landCfgId)
--    landCfgId = landCfgId or 0
--    if landCfgId <= 0 then return end
--        
--    self.curSelectSubmode = landCfgId
--    self:RefreshUI()
--end
--
--function HudLandformSwitchPanel:OnModeStrategyClick()
--    self:ChangeModeTo(TOGGLE_STRATEGY)
--
--    g_Game.EventManager:TriggerEvent(EventConst.ON_LANDFORM_SELECT, TOGGLE_SUB_ALLIANCE)
--end
--
--function HudLandformSwitchPanel:OnModeLandformClick()
--    self:ChangeModeTo(TOGGLE_LANDFORM)
--
--    g_Game.EventManager:TriggerEvent(EventConst.ON_LANDFORM_SELECT, ModuleRefer.LandformModule:GetMyLandCfgId())
--end
--
--function HudLandformSwitchPanel:OnLandformTipsClick()
--    ---@type TextToastMediatorParameter
--    local toastParameter = {}
--    toastParameter.clickTransform =  self.btnLandformTips.transform
--    toastParameter.title = ''
--    toastParameter.content = I18N.Get('bw_tips_circle_des')
--    self.toastRuntimeId = ModuleRefer.ToastModule:ShowTextToast(toastParameter)
--end
--
--return HudLandformSwitchPanel