-- ---
-- --- Generated by EmmyLua(https://github.com/EmmyLua)
-- --- Created by hao.wu.ss
-- --- DateTime: 2023/9/12 17:13
-- ---

-- --- scene: scene_child_card_pet_circle

-- local BaseUIComponent = require('BaseUIComponent')
-- local Delegate = require('Delegate')
-- local ModuleRefer = require("ModuleRefer")
-- local I18N = require("I18N")
-- local UIHelper = require('UIHelper')
-- local ConfigRefer = require("ConfigRefer")
-- local HeroUIUtilities = require('HeroUIUtilities')
-- local ArtResourceUtils = require('ArtResourceUtils')

-- ---@class UIPetCircle : BaseUIComponent
-- local UIPetCircle = class('UIPetCircle', BaseUIComponent)

-- function UIPetCircle:ctor()
-- end

-- function UIPetCircle:OnCreate(param)
-- 	self:InitObjects()
-- end

-- function UIPetCircle:InitObjects()
-- 	self._button = self:Button("", Delegate.GetOrCreate(self, self.OnClick))
-- 	self._frame = self:Image("p_base_frame")
-- 	self._icon = self:Image("p_img_pet")
-- 	self._txtLevel = self:Text('p_text_lv')
-- 	self._infoRoot = self:GameObject('p_info')
-- 	self.stars = {}
-- 	self.stars[1] =  self:GameObject('p_icon_star_1')
-- 	self.stars[2] =  self:GameObject('p_icon_star_2')
-- 	self.stars[3] =  self:GameObject('p_icon_star_3')
-- 	self.stars[4] =  self:GameObject('p_icon_star_4')
-- 	self.stars[5] =  self:GameObject('p_icon_star_5')
-- 	self._p_mask_frame = self:Image('p_mask_frame')
-- end

-- ---@param data UIPetCircleData
-- function UIPetCircle:OnFeedData(data)
-- 	if (data) then
-- 		self.data = data
-- 		self.id = data.id
-- 		self.cfgId = data.cfgId
-- 		self.level = data.level
-- 		self.starLevel = data.starLevel
-- 		self.templateIds = data.templateIds or {}
-- 		if (not self.cfgId or self.cfgId <= 0) then
-- 			local petInfo = ModuleRefer.PetModule:GetPetByID(self.id)
-- 			if (petInfo) then
-- 				self.cfgId = petInfo.ConfigId
-- 				self.templateIds = petInfo.TemplateIds
-- 			end
-- 		end
-- 		self.cfg = ModuleRefer.PetModule:GetPetCfg(data.cfgId)
-- 		self.onClick = data.onClick
-- 	end
-- 	self:RefreshUI()
-- end

-- function UIPetCircle:RefreshUI()
-- 	if (self.cfg) then
-- 		local quality = self.cfg:Quality()
-- 		local petIcon = UIHelper.GetFitPetHeadIcon(self._icon, self.cfg)
-- 		g_Game.SpriteManager:LoadSprite(petIcon, self._icon)
-- 		local rarityCfg = ConfigRefer.PetRarity:Find(quality)
-- 		if (rarityCfg) then
-- 			local frame = HeroUIUtilities.GetQualitySpriteID(quality)
-- 			local frameMask = HeroUIUtilities.GetQualityFrontSpriteID(quality)

-- 			g_Game.SpriteManager:LoadSprite(ArtResourceUtils.GetUIItem(frame),self._frame)
-- 			g_Game.SpriteManager:LoadSprite(ArtResourceUtils.GetUIItem(frameMask),self._p_mask_frame)
-- 		end
-- 	end
-- 	if (self.disabled) then
-- 		UIHelper.SetGray(self.CSComponent.gameObject, true)
-- 	else
-- 		UIHelper.SetGray(self.CSComponent.gameObject, false)
-- 	end

-- 	if self.level ~= nil or self.starLevel ~= nil then
-- 		self._infoRoot:SetActive(true)
-- 	else
-- 		self._infoRoot:SetActive(false)
-- 	end

-- 	self._txtLevel:SetVisible(self.level and self.level > 0)
-- 	if self.level and self.level > 0 then
-- 		self._txtLevel.text = tostring(self.level)
-- 	end

-- 	self:SetStars()
-- end

-- function UIPetCircle:SetStars()
-- 	for i = 1, 5 do
-- 		self.stars[i]:SetVisible(i <= self.starLevel)
-- 	end
-- end

-- function UIPetCircle:OnClick(args)
-- 	if (not self.disabled and self.onClick) then
-- 		self.onClick(self.data)
-- 	end
-- end

-- return UIPetCircle

