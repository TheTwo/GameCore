---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hao.wu.ss
--- DateTime: 2023/4/6 17:04
---
--- SE准备模块

local BaseModule = require('BaseModule')
local ModuleRefer = require('ModuleRefer')
local ConfigRefer = require('ConfigRefer')
local NpcServiceType = require('NpcServiceType')
local EventConst = require("EventConst")
local UIMediatorNames = require("UIMediatorNames")
local I18N = require("I18N")
local GotoUtils = require("GotoUtils")
local SEHudTroopMediatorDefine = require("SEHudTroopMediatorDefine")
local TouchMenuHelper = require("TouchMenuHelper")
local TouchMenuBasicInfoDatumSe = require("TouchMenuBasicInfoDatumSe")
local TouchMenuCellSeMonsterDatum = require("TouchMenuCellSeMonsterDatum")
local TMCellSeMonsterDatum = require("TMCellSeMonsterDatum")
local TouchMenuCellRewardDatum = require("TouchMenuCellRewardDatum")
local TouchMenuCellLandformDatum = require("TouchMenuCellLandformDatum")
local TouchMenuButtonTipsData = require("TouchMenuButtonTipsData")
local TouchMenuMainBtnDatum = require("TouchMenuMainBtnDatum")
local TouchMenuPollutedData = require("TouchMenuPollutedData")
local ArtResourceUtils = require("ArtResourceUtils")
local KingdomMapUtils = require("KingdomMapUtils")
local SEUnitCategory = require("SEUnitCategory")
local GuideConst = require("GuideConst")

--local SP_ICON_POWER = "sp_comp_icon_power"
local SP_ICON_POWER_ENOUGH = "sp_slg_icon_easy"
local SP_ICON_POWER_NOT_ENOUGH = "sp_slg_icon_difficult"
local COLOR_POWER_ENOUGH = "#00ff00"
local COLOR_POWER_NOT_ENOUGH = "#ff0000"
local COLOR_FORMAT = "<color=%s>%s</color>"
local I18N_POWER = "setips_title_ce"

---@class CreateTouchMenuForWildPetData
---@field worldPetData WorldPetData

---@class CreateTouchMenuForWorldContext
---@field troopId number 部队ID
---@field worldPos CS.UnityEngine.Vector3 世界坐标
---@field gridPos CS.DragonReborn.Vector2Short 地格坐标
---@field tid number 副本ID
---@field creepId number
---@field interactorId number 交互物ID
---@field interactorConfId number 交互物配置ID
---@field overrideGoToFunc fun()
---@field fromType number 进入类型

---@class CreateTouchMenuForCityContext
---@field npcId number 据点ID
---@field troopId number 部队ID
---@field troopPresetIdx number|nil
---@field worldPos CS.UnityEngine.Vector3 世界坐标
---@field overrideGoToFunc fun()
---@field elementId number
---@field cityPos Coordinate
---@field preSendEnterSceneOverride fun(continueEnterScene:fun())
---@field targetIsPolluted boolean
---@field pollutedHint string
---@field isGoto boolean 需要移动/直接进本

---@class SEPreModule : BaseModule
---@field super BaseModule
local SEPreModule = class('SEPreModule', BaseModule)

local SP_BTN_RED = "sp_btn_c_nml_s_u2"

function SEPreModule:ctor()

end

function SEPreModule:OnRegister()
	local cfgCount = ConfigRefer.ConstSe:SePopColorLength()
	if (cfgCount > 0) then
		local colorEnoughCfg = ConfigRefer.ColorConst:Find(ConfigRefer.ConstSe:SePopColor(1))
		if (colorEnoughCfg) then
			COLOR_POWER_ENOUGH = colorEnoughCfg:ColorStr()
		end
	end
	if (cfgCount > 1) then
		local colorNotEnoughCfg = ConfigRefer.ColorConst:Find(ConfigRefer.ConstSe:SePopColor(2))
		if (colorNotEnoughCfg) then
			COLOR_POWER_NOT_ENOUGH = colorNotEnoughCfg:ColorStr()
		end
	end
end

function SEPreModule:OnRemove()

end

--- 创建大世界进入副本环形菜单
---@param content CreateTouchMenuForWorldContext 参数上下文
function SEPreModule:CreateTouchMenuForWorld(context, donotShowWindow)
	local uiDatum, result = self:GetTouchMenuForWorld(context)
	if not donotShowWindow then
		require("TouchMenuUIMediator").OpenSingleton(uiDatum)
	end
	return result,uiDatum
end

---@param context CreateTouchMenuForWorldContext
function SEPreModule:GetTouchMenuForWorld(context)
	local troopId = context.troopId
	local worldPos = context.worldPos
	local gridPos = context.gridPos
	local tid = context.tid
	local fromType = context.fromType
	local useDefaultPos = context.useDefaultPos
	local backToSceneTid = context.backToSceneTid

	local interactorId = context.interactorId
	local interactorConfId = context.interactorConfId
	local isPersonalInteractor = context.isPersonalInteractor or false
    local creepId = context.creepId
	local overrideGoToFunc = context.overrideGoToFunc
	local result

	-- 参数检查
	if (not tid and (not interactorId or not interactorConfId)) then
		g_Logger.Error("创建大世界进入副本环形菜单: 副本ID, 宠物信息与交互物信息均为空")
		return
	end

	if (not worldPos or not gridPos) then
		g_Logger.Error("创建大世界进入副本环形菜单: worldPos/gridPos为空")
		return
	end

	---@type MapInstanceConfigCell
	local mapCfg
	if (not tid and interactorId) then
		local mineConf = ConfigRefer.Mine:Find(interactorConfId)
		if (not mineConf) then
			g_Logger.Error("创建大世界进入副本环形菜单: 非法interactorConfId: %s", interactorConfId)
			return
		end
		tid = mineConf:MapInstanceId()
	end

	mapCfg = ConfigRefer.MapInstance:Find(tid)
	if (not mapCfg) then
		g_Logger.Error("创建大世界进入副本环形菜单: 未找到副本, tid: %s", tid)
		return
	end
	result = true

	-- 数据构建

	-- 基本信息
	local basicInfo = TouchMenuBasicInfoDatumSe.new()
	basicInfo:SetImage(ArtResourceUtils.GetUIItem(mapCfg:HeadPic()))
	basicInfo:SetName(I18N.Get(mapCfg:Name()))
	basicInfo:SetCoord(gridPos.X, gridPos.Y)
	basicInfo:SetDetailClick(function()
		g_Game.EventManager:TriggerEvent(EventConst.TOUCH_MENU_SHOW_OVERLAP_DETAIL_PAENL, I18N.Get(mapCfg:Desc()))
	end)

	local uiPages = {}

	-- 怪物列表
	if (mapCfg:SeNpcConfLength() > 0) then
		local monsterInfoPage = TouchMenuCellSeMonsterDatum.new()
		monsterInfoPage:SetTitle(I18N.Get("setips_title_monster"))
		for i = 1, mapCfg:SeNpcConfLength() do
			local seNpcCfg = ConfigRefer.SeNpc:Find(mapCfg:SeNpcConf(i))
			if (seNpcCfg) then
				local monsterData = TMCellSeMonsterDatum.new()
				monsterData:SetIconId(seNpcCfg:MonsterInfoIcon())
				monsterInfoPage:AppendMonsterDatum(monsterData)
			end
		end
		-- end)
		table.insert(uiPages, monsterInfoPage)
	end

	-- 奖励列表
	local mapRewardCgf = ConfigRefer.MapInstanceReward:Find(mapCfg:Rewards())
	if (mapRewardCgf and mapRewardCgf:RewardsLength() > 0) then
		local rewardInfoPage = TouchMenuCellRewardDatum.new()
		rewardInfoPage:SetTitle(I18N.Get("setips_title_reward"))
		for i = 1, mapRewardCgf:RewardsLength() do
			local rewardCfg = mapRewardCgf:Rewards(i)
			if rewardCfg:UnitRewardConfLength() >= 1 then
				for j = 1, rewardCfg:UnitRewardConfLength() do
					local itemId = rewardCfg:UnitRewardConf(j)
					local configCell = ConfigRefer.Item:Find(itemId)
					if (configCell) then
						local rewardData = {
							configCell = configCell,
							showTips = true,
							showCount = false,
							useNoneMask = false,
						}
						rewardInfoPage:AppendItemIconData(rewardData)
					end
				end
			end
		end
		table.insert(uiPages, rewardInfoPage)
	end

	-- 战力提示
	local buttonTip = TouchMenuButtonTipsData.new()
	local powerWarning = false
	local interactorCombatConditionWarning = false
	local mistLockedWarning = false

	if isPersonalInteractor then
		if self:SetupCombatTip(interactorId, buttonTip, gridPos) then
			interactorCombatConditionWarning = true
		elseif self:SetupMistLockedTip(buttonTip, gridPos) then
			mistLockedWarning = true
		else
			powerWarning = self:SetupPowerTip(troopId, buttonTip, mapCfg)
		end
	else
		powerWarning = self:SetupPowerTip(troopId, buttonTip, mapCfg)
	end

	-- 按钮
	local btn = TouchMenuMainBtnDatum.new()
	local onClick
	local needAddBtn = true
	if (not troopId or troopId <= 0) then
		needAddBtn = not KingdomMapUtils.IsNewbieState()
		btn.label = I18N.Get("alliance_battle_button5")

		local costPPP = mapCfg:CostPPP()
		onClick = overrideGoToFunc or function()
			---@type HUDSelectTroopListData
			local troopListParam = {}
			troopListParam.isSE = true
			troopListParam.tid = tid
			troopListParam.costPPP = costPPP
			require("HUDTroopUtils").StartMarch(troopListParam)
		end
	else
		if creepId then
            btn.label = I18N.Get("alliance_battle_button5")
            btn:SetCustomImage(SP_BTN_RED)
			local onClickFunc = overrideGoToFunc or function()
				self:PrepareEnv(true, troopId, true, true,
						fromType, gridPos.X, gridPos.Y, useDefaultPos, backToSceneTid)
                GotoUtils.GotoSceneClearCreepTumor(tid, troopId, creepId)
            end
			onClick = onClickFunc
        else
			btn.label = I18N.Get("alliance_battle_button5")
			btn:SetCustomImage(SP_BTN_RED)
			local onClickFunc = overrideGoToFunc or function()
				self:PrepareEnv(true, troopId, true, true,
						fromType, gridPos.X, gridPos.Y, useDefaultPos, backToSceneTid)
				if isPersonalInteractor then
					GotoUtils.GotoScenePersonalInteractor(tid, troopId, interactorId)
				else
					GotoUtils.GotoSceneByInteractor(tid, troopId, interactorId)
				end
			end
			onClick = onClickFunc
		end
	end

	if mistLockedWarning then
		btn.label = I18N.Get("button_dispel_nearby_fog")
		btn.onClick = function()
			local worldPosition = CS.Grid.MapUtils.CalculateCoordToTerrainPosition(gridPos.X, gridPos.Y, KingdomMapUtils.GetMapSystem())
			ModuleRefer.MapFogModule:GoToNearestMist(worldPosition)
		end
	else
		btn.onClick = onClick
	end
	if isPersonalInteractor and interactorCombatConditionWarning then
		btn.enable = false
	end

	if not ModuleRefer.MapFogModule:IsFogUnlocked(gridPos.X, gridPos.Y) then
		btn.label = I18N.Get("bw_goto_the_mist")
		btn.onClick = function()
			local size = KingdomMapUtils.GetCameraLodData():GetSizeByLod(2) - 10
			local worldPosition = CS.Grid.MapUtils.CalculateCoordToTerrainPosition(gridPos.X, gridPos.Y, KingdomMapUtils.GetMapSystem())
			KingdomMapUtils.MoveAndZoomCamera(worldPosition, size, nil, nil, nil, function()
				ModuleRefer.MapFogModule:ResetSelectedMists()
				ModuleRefer.MapFogModule:SetSelectedMistAt(gridPos.X, gridPos.Y, true)
			end)
		end
	end

	local btnGroup = {}
	if needAddBtn then
		btnGroup = TouchMenuHelper.GetRecommendButtonGroupDataArray({btn})
	end

	-- 打开界面
	local uiDatum = TouchMenuHelper.GetSinglePageUIDatum(basicInfo,
			uiPages, btnGroup, buttonTip):SetPos(worldPos, 20, 20)--:SetClickEmptyClose(true)
	return uiDatum, result
end

---@param troopId number
---@param cityPos Coordinate
---@param npcId number
---@param elementId number
---@param troopPresetIdx number
function SEPreModule:GetContinueGoToSeInCity(troopId, cityPos, npcId, elementId, troopPresetIdx)
    local npcCfg = ConfigRefer.NpcService:Find(npcId)
	if npcCfg:ServiceType() == NpcServiceType.CatchPet then
		return function()
			self:PrepareEnv(true, troopId, false, false,
				SEHudTroopMediatorDefine.FromType.City, cityPos:X(), cityPos:Y(), nil, nil, troopPresetIdx)
			GotoUtils.GotoCityPetCatch(npcId, elementId)
		end
	else
		local tid = npcCfg:ServiceParam()
		return function()
			self:PrepareEnv(true, troopId, false, false,
				SEHudTroopMediatorDefine.FromType.City, cityPos:X(), cityPos:Y(), nil, nil, troopPresetIdx)
			GotoUtils.GotoSceneSeFromCityNpc(tid, troopId, elementId, npcId, troopPresetIdx)
		end
	end
end

---@param context CreateTouchMenuForWildPetData
function SEPreModule:CreateTouchMenuForWildPetCatchable(context)
	local worldPos = context.worldPetData.worldPos
	local gridPos = context.worldPetData.gridPos
	local petInfo = context.worldPetData.data
	local villageId = (context.worldPetData.village and context.worldPetData.village.ID) or 0
	local petWildCfgId = petInfo.ConfigId
	local petCompId = petInfo.ID
	local landCfgId = ModuleRefer.TerritoryModule:GetLandCfgIdAt(math.floor(gridPos.X), math.floor(gridPos.Y))

	-- 参数检查
	if not petInfo then
		g_Logger.Error("创建大世界村庄抓宠信息环形菜单: 宠物数据或村庄数据为空")
		return
	end

	if (not worldPos or not gridPos) then
		g_Logger.Error("创建大世界村庄抓宠信息环形菜单: worldPos/gridPos为空")
		return
	end

	if landCfgId == nil or landCfgId == 0 then
		g_Logger.Error("创建大世界村庄抓宠信息环形菜单: 没获取到对应圈层Id")
		return
	end

	---@type PetWildConfigCell
	local petWildCfg = ConfigRefer.PetWild:Find(petWildCfgId)
	if (not petWildCfg) then
		g_Logger.Error("创建大世界村庄抓宠信息环形菜单: 宠物抓捕信息未找到, petWildId: %s", petWildCfgId)
		return
	end

	-- 数据构建

	-- 基本信息
	local basicInfo = TouchMenuBasicInfoDatumSe.new()
	-- basicInfo:SetImage(ArtResourceUtils.GetUIItem(petWildCfg:HeadPic()))
	basicInfo:SetName(I18N.Get(petWildCfg:Name()))
	basicInfo:SetDesc(I18N.Get(petWildCfg:Desc()))
	basicInfo:SetCoord(gridPos.X, gridPos.Y)
	basicInfo:SetDetailClick(function()
		g_Game.EventManager:TriggerEvent(EventConst.TOUCH_MENU_SHOW_OVERLAP_DETAIL_PAENL, I18N.Get(petWildCfg:Desc()))
	end)

	local hasPetCatchItem = false
	local uiPages = {}

	-- 抓宠道具
	local petCatchItemPage = TouchMenuCellRewardDatum.new()
	petCatchItemPage:SetTitle(I18N.Get("setips_title_catchpet"))
	local list = ModuleRefer.PetModule:GetPetCatchItemCfgList()
	for _, item in pairs(list) do
		local itemCfg = ConfigRefer.Item:Find(item:ItemCfg())
		local count = ModuleRefer.InventoryModule:GetAmountByConfigId(item:ItemCfg())
		local data = {
			configCell = itemCfg,
			count = count,
			useNoneMask = count <= 0,
			showTips = true,
		}
		hasPetCatchItem = hasPetCatchItem or count > 0
		petCatchItemPage:AppendItemIconData(data)
	end
	table.insert(uiPages, petCatchItemPage)

	-- 奖励列表
	local mapRewardCgf = ConfigRefer.MapInstanceReward:Find(petWildCfg:Reward())
	if (mapRewardCgf and mapRewardCgf:RewardsLength() > 0) then
		local rewardInfoPage = TouchMenuCellRewardDatum.new()
		rewardInfoPage:SetTitle(I18N.Get("setips_title_reward"))
		for i = 1, mapRewardCgf:RewardsLength() do
			local rewardCfg = mapRewardCgf:Rewards(i)
			if rewardCfg:UnitRewardConfLength() >= 1 then
				for j = 1, rewardCfg:UnitRewardConfLength() do
					local itemId = rewardCfg:UnitRewardConf(j)
					local configCell = ConfigRefer.Item:Find(itemId)
					if (configCell) then
						local rewardData = {
							configCell = configCell,
							showTips = true,
							showCount = false,
							useNoneMask = false,
						}
						rewardInfoPage:AppendItemIconData(rewardData)
					end
				end
			end
		end
		table.insert(uiPages, rewardInfoPage)
	end

	-- 宠物可能出现的圈层
	local landCfgCount = petWildCfg:LandNameLength()
	if landCfgCount > 0 then
		local landformInfoPage = TouchMenuCellLandformDatum.new()
		landformInfoPage:SetTitle(I18N.Get("bw_info_land_pet"))
		local landCfgIds = {}
		
		for i = 1, landCfgCount do
			table.insert(landCfgIds, petWildCfg:LandName(i))
		end
		landformInfoPage:SetLandformIds(landCfgIds)
		table.insert(uiPages, landformInfoPage)
	end

	-- 战力提示
	local buttonTip = TouchMenuButtonTipsData.new()
	buttonTip:SetContent(I18N.GetWithParams("pet_se_catchitemrecommend", petWildCfg:CatchRecommend()))

	-- 按钮
	local btn = TouchMenuMainBtnDatum.new()
	if (not hasPetCatchItem) then
		btn.label = I18N.Get("setips_btn_itemlack")
		btn.enable = false
		btn.onClickDisable = function()
			local getMoreItemInfos = {}
			-- 打开GetMore页面
			local data = {
				id = 70039,
				num = 1
			}
			table.insert(getMoreItemInfos, data)
			ModuleRefer.InventoryModule:OpenExchangePanel(getMoreItemInfos)
		end
	else
		btn.label = I18N.Get("setips_btn_catch")
		btn:SetCustomImage(SP_BTN_RED)
		btn.onClick = function()
			GotoUtils.GotoWildPetCatch(petWildCfgId, petCompId, villageId, landCfgId)
		end
	end

	local btnGroup
	btnGroup = TouchMenuHelper.GetRecommendButtonGroupDataArray({btn})

	-- 打开界面
	local uiDatum = TouchMenuHelper.GetSinglePageUIDatum(basicInfo,
			uiPages, btnGroup, buttonTip):SetPos(worldPos, 20, 20)

	require("TouchMenuUIMediator").OpenSingleton(uiDatum)
end

---@param context CreateTouchMenuForWildPetData
function SEPreModule:CreateTouchMenuForWildPetUncatchable(context)
	local worldPos = context.worldPetData.worldPos
	local gridPos = context.worldPetData.gridPos
	local petInfo = context.worldPetData.data
	local villageId = context.worldPetData.village and context.worldPetData.village.ID

	-- 参数检查
	if (not petInfo or not villageId) then
		g_Logger.Error("创建大世界村庄抓宠信息环形菜单: 宠物数据或村庄数据为空")
		return
	end

	if (not worldPos or not gridPos) then
		g_Logger.Error("创建大世界村庄抓宠信息环形菜单: worldPos/gridPos为空")
		return
	end

	---@type PetWildConfigCell
	local petWildCfg = ConfigRefer.PetWild:Find(petInfo.ConfigId)
	if (not petWildCfg) then
		g_Logger.Error("创建大世界村庄抓宠信息环形菜单: 宠物抓捕信息未找到, petWildId: %s", petInfo.ConfigId)
		return
	end

	-- 数据构建

	-- 基本信息
	local basicInfo = TouchMenuBasicInfoDatumSe.new()
	-- basicInfo:SetImage(ArtResourceUtils.GetUIItem(petWildCfg:HeadPic()))
	basicInfo:SetName(I18N.Get(petWildCfg:Name()))
	basicInfo:SetDesc(I18N.Get(petWildCfg:Desc()))
	basicInfo:SetCoord(gridPos.X, gridPos.Y)
	basicInfo:SetDetailClick(function()
		g_Game.EventManager:TriggerEvent(EventConst.TOUCH_MENU_SHOW_OVERLAP_DETAIL_PAENL, I18N.Get(petWildCfg:Desc()))
	end)

	local uiPages = {}
	-- 奖励列表
	local mapRewardCgf = ConfigRefer.MapInstanceReward:Find(petWildCfg:Reward())
	if (mapRewardCgf and mapRewardCgf:RewardsLength() > 0) then
		local rewardInfoPage = TouchMenuCellRewardDatum.new()
		rewardInfoPage:SetTitle(I18N.Get("setips_title_reward"))
		for i = 1, mapRewardCgf:RewardsLength() do
			local rewardCfg = mapRewardCgf:Rewards(i)
			if rewardCfg:UnitRewardConfLength() >= 1 then
				for j = 1, rewardCfg:UnitRewardConfLength() do
					local itemId = rewardCfg:UnitRewardConf(j)
					local configCell = ConfigRefer.Item:Find(itemId)
					if (configCell) then
						local rewardData = {
							configCell = configCell,
							showTips = true,
							showCount = false,
							useNoneMask = false,
						}
						rewardInfoPage:AppendItemIconData(rewardData)
					end
				end
			end
		end
		table.insert(uiPages, rewardInfoPage)
	end

	-- 宠物可能出现的圈层
	local landCfgCount = petWildCfg:LandNameLength()
	if landCfgCount > 0 then
		local landformInfoPage = TouchMenuCellLandformDatum.new()
		landformInfoPage:SetTitle(I18N.Get("bw_info_land_pet"))
		local landCfgIds = {}
		
		for i = 1, landCfgCount do
			table.insert(landCfgIds, petWildCfg:LandName(i))
		end
		landformInfoPage:SetLandformIds(landCfgIds)
		table.insert(uiPages, landformInfoPage)
	end

	-- 提示
	local buttonTip = TouchMenuButtonTipsData.new()
	if petInfo.CreateType == wds.PetWildCreateType.PetWildTypeVillage then
		buttonTip:SetContent(I18N.Get("pet_catch_condition_desc"))
	elseif petInfo.CreateType == wds.PetWildCreateType.PetWildTypeLandform then
        local tileX, tileZ = KingdomMapUtils.ParseBuildingPos(petInfo.BornPos)
		local isLandUnlock = ModuleRefer.LandformModule:IsLandUnlock(tileX, tileZ)
		local isInCommunication = ModuleRefer.TerritoryModule:IsInCommunicationArea(tileX, tileZ)
		if not isInCommunication then
			buttonTip:SetContent(I18N.Get("bw_toast_interact_range"))
			buttonTip:SetTips(function()
				ModuleRefer.GuideModule:CallGuide(GuideConst.CallID.HudLandformCommunication)
			end)
			ModuleRefer.GuideModule:CallGuide(GuideConst.CallID.LandformPetGuide)
		else
			buttonTip:SetContent(I18N.Get("pet_land_locked_des"))
		end
	end

	-- 按钮
	local btnGroup = nil
	local btn = TouchMenuMainBtnDatum.new()
	if petInfo.CreateType == wds.PetWildCreateType.PetWildTypeVillage then
		btn.label = I18N.Get("activity_turn_table_goto_btn_goto")
		btn.onClick = function()
			local vx = context.worldPetData.village.MapBasics.Position.X
			local vy = context.worldPetData.village.MapBasics.Position.Y
			local rx, rz = KingdomMapUtils.ParseCoordinate(vx, vy)
			local vwp = CS.Grid.MapUtils.CalculateCoordToTerrainPosition(rx, rz, KingdomMapUtils.GetMapSystem())
			KingdomMapUtils.GetBasicCamera():LookAt(vwp, 0)
		end
		btn:SetStyle(TouchMenuMainBtnDatum.Style.Black)
		btnGroup = TouchMenuHelper.GetRecommendButtonGroupDataArray({btn})
	elseif petInfo.CreateType == wds.PetWildCreateType.PetWildTypeLandform then
		btnGroup = TouchMenuHelper.GetRecommendButtonGroupDataArray({})
	end

	-- 打开界面
	local uiDatum = TouchMenuHelper.GetSinglePageUIDatum(basicInfo,
			uiPages, btnGroup, buttonTip):SetPos(worldPos, 20, 20)

	require("TouchMenuUIMediator").OpenSingleton(uiDatum)
end

--- 创建内城进入副本环形菜单
---@param self SEPreModule
---@param context CreateTouchMenuForCityContext
function SEPreModule:CreateTouchMenuForCity(context)
    local npcServiceCfgId = context.npcId
    local troopId = context.troopId
    local troopPresetIdx = context.troopPresetIdx
    local worldPos = context.worldPos
    local overrideGoToFunc = context.overrideGoToFunc
    local elementId = context.elementId
    local cityPos = context.cityPos
    local preSendEnterSceneOverride = context.preSendEnterSceneOverride
	-- 参数检查
	if (not npcServiceCfgId) then
		g_Logger.Error("创建内城进入副本环形菜单: 据点ID为空")
		return
	end

	local npcServiceCfg = ConfigRefer.NpcService:Find(npcServiceCfgId)
	if (not npcServiceCfg) then
		g_Logger.Error("创建内城进入副本环形菜单: 找不到据点, id: %s", npcServiceCfgId)
		return
	end

	if (not worldPos) then
		g_Logger.Error("创建内城进入副本环形菜单: worldPos为空")
		return
	end

	---@type PetWildConfigCell
	local petWildCfg = nil
	local mapCfg = nil
	local tid = 0
	local headPicCfgId = 0
	local basicName = nil
	local basicDesc = nil
	local mapRewardCfgId = nil

	if npcServiceCfg:ServiceType() == NpcServiceType.CatchPet then
		local petWildCfgId = npcServiceCfg:ServiceParam()
		petWildCfg = ConfigRefer.PetWild:Find(petWildCfgId)
		if (not petWildCfg) then
			g_Logger.Error("创建内城进入副本环形菜单: 未找到宠物抓捕信息, npcServiceId %s petWildId: %s", npcServiceCfgId, petWildCfgId)
		end

		-- headPic = petWildCfg:HeadPic()
		basicName = petWildCfg:Name()
		basicDesc = petWildCfg:Desc()
		mapRewardCfgId = petWildCfg:Reward()
	else
		tid = npcServiceCfg:ServiceParam()
		mapCfg = ConfigRefer.MapInstance:Find(tid)
		if (not mapCfg) then
			g_Logger.Error("创建内城进入副本环形菜单: 未找到副本, id: %s", tid)
			return
		end

		headPicCfgId = mapCfg:HeadPic()
		basicName = mapCfg:Name()
		basicDesc = mapCfg:Desc()
		mapRewardCfgId = mapCfg:Rewards()
	end

	-- 数据构建

	-- 基本信息
	local basicInfo = TouchMenuBasicInfoDatumSe.new()
	basicInfo:SetImage(ArtResourceUtils.GetUIItem(headPicCfgId))
	basicInfo:SetName(I18N.Get(basicName))
	basicInfo:SetDesc(I18N.Get(basicDesc))
	basicInfo:SetDetailClick(function()
		g_Game.EventManager:TriggerEvent(EventConst.TOUCH_MENU_SHOW_OVERLAP_DETAIL_PAENL, I18N.Get(basicDesc))
	end)

	local hasPetCatchItem = false
	local uiPages = {}

	-- 怪物列表
	if (mapCfg and mapCfg:SeNpcConfLength() > 0) then
		local monsterInfoPage = TouchMenuCellSeMonsterDatum.new()
		monsterInfoPage:SetTitle(I18N.Get("setips_title_monster"))
		for i = 1, mapCfg:SeNpcConfLength() do
			local seNpcCfg = ConfigRefer.SeNpc:Find(mapCfg:SeNpcConf(i))
			if (seNpcCfg) then
				local monsterData = TMCellSeMonsterDatum.new()
				monsterData:SetIconId(seNpcCfg:MonsterInfoIcon())
				local category = seNpcCfg:Category()
				local showVfx = category == SEUnitCategory.Boss or category == SEUnitCategory.Elite
				monsterData:SetShowVfx(showVfx)
				monsterInfoPage:AppendMonsterDatum(monsterData)
				break
			end
		end
		table.insert(uiPages, monsterInfoPage)
	end

	-- 抓宠道具
	if (petWildCfg) then
		local petCatchItemPage = TouchMenuCellRewardDatum.new()
		petCatchItemPage:SetTitle(I18N.Get("setips_title_catchpet"))
		local list = ModuleRefer.PetModule:GetPetCatchItemCfgList()
		for _, item in pairs(list) do
			local itemCfg = ConfigRefer.Item:Find(item:ItemCfg())
			local count = ModuleRefer.InventoryModule:GetAmountByConfigId(item:ItemCfg())
			local data = {
				configCell = itemCfg,
				count = count,
				useNoneMask = count <= 0,
				showTips = true,
			}
			hasPetCatchItem = hasPetCatchItem or count > 0
			petCatchItemPage:AppendItemIconData(data)
		end
		table.insert(uiPages, petCatchItemPage)
	end

	-- 奖励列表
	local mapRewardCgf = ConfigRefer.MapInstanceReward:Find(mapRewardCfgId)
	if (mapRewardCgf and mapRewardCgf:RewardsLength() > 0) then
		local rewardInfoPage = TouchMenuCellRewardDatum.new()
		if (petWildCfg) then
			rewardInfoPage:SetTitle(I18N.Get("setips_title_pet"))
		else
			rewardInfoPage:SetTitle(I18N.Get("setips_title_reward"))
		end

		for i = 1, mapRewardCgf:RewardsLength() do
			local rewardCfg = mapRewardCgf:Rewards(i)
			if rewardCfg:UnitRewardConfLength() < 1 then
				goto continue
			end
			for j = 1, rewardCfg:UnitRewardConfLength() do
				local itemId = rewardCfg:UnitRewardConf(j)
				local rewardCfg = ConfigRefer.Item:Find(itemId)
				if (rewardCfg) then
					local rewardData = {
						configCell = rewardCfg,
						showTips = true,
						showCount = false,
						useNoneMask = false,
					}
					rewardInfoPage:AppendItemIconData(rewardData)
				end
			end

			::continue::
		end
		table.insert(uiPages, rewardInfoPage)
	end

	-- 战力提示
	local powerWarning = false
	local buttonTip = TouchMenuButtonTipsData.new()
	if (petWildCfg) then
		buttonTip:SetContent(I18N.GetWithParams("pet_se_catchitemrecommend", petWildCfg:CatchRecommend()))
	else
		powerWarning = self:SetupPowerTip(troopId, buttonTip, mapCfg)
	end

	-- 按钮
	local btn = TouchMenuMainBtnDatum.new()
	local onClick
	if (troopId and troopId <= 0) then
		btn.label = I18N.Get("setips_btn_troop")
		onClick = function()
			g_Game.UIManager:Open(UIMediatorNames.UITroopMediator)
		end
	else
        if (petWildCfg) then
            if (not hasPetCatchItem) then
                btn.label = I18N.Get("setips_btn_itemlack")
				btn.enable = false
                onClick = nil
            else
				if (context.isGoto) then
					btn.label = I18N.Get("setips_btn_go")
				else
					btn.label = I18N.Get("setips_btn_catch")
					btn:SetCustomImage(SP_BTN_RED)
				end
                local continueGoEnter = self:GetContinueGoToSeInCity(troopId, cityPos, npcServiceCfgId, elementId, troopPresetIdx)
                if context.targetIsPolluted then
                    ModuleRefer.ToastModule:AddSimpleToast(I18N.Get("creep_clean_needed"))
                else
                    onClick = overrideGoToFunc or function()
                        if preSendEnterSceneOverride then
                            preSendEnterSceneOverride(continueGoEnter)
                        else
                            continueGoEnter()
                        end
                    end
                end
			end
		else
			if (context.isGoto) then
				btn.label = I18N.Get("setips_btn_go")
			else
				btn.label = I18N.Get("setips_btn_battle")
				btn:SetCustomImage(SP_BTN_RED)
			end
			local continueGoEnter = self:GetContinueGoToSeInCity(troopId, cityPos, npcServiceCfgId, elementId, troopPresetIdx)
			if context.targetIsPolluted then
				onClick = function()
					ModuleRefer.ToastModule:AddSimpleToast(I18N.Get("creep_clean_needed"))
				end
			else
				local onClickFunc = overrideGoToFunc or function()
					if preSendEnterSceneOverride then
						preSendEnterSceneOverride(continueGoEnter)
					else
						continueGoEnter()
					end
				end
				onClick = onClickFunc
			end
		end
	end
	btn.onClick = onClick
	local btnGroup = TouchMenuHelper.GetRecommendButtonGroupDataArray({btn})
    ---@type TouchMenuPollutedData|nil
    local hintData = nil
    if context.targetIsPolluted then
        hintData = TouchMenuPollutedData.new(context.pollutedHint, nil)
    end

	-- 打开界面
	local uiDatum = TouchMenuHelper.GetSinglePageUIDatum(basicInfo,
			uiPages, btnGroup, buttonTip, nil, nil, hintData):SetPos(worldPos)

	require("TouchMenuUIMediator").OpenSingleton(uiDatum)
end

---@param self SEPreModule
---@param troopId number
---@param tipData TouchMenuButtonTipsData
---@param mapCfg MapInstanceConfigCell
---@return boolean
function SEPreModule:SetupPowerTip(troopId, tipData, mapCfg)
	if (not tipData or not mapCfg) then return false end
	local power = mapCfg:Power()
	local troopPower
	local str = I18N.GetWithParams(I18N_POWER, CS.System.String.Format("{0:#,0}", mapCfg:Power()))
	if (not troopId or troopId <= 0) then
		--tipData:SetContent(str)
		--return
		troopPower = ModuleRefer.SlgModule:GetStrongestTroopPower()
	else
		troopPower = ModuleRefer.SlgModule:GetTroopPowerByTroopId(troopId)
	end
	if (troopPower >= power) then
		tipData:SetIcon(SP_ICON_POWER_ENOUGH)
		tipData:SetContent(string.format(COLOR_FORMAT, COLOR_POWER_ENOUGH, str))
		return false
	else
		tipData:SetIcon(SP_ICON_POWER_NOT_ENOUGH)
		tipData:SetContent(string.format(COLOR_FORMAT, COLOR_POWER_NOT_ENOUGH, str))
		return true
	end
end

function SEPreModule:SetupCombatTip(interactorId, tipData)
	if ModuleRefer.RadarModule:IsRadarTaskEntity(interactorId) then
		return false
	end
	if not ModuleRefer.MapSlgInteractorModule:IsCanCombat(interactorId) then
		tipData:SetIcon(SP_ICON_POWER_NOT_ENOUGH)
		local str = I18N.GetWithParams("tips_city_zone_pre_npc", ModuleRefer.MapSlgInteractorModule:GetLastSlgInteractoName(interactorId))
		tipData:SetContent(string.format(COLOR_FORMAT, COLOR_POWER_NOT_ENOUGH, str))
		return true
	end
	return false
end

function SEPreModule:SetupMistLockedTip(tipData, coord)
	if not ModuleRefer.MapFogModule:IsFogUnlocked(coord.X, coord.Y) then
		tipData:SetIcon(SP_ICON_POWER_NOT_ENOUGH)
		local str = I18N.Get("creep_tips_clearmist")
		tipData:SetContent(string.format(COLOR_FORMAT, COLOR_POWER_NOT_ENOUGH, str))
		return true
	end
	return false
end

---@param troopPower number
---@param mapMinPower number
---@param strPower string
---@return string, string
function SEPreModule:GetPowerTips(troopPower, mapMinPower, noColorTips)
	if (troopPower >= mapMinPower) then
		return SP_ICON_POWER_ENOUGH, string.format(COLOR_FORMAT, COLOR_POWER_ENOUGH, noColorTips)
	else
		return SP_ICON_POWER_NOT_ENOUGH, string.format(COLOR_FORMAT, COLOR_POWER_NOT_ENOUGH, noColorTips)
	end
end

---@return boolean,number,number,number @isPetCatch, CostPPP, RecommendPower| RecommendCatchItem, HasPetCatchItemCount
function SEPreModule.GetNpcServiceBattleInfo(npcId)
	local npcCfg = ConfigRefer.NpcService:Find(npcId)
	local isPetCatch = false
	local costPPP = 0
	local recommend = 0
	local itemCount = 0

	if npcCfg:ServiceType() == NpcServiceType.CatchPet then
		isPetCatch = true
		local petWildId = npcCfg:ServiceParam()
		local petWildCfg = ConfigRefer.PetWild:Find(petWildId)
		local list = ModuleRefer.PetModule:GetPetCatchItemCfgList()
		for _, item in pairs(list) do
			local count = ModuleRefer.InventoryModule:GetAmountByConfigId(item:ItemCfg())
			itemCount = itemCount + count
		end
		recommend = petWildCfg:CatchRecommend()
	else
		isPetCatch = false
		local tid = npcCfg and npcCfg:ServiceParam() or 0
		local mapCfg = (tid > 0) and ConfigRefer.MapInstance:Find(tid) or nil
		if not mapCfg then
			return isPetCatch, 0, 0, 0
		end

		costPPP = mapCfg:CostPPP()
		recommend = mapCfg:Power()
	end

	return isPetCatch, costPPP, recommend, itemCount
end

--- 准备环境
---@param self SEPreModule
function SEPreModule:PrepareEnv(triggerEvent, troopId, closeTroopMenu, closeTroopList, fromType, x, y, useDefaultPos, backToSceneTid, presetIndex)
	if (triggerEvent) then
		g_Game.EventManager:TriggerEvent(EventConst.ON_TROOP_LEAVE_EVENT_TRIGGER, troopId, nil, presetIndex)
	end
	if (closeTroopMenu) then
		ModuleRefer.SlgModule:CloseTroopMenu()
	end
	if (closeTroopList) then
		g_Game.UIManager:CloseAllByName(UIMediatorNames.HUDSelectTroopList)
	end
	if (fromType ~= nil) then
		g_Game.StateMachine:WriteBlackboard("SE_FROM_TYPE", fromType, true)
	end
	if (x ~= nil) then
		g_Game.StateMachine:WriteBlackboard("SE_FROM_X", x, true)
	end
	if (y ~= nil) then
		g_Game.StateMachine:WriteBlackboard("SE_FROM_Y", y, true)
	end
	if (useDefaultPos ~= nil) then
		g_Game.StateMachine:WriteBlackboard("SE_USE_DEFAULT_POS", useDefaultPos, true)
	end
	if (backToSceneTid ~= nil) then
		g_Game.StateMachine:WriteBlackboard("SE_BACK_TO_SCENE_TID", backToSceneTid, true)
	end
	g_Game.StateMachine:WriteBlackboard("SE_FROM_CLIMB_TOWER", 0, true)
end

return SEPreModule
