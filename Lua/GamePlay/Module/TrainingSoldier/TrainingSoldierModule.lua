---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by shoufeng.zhang.
--- DateTime: 2022/6/13 10:42
---
local BaseModule = require('BaseModule')
local ModuleRefer = require('ModuleRefer')
local CityWorkFormula = require("CityWorkFormula")
local ConfigRefer = require('ConfigRefer')
local DBEntityType = require('DBEntityType')
local PushConsts = require("PushConsts")
local CityWorkType = require("CityWorkType")
local NumberFormatter = require('NumberFormatter')
local I18N = require("I18N")
local TimeFormatter = require('TimeFormatter')

---@class TrainingSoldierModule
local TrainingSoldierModule = class('TrainingSoldierModule',BaseModule)

function TrainingSoldierModule:OnRegister()

end

function TrainingSoldierModule:OnRemove()

end

function TrainingSoldierModule:OnSetLocalNotification(callBack)
    if callBack == nil then return end
    local player = ModuleRefer.PlayerModule:GetPlayer()
    if player then
        local trainSoldierPushCfg = ConfigRefer.Push:Find(PushConsts.training_finish)
        local castleMilitia = self:GetCastleMilitia()
        if not castleMilitia.SwitchOff then
            local curSoldierNum = castleMilitia.Count
            local maxSoldierNum = castleMilitia.Capacity
            if curSoldierNum < maxSoldierNum then
                local traingSpeed = castleMilitia.IncPerMinute
                local notifyId = tonumber(trainSoldierPushCfg:Id())
                local title = I18N.Get(trainSoldierPushCfg:Title())
                local subtitle = I18N.Get(trainSoldierPushCfg:SubTitle())
                local content = I18N.Get(trainSoldierPushCfg:Content())
                local delay = ((maxSoldierNum - curSoldierNum) / traingSpeed) * TimeFormatter.OneMinuteSeconds
                callBack(notifyId, title, subtitle, content, delay, nil)
            end
        end
    end
end

---@return wds.CastleBrief
function TrainingSoldierModule:GetCastleBrief()
    local player = ModuleRefer.PlayerModule:GetPlayer()
    return g_Game.DatabaseManager:GetEntity(player.SceneInfo.CastleBriefId, DBEntityType.CastleBrief)
end

function TrainingSoldierModule:GetCastleMilitia()
    local castleBrief = self:GetCastleBrief()
    return castleBrief.Castle.CastleMilitia
end

function TrainingSoldierModule:GetSoldierNumById(id)
    local castleBrief = self:GetCastleBrief()
    return castleBrief.Soldier.Units[id] or 0
end

function TrainingSoldierModule:GetSoldierCount()
    local numCount = 0
    local castleBrief = self:GetCastleBrief()
    for _, num in pairs(castleBrief.Soldier.Units) do
        numCount = numCount + num
    end
    return numCount
end

function TrainingSoldierModule:RecordCustomTraingTime(time)
    self.customTraingTime = time
end

function TrainingSoldierModule:GetCustomTraingTime()
    return self.customTraingTime
end

function TrainingSoldierModule:ClearCustomTraingTime()
    self.customTraingTime = 0
end

function TrainingSoldierModule:RecordAutoTraingTime(time)
    self.autoTraingTime = time
end

function TrainingSoldierModule:GetAutoTraingTime()
    return self.autoTraingTime
end

function TrainingSoldierModule:ClearAutoTraingTime()
    self.autoTraingTime = 0
end

function TrainingSoldierModule:GetWorkId(configId)
    local workId
    local furnitureCfg = ConfigRefer.CityFurnitureLevel:Find(configId)
    for i = 1, furnitureCfg:WorkListLength() do
        local id = furnitureCfg:WorkList(i)
        local workCfg = ConfigRefer.CityWork:Find(id)
        if workCfg:Type() == CityWorkType.MilitiaTrain then
            workId = id
        end
    end
    return workId
end

function TrainingSoldierModule:GetLimitTotalSoldierCount()
    local castleBrief = self:GetCastleBrief()
    return castleBrief.Soldier.Capacity
end

function TrainingSoldierModule:GetTraingSpeed(workId, buildingId, furnitureId, citizenId)
    local workCfg = ConfigRefer.CityWork:Find(workId)
    local speed = CityWorkFormula.GetMilitiaTrainSpeed(workCfg, buildingId, furnitureId, citizenId)
    return speed
end

function TrainingSoldierModule:GetCostItems(workId, buildingId, furnitureId, citizenId)
    local workCfg = ConfigRefer.CityWork:Find(workId)
    local costItemGroup = ConfigRefer.CityProcess:Find(workCfg:MilitiaTrainInfo()):Cost()
    local calculateCost = CityWorkFormula.CalculateInput(workCfg, ConfigRefer.ItemGroup:Find(costItemGroup), buildingId, furnitureId, citizenId)
    return calculateCost
end

function TrainingSoldierModule:GetWorkPower(workId, buildingId, furnitureId, citizenId)
    local workCfg = ConfigRefer.CityWork:Find(workId)
    local power = CityWorkFormula.GetWorkPower(workCfg, buildingId, furnitureId, citizenId)
    return power
end

function TrainingSoldierModule:GetCostDecrease(workId, buildingId, furnitureId, citizenId)
    local workCfg = ConfigRefer.CityWork:Find(workId)
    local costDecrease = CityWorkFormula.GetCostDecrease(workCfg, buildingId, furnitureId, citizenId)
    return NumberFormatter.PercentWithSignSymbol(costDecrease)
end

return TrainingSoldierModule