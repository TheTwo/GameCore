---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xh.
--- DateTime: 2022/11/7 14:54
---

local Delegate = require('Delegate')
local BaseTableViewProCell = require("BaseTableViewProCell")
local I18N = require("I18N")
local ModuleRefer = require("ModuleRefer")
local ConfigRefer = require("ConfigRefer")
local NumberFormatter = require('NumberFormatter')
local UIHelper = require('UIHelper')
local ColorConsts = require('ColorConsts')
local ColorUtil = require('ColorUtil')

---@class GveBattleDamageInfoCellData
---@field index number
---@field isSelf boolean
---@field damageInfo PlayerDamageInfo
---@field allDamage number
---@field maxPlayerDamage number
---@field isThumbnail boolean

---@class GveBattleDamageInfoCell : BaseTableViewProCell
---@field data GveBattleDamageInfoCellData
local GveBattleDamageInfoCell = class("GveBattleDamageInfoCell", BaseTableViewProCell)
---@type GveBattleDamageInfoCell
GveBattleDamageInfoCell.currentCell = nil

local NameTextColor = ColorConsts.army_green
local SliderColor = {
    [1] = ColorUtil.FromHexNoAlphaString('a1712c'), --CS.UnityEngine.Color(200/255, 133/255, 44/255,1),
    [2] = ColorUtil.FromHexNoAlphaString('4d526a'), --CS.UnityEngine.Color(77/255, 82/255, 106/255,1),
    [3] = ColorUtil.FromHexNoAlphaString('634038'), --CS.UnityEngine.Color(99/255, 64/255, 56/255,1),
    [4] = ColorUtil.FromHexNoAlphaString('313645'), --CS.UnityEngine.Color(49/255, 54/255, 69/255,1),
}

local RankBaseColor = {
    [1] = ColorUtil.FromHexNoAlphaString('f9991c'),
    [2] = ColorUtil.FromHexNoAlphaString('6a739b'),
    [3] = ColorUtil.FromHexNoAlphaString('7d4141'),
    [4] = ColorUtil.FromHexNoAlphaString('17181c'),
}

function GveBattleDamageInfoCell:ctor()
    BaseTableViewProCell.ctor(self)    
end

function GveBattleDamageInfoCell:OnCreate(param)
    self.imgIconRank = self:Image('p_icon_rank') or self:Image('p_icon_ranking')
    if not self.imgIconRank then
        self.imgIconRank = self:Image('icon_rank')
    end
    self.textName = self:Text('p_text_name')
    self.textPercent = self:Text('p_text_percent')

    self.textRankingOther = self:Text('p_text_ranking_other')
    self.sliderProgress = self:Slider('p_progress')
    self.imgFillImage = self:Image('p_fillImage')
    self.imgBase = self:Image('p_base')
    self.compChildUiHeadPlayer = self:LuaObject('child_ui_head_player')
    self.textOutput = self:Text('p_text_output')
end

function GveBattleDamageInfoCell:OnOpened(param)

end

function GveBattleDamageInfoCell:OnClose(param)

end

---@param data GveBattleDamageInfoCellData
function GveBattleDamageInfoCell:OnFeedData(data)
    self.data = data
    self.isThumbnail = data.isThumbnail
    if data.index > 3 then
        self.imgIconRank:SetVisible(false)
        if self.textRankingOther then
            self.textRankingOther:SetVisible(true)
            self.textRankingOther.text = data.index
        end
    else
        self.imgIconRank:SetVisible(true)
        g_Game.SpriteManager:LoadSprite("sp_activity_ranking_icon_top_" .. data.index,self.imgIconRank)
        if self.textRankingOther then
            self.textRankingOther:SetVisible(false)
        end
    end
    if data.isSelf then
        self.textName.text = UIHelper.GetColoredText(data.damageInfo.playerName,NameTextColor)
    else
        self.textName.text = data.damageInfo.playerName
    end

    local allDamage = data.allDamage
    if not allDamage or allDamage == 0 then
        allDamage = 1
    end

    if self.textPercent then
        self.textPercent.text = NumberFormatter.Percent(data.damageInfo.damage / allDamage)
    end

    if self.sliderProgress then
        self.sliderProgress.value = data.damageInfo.damage / allDamage
    end
    if self.imgFillImage then
        if data.index > 3 then
            self.imgFillImage.color = SliderColor[4]
        else
            self.imgFillImage.color = SliderColor[data.index]
        end
    end

    if self.imgBase then
        if data.index > 3 then
            g_Game.SpriteManager:LoadSprite("sp_league_war_base_mine",self.imgBase)
            self.imgBase.color = RankBaseColor[4]
        else
            g_Game.SpriteManager:LoadSprite("sp_league_war_base_top_" .. data.index,self.imgBase)
            self.imgBase.color = RankBaseColor[data.index]
        end
    end

    if self.compChildUiHeadPlayer then
        self.compChildUiHeadPlayer:FeedData(self.data.damageInfo.portraitInfo)
    end
    if self.textOutput then
        if self.isThumbnail then
            self.textOutput.text = NumberFormatter.Percent(data.damageInfo.damage / allDamage)
        else
            self.textOutput.text = NumberFormatter.Normal(data.damageInfo.damage)
        end
    end

end


return GveBattleDamageInfoCell