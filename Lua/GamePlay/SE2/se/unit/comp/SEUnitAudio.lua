---
--- SE单位音频
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by BE.Tenner.
--- DateTime: 2021/10/12 10:59
---

local SEUnitComponent = require("SEUnitComponent")
local SEUnitComponentType = require("SEUnitComponentType")

---@class SEUnitAudio:SEUnitComponent
local SEUnitAudio = class("SEUnitAudio",  SEUnitComponent);

--local AUDIO_BANK = "se_all"
--local AUDIO_OPEN_DOOR = "sfx_se_door_open"
--local AUDIO_PICKUP = "sfx_se_pickup"
--local AUDIO_CONTROL = "Control"

---@param self SEUnitAudio
---@param unit SEUnit
---@return void
function SEUnitAudio:ctor(unit)
    SEUnitAudio.super.ctor(self, SEUnitComponentType.Audio, unit)
    ---@type AudioConfigConfItem
    self._runConf = nil
    ---@type AudioConfigConfItem
    self._walkConf = nil
    self._runPlaying = false
    self._walkPlaying = false
end

---@param self SEUnitAudio
---@return void
function SEUnitAudio:Init()
    ---@type SeNpcConfItem
    local config = nil -- TODO: self:GetUnit():GetData():GetConfig()
    if (config) then
        self._runConf = config.AudioRun
        self._walkConf = config.AudioWalk
    end
end

---@param self SEUnitAudio
---@return void
function SEUnitAudio:PlayRun()
    if (not self._runPlaying) then
        self._runPlaying = self:GetEnvironment():PlayAudio(self._runConf)
        --KWwise.PlayEvent(AUDIO_BANK, self._runPlayEvent, self:GetRootObject())
    end
end

---@param self SEUnitAudio
---@return void
function SEUnitAudio:StopRun()
    if (self._runPlaying) then
        self._runPlaying = not self:GetEnvironment():StopAudio(self._runConf)
        --KWwise.PlayEvent(AUDIO_CONTROL, self._runStopEvent, self:GetRootObject())
    end
end

---@param self SEUnitAudio
---@return void
function SEUnitAudio:PlayWalk()
    if (not self._walkPlaying) then
        self._walkPlaying = self:GetEnvironment():PlayAudio(self._walkConf)
        --KWwise.PlayEvent(AUDIO_BANK, self._walkPlayEvent, self:GetRootObject())
    end
end

---@param self SEUnitAudio
---@return void
function SEUnitAudio:StopWalk()
    if (self._walkPlaying) then
        self._walkPlaying = not self:GetEnvironment():StopAudio(self._walkConf)
        --KWwise.PlayEvent(AUDIO_CONTROL, self._walkStopEvent, self:GetRootObject())
    end
end

-----@param self SEUnitAudio
-----@return void
--function SEUnitAudio:PlayGet()
--    SELogger.LogLow("audio: play get")
--    KWwise.PlayEvent(AUDIO_BANK, AUDIO_PICKUP, self:GetRootObject())
--end
--
-----@param self SEUnitAudio
-----@return void
--function SEUnitAudio:PlayOpenDoor()
--    SELogger.LogLow("audio: play open door")
--    KWwise.PlayEvent(AUDIO_BANK, AUDIO_OPEN_DOOR, self:GetRootObject())
--end

return SEUnitAudio
