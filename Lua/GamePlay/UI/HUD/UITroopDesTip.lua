---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by shoufeng.zhang.
--- DateTime: 2022/5/16 17:10
---
local BaseUIMediator = require('BaseUIMediator')
local UIHelper = require('UIHelper')
local ModuleRefer = require('ModuleRefer')
--local Vector2 = CS.UnityEngine.Vector2
local DBEntityType = require('DBEntityType')
local SlgBattlePowerHelper = require('SlgBattlePowerHelper')
local KingdomMapUtils = require('KingdomMapUtils')
local SlgUtils = require('SlgUtils')
local I18N = require('I18N')
local FpAnimTriggerEvent = require('FpAnimTriggerEvent')
---@class UITroopDesTip : BaseUIMediator
local UITroopDesTip = class("UITroopDesTip",BaseUIMediator)

---@protected
function UITroopDesTip:ctor(...)
    BaseUIMediator.ctor(self, ...)
    self._ctrl = nil    
    self._entity = nil
end

function UITroopDesTip:OnCreate(param)
    self.goIconRoot = self:Transform('root')
    self.imgStatusIconBack = self:Image('icon')
    self.imgStatusIcon = self:Image('p_icon_status')
    self.distRoot = self:GameObject('textback')
    self.txtDistance = self:Text('p_txtDistance')
    self.imgPowerStatus = self:Image('p_icon_emoji')
    self.goEnergy = self:GameObject('p_energy')
    self.textEnergy = self:Text('p_text_energy')
    self.goIconBan = self:GameObject('icon_ban')
    self.animTrigger = self:AnimTrigger('vx_trigger')
    self.distRoot:SetActive(false)    
    self.distRootState = false
    self.goIconRoot.gameObject:SetActive(false)
    self.iconState = false   
    if self.imgPowerStatus then
        self.imgPowerStatus:SetVisible(true)
        self.imgPowerStatus.enabled = false
    end
    self.playerModule = ModuleRefer.PlayerModule    
    self.myself = ModuleRefer.PlayerModule:GetPlayer()
    self.goEnergy:SetActive(false)
    self.extInfo = nil
end

function UITroopDesTip:OnShow()
    g_Game.SpriteManager:LoadSprite('sp_troop_base_hint_b',self.imgStatusIconBack)   
    g_Game.SpriteManager:LoadSprite('sp_troop_img_state_1',self.imgStatusIcon)    
    self.slgModule = ModuleRefer.SlgModule
end

function UITroopDesTip:OnOpened()

end

---@class UITroopDesTip.LuaData : SlgTransPeer
---@field _iconImage CS.UnityEngine.UI.Image view/icon_status
---@field _buffGo CS.UnityEngine.GameObject view/top_info/skill
---@field _distanceLabel CS.UnityEngine.UI.Text view/top_info/text_distance/text
---@field _topInfoGo CS.UnityEngine.GameObject view/top_info

local TipType = {
    None = 0,
    Move = 1,
    Back = 2,
    Attack = 4,
    Defend = 6,
    Collect = 7,
    Forbidden = 8,
    Rebuild = 9,
}


local TipIcon = {
    [TipType.Move] = 'sp_troop_img_state_1',
    [TipType.Back] = 'sp_troop_img_state_2',
    [TipType.Attack] = 'sp_troop_img_state_4',
    [TipType.Defend] = 'sp_troop_img_state_8',
    [TipType.Collect] = 'sp_troop_img_state_collect',
    [TipType.Forbidden] = 'sp_icon_ban',
    [TipType.Rebuild] = 'sp_comp_icon_build',

}
local TipIconBack = {
    [TipType.Move] = 'sp_troop_base_hint_b',
    [TipType.Back] = 'sp_troop_base_hint_b',
    [TipType.Attack] = 'sp_troop_base_hint_a',
    [TipType.Defend] = 'sp_troop_base_hint_b',
    [TipType.Collect] = 'sp_troop_base_hint_b',
    [TipType.Forbidden] = 'sp_troop_base_hint_b',
    [TipType.Rebuild] = 'sp_troop_base_hint_b',
}

function UITroopDesTip:__SetTargetEntity_Normal(entity,needCompPower)
    local targetState = TipType.Move
    ---@type wds.Owner
    local owner = entity.Owner
    local _isFriendly = ModuleRefer.PlayerModule:IsFriendly(owner)
    local _isEmpty = ModuleRefer.PlayerModule:IsEmpty(owner)
    local _isSelf = ModuleRefer.PlayerModule:IsMine(owner)
    if entity.TypeHash == DBEntityType.CastleBrief or entity.TypeHash == DBEntityType.ViewCastleBriefForMap then
        --is My Castle
        if _isSelf then
            targetState = TipType.Back
        elseif _isFriendly then
            targetState = TipType.Defend
        else
            targetState = TipType.Attack
        end
    elseif entity.TypeHash == DBEntityType.ResourceField then
        local canCollect = not ModuleRefer.MapResourceFieldModule:IsLockedByVillage(entity)
                        and not ModuleRefer.MapResourceFieldModule:IsLockedByLandform(entity)
        if canCollect then
            if _isEmpty then
                targetState = TipType.Collect
            elseif _isFriendly then
                targetState = TipType.Move
            else
                targetState = TipType.Attack
            end
        else
            targetState = TipType.Forbidden
        end
    elseif entity.TypeHash == DBEntityType.Village then
        ---@type wds.Village
        local village = entity
        if ModuleRefer.VillageModule:IsVillageRuinRebuilding(entity) then
            _isFriendly = ModuleRefer.PlayerModule:IsFriendlyById(village.BuildingRuinRebuild.AllianceId)
            if _isFriendly then
                targetState = TipType.Rebuild
            else
                targetState = TipType.Defend
            end
        else
            if _isFriendly then
                targetState = TipType.Defend
            else
                targetState = TipType.Attack
            end
        end

    else
        --is My troops
        if _isFriendly then
            targetState = TipType.Defend
        else
            targetState = TipType.Attack
        end
    end
    

    if targetState == TipType.Attack then
        local isSE,needPower,recommendPower,costPPP = KingdomMapUtils.CalcRecommendPower(entity)
        local troopPower = 0
        if isSE then
            troopPower = self.slgModule:GetFirstSelectPower(true)
        else
            troopPower = self.slgModule:GetAllSelectPower()
        end

        local compareResult = SlgBattlePowerHelper.ComparePower(troopPower,needPower,recommendPower)
        if compareResult == -1 or not needCompPower then                    
            self.imgPowerStatus.enabled = false
        else
            self.imgPowerStatus.enabled = true                                      
            g_Game.SpriteManager:LoadSprite(SlgBattlePowerHelper.GetPowerCompareIcon(compareResult),self.imgPowerStatus)            
        end

        if needCompPower and costPPP and costPPP > 0 then
            self.goEnergy:SetActive(true)
            self.textEnergy.text = costPPP
        else
            self.goEnergy:SetActive(false)
        end

        if SlgUtils.IsMobCanTriggerAutoFinish(entity) then
            self.extInfo = "autofinish_introducing"
            self:SetExtInfo()
        end

    else
        self.imgPowerStatus.enabled = false
    end
    self.goIconBan:SetActive(false)
    return targetState
end

function UITroopDesTip:__SetTargetEntity_Behemoth(entity,needCompPower)
    local targetState = TipType.Move
    local _isFriendly = ModuleRefer.PlayerModule:IsFriendly(entity.Owner)
    local _isSelf = ModuleRefer.PlayerModule:IsMine(entity.Owner)
    if entity.TypeHash == DBEntityType.CastleBrief or entity.TypeHash == DBEntityType.ViewCastleBriefForMap then
        --is My Castle
        if _isSelf then
            targetState = TipType.Back
        elseif _isFriendly then
            targetState = TipType.Defend
        else
            targetState = TipType.Attack
        end
    else
        --is My troops
        if _isFriendly then
            targetState = TipType.Defend
        else
            targetState = TipType.Attack
        end
    end
       
    self.goEnergy:SetActive(false)
    self.imgPowerStatus.enabled = false
    local canGo,_ = self.slgModule.touchManager:CanBehemothGotoEntity(entity)
    if canGo then
        self.goIconBan:SetActive(false)
    else
        self.goIconBan:SetActive(true)
        self.animTrigger:PlayAll(FpAnimTriggerEvent.Custom1)
    end
    
    return targetState
end
---@param ctrl TroopCtrl
---@param entity wds.Troop | wds.MapMob
function UITroopDesTip:SetTargetEntity(ctrl,entity,needCompPower)
    
    if self._entity ~= entity then
        self._entity = entity
        
        local targetState = TipType.Move
        
        self.goEnergy:SetActive(false)
        self.extInfo = nil
        if entity then    
            
            local selectUnitType = self.slgModule:GetFirstSelectType()
            if selectUnitType == DBEntityType.MobileFortress then
                targetState = self:__SetTargetEntity_Behemoth(entity,needCompPower)
            else
                targetState = self:__SetTargetEntity_Normal(entity,needCompPower)
            end
        else
            self.imgPowerStatus.enabled = false
        end
        g_Game.SpriteManager:LoadSprite(TipIconBack[targetState],self.imgStatusIconBack)   
        g_Game.SpriteManager:LoadSprite(TipIcon[targetState],self.imgStatusIcon)        
        
    end
   
end

function UITroopDesTip:SetExtInfo()
    if not self.extInfo then return end
    self.txtDistance.text = I18N.Get(self.extInfo)
    if not self.distRootState then
        self.distRoot:SetActive(true)
        self.distRootState = true            
    end
end

function UITroopDesTip:SetPos1Pos2(p1, p2, isCity)
    if self.extInfo then
        return
    end
    if p1 then
        local distance = not isCity and math.floor(CS.UnityEngine.Vector3.Distance(p1, p2)) or math.floor(CS.UnityEngine.Vector3.Distance(p1, p2)*5)
        self.txtDistance.text = distance .. "m"
        if not self.distRootState then
            self.distRoot:SetActive(true)
            self.distRootState = true            
        end
    else
        if self.distRootState then
            self.distRoot:SetActive(false)
            self.distRootState = false;
        end
    end
    if not self.iconState then
        self.goIconRoot.gameObject:SetActive(true)
        self.iconState = true
    end      
    local pos = UIHelper.WorldPos2UIPos(
        self.slgModule.curScene.camera,
        p2,
        self.goIconRoot.parent)
   
    self.goIconRoot.localPosition = pos
end

function UITroopDesTip:HidePos()
    if self.iconState then
        self.goIconRoot.gameObject:SetActive(false)
        self.iconState = false
    end
end

function UITroopDesTip:SetBuffVisible(value)   
    self.trans._buffGo:SetActive(value)   
end



return UITroopDesTip