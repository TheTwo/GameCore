---
--- SE输入管理器
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by BE.Tenner.
--- DateTime: 2021/9/23 10:15
---

---@class SEInputManager
local SEInputManager = class("SEInputManager")
local SELogger = require("SELogger")
local ConfigRefer = require("ConfigRefer")
local SEPreExportDefine = require("SEPreExportDefine")
local Utils = require("Utils")
local SESceneRoot = require("SESceneRoot")
local Delegate = require("Delegate")
local ModuleRefer = require("ModuleRefer")
local LayerMask = require("LayerMask")

---@class SEInputManagerInputWrapper
---@field mousePosition CS.UnityEngine.Vector3
---@field GetMouseButton fun(button:number):boolean
---@field GetMouseButtonDown fun(button:number):boolean
---@field GetMouseButtonUp fun(button:number):boolean

local LAYER_MASK_SE_FLOOR = 1 << 20
local FORCE_MOVE_CLICK_COUNT = 3
local FORCE_MOVE_MIN_DIST = 1
local FORCE_MOVE_MIN_DELTA = 0.5
local AUTO_CLICK_DELTA = 0.5

---@param self SEInputManager
---@param env SEEnvironment
---@return void
function SEInputManager:ctor(env)
    ---@type SEEnvironment
    self._env = env
    self._noControlRemainingTime = 0
    self._noControl = false
	self._lastClickPos = {}
	self._lastClickTime = {}
	self._lastTouchTime = -1
	self._stackedNoControl = {}
	---@type SEInputManagerInputWrapper|CS.UnityEngine.Input
	self._inputWrapper = CS.UnityEngine.Input
	---@type fun(ray:CS.UnityEngine.Ray):boolean,CS.UnityEngine.Vector3
	self._clickGroundProvider = nil

	FORCE_MOVE_MIN_DIST = (ConfigRefer.ConstSe.SeMovingClickJudgmentRange and ConfigRefer.ConstSe:SeMovingClickJudgmentRange()) or FORCE_MOVE_MIN_DIST
	FORCE_MOVE_MIN_DELTA = (ConfigRefer.ConstSe.SeMovingClickThreshold and ConfigRefer.ConstSe:SeMovingClickThreshold()) or FORCE_MOVE_MIN_DELTA
	--AUTO_CLICK_DELTA = (ConfigRefer.ConstSe.SeSkillButtonClickThreshold and ConfigRefer.ConstSe:SeSkillButtonClickThreshold()) or AUTO_CLICK_DELTA
end

---@param inputWrapper SEInputManagerInputWrapper|CS.UnityEngine.Input
function SEInputManager:SetInputWrapper(inputWrapper)
	self._inputWrapper = inputWrapper
end

---@param groundProvider fun(ray:CS.UnityEngine.Ray):boolean,CS.UnityEngine.Vector3
function SEInputManager:SetOverrideGroundProvider(groundProvider)
	self._clickGroundProvider = groundProvider
end

---@param self SEInputManager
---@return SEEnvironment
function SEInputManager:GetEnvironment()
    return self._env
end

---@param self SEInputManager
---@return void
function SEInputManager:Dispose()
    self._noControlRemainingTime = 0
    self._noControl = false
	self._stackedNoControl = {}
end

---是否屏蔽输入
---@param self SEInputManager
---@return boolean
function SEInputManager:IsNoControl()
	if (not self:GetEnvironment():IsLoadComplete()) then return true end
	if (self._noControl) then return true end
	for _, value in pairs(self._stackedNoControl) do
		if (value) then return true end
	end
	return false
end

---@param self SEInputManager
---@param key string
---@param noControl boolean
function SEInputManager:SetStackedNoControl(key, noControl)
	if (not key) then return end
	if (noControl) then
		self._stackedNoControl[key] = true
	else
		self._stackedNoControl[key] = nil
	end
end

---@param screenPos CS.UnityEngine.Vector3
---@return boolean
function SEInputManager:TriggerClick(screenPos)
	if self._clickGroundProvider then return false end
	if self:IsNoControl() then return false end
	local ray = self:GetEnvironment():GetCamera():ScreenPointToRay(screenPos)
	local result, goArray = physics.raycastnonalloc(ray, 9999, LayerMask.Scene3DUI)
	if not result or result <= 0 then return false end
	for i = 1, result do
		local comp = goArray[i]:GetLuaBehaviourInParent("CityTrigger", true)
		if comp ~= nil then
			---@type CityTrigger
			local trigger = comp.Instance
			if trigger and trigger:IsUIBubble() then
				trigger:ExecuteOnClick()
				return true
			end
		end
	end
	return false
end

---屏幕点击
---@param self SEInputManager
---@param screenPos CS.UnityEngine.Vector3
---@param force boolean
---@param isAuto boolean
---@return void
function SEInputManager:ScreenClick(screenPos, force)
	--- 2023-09-19 7Day+ 版本禁止SE点击移动
	--- 2024-02-28 改为可控制点击移动
	if (not self:GetEnvironment():AllowClickMove()) then
		return
	end

    if (not force and self:IsNoControl()) then
        SELogger.Trace("*** Click no control return")
        return
    end
    
    -- Don't allow click move
    if (not force and not self:GetEnvironment():AllowClickMove()) then
		SELogger.Trace("*** Not allow click move")
        return
    end

	-- if (self._env:IsAutoBattle()) then
	-- 	SELogger.Trace("*** 自动战斗中禁止点击移动")
	-- 	return
	-- end

    local ray = self:GetEnvironment():GetCamera():ScreenPointToRay(screenPos)
	---@type boolean
	local nr = false
	---@type CS.UnityEngine.Vector3
	local hitPosition = nil
	if self._clickGroundProvider then
		nr,hitPosition = self._clickGroundProvider(ray)
	else
		---@type boolean
		local result
		---@type CS.UnityEngine.Vector3
		local point
		-- Click move
		result, point = CS.RaycastHelper.PhysicsRaycastRayHitWithMask(ray, 9999, LAYER_MASK_SE_FLOOR)
		if result then
			---@type CS.UnityEngine.AI.NavMeshHit
			local nh
			-- NavMesh check
			nr, nh = CS.UnityEngine.AI.NavMesh.SamplePosition(point, SEPreExportDefine.CLICK_MOVE_THRESHOLD, CS.UnityEngine.AI.NavMesh.AllAreas)
			if nr then
				hitPosition = nh.position
			end
		end
	end
	if (nr) then
		self:MoveToWorldPos(hitPosition)
	end
end

--- 移动到世界坐标
---@param self SEInputManager
---@param worldPos CS.UnityEngine.Vector3
function SEInputManager:MoveToWorldPos(worldPos, presetIndex)
	local mapInfo = self._env:GetMapInfo()
	if Utils.IsNull(mapInfo) then
		g_Logger.Error("MoveToWorldPos ignored because nil mapInfo")
		return
	end
	-- 强制移动
	local forceMove = false -- 子翔要求注释掉( self:CheckForceMove(nhit.position)
	local logicPos = mapInfo:ClientPos2Server(worldPos)
	-- 移动
	local msg = require("MoveStepParameter").new()
	msg.args.TargetEntityId = 0
	msg.args.Force = forceMove
	msg.args.DestPoint.X = logicPos.x
	msg.args.DestPoint.Y = logicPos.y
	msg.args.DestPoint.Z = logicPos.z
	if presetIndex then
		msg.args.PresetIndex = presetIndex
	else
		msg.args.PresetIndex = (self:GetEnvironment():GetCurrentFocusPresetIndex() or self:GetEnvironment():GetFallbackPresetIndex())
	end	
	msg:SendOnceCallback(nil,nil,nil,function(cmd,isSuccess,rsp)
		-- ModuleRefer.ToastModule:AddSimpleToast("#部队已出征")
	end,Delegate.GetOrCreate(self, self.OnMoveToWorldPosErrorFilter))
	-- 路点显示
	worldPos.y = worldPos.y + SESceneRoot.GetSceneWayPointYOffset()
	self._env._unitManager:ShowWaypointCenter(worldPos)
end

---@param msgId number
---@param errorCode number
---@param jsonTable table
---@return boolean
function SEInputManager:OnMoveToWorldPosErrorFilter(msgId, errorCode, jsonTable)
	if errorCode == 30041 or errorCode == 30048 then
		-- server 过滤的目标点不可用
		return true
	end
end

---@return boolean
function SEInputManager:CheckForceMove(pos)
	local len = #self._lastClickPos
	local clientScale = SESceneRoot.GetClientScale()
	if (len < FORCE_MOVE_CLICK_COUNT) then
		if (len > 0) then
			-- 距离检查
			local lastPos = self._lastClickPos[len]
			if (CS.UnityEngine.Vector3.Distance(lastPos, pos) > (FORCE_MOVE_MIN_DIST * clientScale)) then
				self:InsertForceMove(pos, true)
				return false
			end

			-- 时间检查
			local lastTime = self._lastClickTime[1]
			if (g_Game.Time.time - lastTime > FORCE_MOVE_MIN_DELTA) then
				self:InsertForceMove(pos, true)
				return false
			end
		end
		self:InsertForceMove(pos)
		if (len == FORCE_MOVE_CLICK_COUNT - 1) then
			self._lastClickPos = {}
			self._lastClickTime = {}
			return true
		end
	else
		table.remove(self._lastClickPos, 1)
		table.remove(self._lastClickTime, 1)
	end
	return false
end

function SEInputManager:InsertForceMove(pos, clear)
	if (clear) then
		self._lastClickPos = {}
		self._lastClickTime = {}
	end
	table.insert(self._lastClickPos, pos)
	table.insert(self._lastClickTime, g_Game.Time.time)
end

---设置输入屏蔽
---@param self SEInputManager
---@param noControl boolean
---@param time number
---@return void
function SEInputManager:SetNoControl(noControl, time)
    SELogger.Trace("*** set no control %s", noControl)
    self._noControl = noControl
	if (time and time > 0) then
		self._noControlRemainingTime = time
	end
end

---@param self SEInputManager
---@param delta number
---@return void
function SEInputManager:Update(delta)
	if (self._noControlRemainingTime > 0) then
		self._noControlRemainingTime = self._noControlRemainingTime - delta
		if (self._noControlRemainingTime > 0) then
			return
		else
			self._noControl = false
			self._noControlRemainingTime = 0
		end
	end
    if g_Game.debugSupportOn then
        local GMPanel = g_Game.GMPanel
        if (GMPanel and GMPanel:IsPanelShow()) then
            return
        end
    end

	-- 自动连击
	local autoClicked = false
	if (not self:GetEnvironment():GetUiBattlePanel():IsPreventAutoMove() and self._inputWrapper.GetMouseButton(0)) then
		if (self._lastTouchTime < 0) then
			self._lastTouchTime = g_Game.Time.time
		else
			if (g_Game.Time.time - self._lastTouchTime >= AUTO_CLICK_DELTA) then
				autoClicked = true
				if not self:TriggerClick(self._inputWrapper.mousePosition) then
					self:ScreenClick(self._inputWrapper.mousePosition)
				end
				self._lastTouchTime = g_Game.Time.time
			end
		end
	else
		self._lastTouchTime = -1
	end

    if (not autoClicked and self._inputWrapper.GetMouseButtonUp(0)) then
		if self:TriggerClick(self._inputWrapper.mousePosition) then
			return
		end
		if (self:GetEnvironment():GetUiBattlePanel():IsClickMovePrevented()) then
			return
		end
		self:ScreenClick(self._inputWrapper.mousePosition)
    end
end

return SEInputManager
