---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by yingjie.cui.
--- DateTime: 2022/8/19 20:25
---

---@class GestureManager
---@field new fun():GestureManager
local GestureManager = class("GestureManager", require("BaseManager"))

function GestureManager:ctor()
    ---@private
    self.blockRefCount = 0
    ---@type CS.DragonReborn.GestureManager
    self.manager = CS.DragonReborn.GestureManager.Instance;
    self.manager:OnGameInitialize(nil)
end

function GestureManager:AddListener(listener)
    if CS.DragonReborn.GestureManager.IsValid then
        CS.DragonReborn.GestureManager.Instance:AddListener(listener)
    end
end

function GestureManager:RemoveListener(listener)
    if CS.DragonReborn.GestureManager.IsValid then
        CS.DragonReborn.GestureManager.Instance:RemoveListener(listener)
    end
end

function GestureManager:SimulateClick(screenPosition)
    if CS.DragonReborn.GestureManager.IsValid then
        CS.DragonReborn.GestureManager.Instance:SimulateClick(screenPosition)
    end
end

function GestureManager:Reset()
    try_catch_traceback_with_vararg(self.manager.Reset, nil, self.manager)
end

function GestureManager:OnLowMemory()
    try_catch_traceback_with_vararg(self.manager.OnLowMemory, nil, self.manager)
end

---@class BlockGestureRef
---@field UnRef fun(self:BlockGestureRef)
---@field private _active boolean

---@return BlockGestureRef
function GestureManager:SetBlockAddRef()
    ---@type BlockGestureRef
    local ret = {}
    ret._active = true
    local mgr = self
    ret.UnRef = function(self)
        if not self._active then
            return
        end
        self._active = false
        mgr.blockRefCount = mgr.blockRefCount - 1
        g_Logger.Log("[%s]GestureManager:UnRef", CS.UnityEngine.Time.frameCount)
        mgr:RefreshBlockStatus()
    end
    self.blockRefCount = self.blockRefCount + 1
    g_Logger.Log("[%s]GestureManager:SetBlockAddRef", CS.UnityEngine.Time.frameCount)
    self:RefreshBlockStatus()
    return ret
end

function GestureManager:RefreshBlockStatus()
    local enable = self.manager.enable
    if self.blockRefCount > 0 then
        if enable then
            self.manager.enable = false
            g_Logger.Log("[%s]GestureManager:false", CS.UnityEngine.Time.frameCount)
        end
    else
        if not enable then
            self.manager.enable = true
            g_Logger.Log("[%s]GestureManager:true", CS.UnityEngine.Time.frameCount)
        end
    end
end

function GestureManager:GetEnable()
    return self.blockRefCount <= 0
end

function GestureManager:IsFingerOverUI(index)
    if CS.DragonReborn.GestureManager.IsValid then
        return self.manager:IsFingerOverUI(index)
    end
    return false
end

return GestureManager