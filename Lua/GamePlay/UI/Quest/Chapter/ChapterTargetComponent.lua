---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by shoufeng.zhang.
--- DateTime: 2022/1/5 20:47
---

local BaseUIComponent = require("BaseUIComponent")
local Delegate = require("Delegate")
local ConfigRefer = require("ConfigRefer")
local ModuleRefer = require("ModuleRefer")
local FpAnimTriggerEvent = require('FpAnimTriggerEvent')
---@class ChapterTargetComponent : BaseUIComponent
---@field _chapterConfig ChapterConfigCell
local ChapterTargetComponent = class("ChapterTargetComponent", BaseUIComponent)

local I18N = require("I18N")

function ChapterTargetComponent:ctor()
    self.module = ModuleRefer.QuestModule.Chapter;
end

function ChapterTargetComponent:OnCreate()
    self._txtTitle = self:Text('p_text_chapter');
    self._txtTarget = self:Text('p_text_target');
    self._imgTarget = self:Image('p_img_target');


--  reward info

    self._tableRewardPreview = self:TableViewPro('p_item_table_chapter_rewards');

--  buttons
    self._btnGoto = self:Button('p_btn_goto',Delegate.GetOrCreate(self,self.OnMissionGoto));
    self._txtGotoLabel = self:Text("p_text_goto", "chapter_task_preview_task");
    self._btnGetReward = self:Button('p_btn_getaward_chapter',Delegate.GetOrCreate(self,self.OnGetReward));
    self._txtClaimLabel = self:Text("p_btn_getaward_chapter_text",'task_btn_claim');
--
    self.progress = self:BindComponent('p_progress',typeof(CS.UnityEngine.UI.Slider))
    self.txtProgress = self:Text('p_text_progress_chapter')
    self._animTrigger = self:AnimTrigger('')
end

function ChapterTargetComponent:OnGetReward()
    self.module:RequestChapterGroupReward()
end

function ChapterTargetComponent:OnMissionGoto()
    self:Hide()
end

function ChapterTargetComponent:InitUI_LastChapter()
    local chapterDB = self.module:CurrentChapterDBData()
    self.chapterGroupConfig = ConfigRefer.ChapterGroup:Find(chapterDB.ChapterGroupID)
    self.chapterConfig = self.module:GetEndChapterInGroup(chapterDB.ChapterGroupID)
    self.canGetReward = true
    self.completePct = 1
    self:UpdateUI()
end

function ChapterTargetComponent:InitUI_CurrentChapter()
    local questCountInStage = self.module:GetQuestCountInStage()
    local completeCountInStage = self.module:GetCompleteQuestCountInStage()
    local pct = completeCountInStage  / questCountInStage
    self.canGetReward = pct > 0.999 and self.module:HasChapterGroupReward()
    self.chapterGroupConfig = self.module:CurrentChapterGroup()
    self.chapterConfig = self.module:CurrentChapterConfig()
    self.completePct = pct
    self:UpdateUI()
end

function ChapterTargetComponent:UpdateUI()
    self._txtTitle.text = I18N.Get(self.chapterGroupConfig:Desc())
    self._txtTarget.text = I18N.Get(self.chapterGroupConfig:Title())

    self.progress.value = self.completePct
    self.txtProgress.text = string.format('%0.1f%%',self.completePct* 100.0)

    self:LoadSprite(self.chapterConfig:Pic(), self._imgTarget)
    --  Set  reward
    self._tableRewardPreview:Clear()
    local chapterGroupReward = self.chapterGroupConfig:Reward()
    if chapterGroupReward and chapterGroupReward > 0 then
        local chapterRewardList = self.module.parentModule.GetItemGroupInfoById(chapterGroupReward)
        if chapterRewardList then
            for i, v in pairs(chapterRewardList) do
                self._tableRewardPreview:AppendData(v)
            end
        end
    end

    if self.canGetReward then
        self._btnGoto:SetVisible(false)
        self._btnGetReward:SetVisible(true)
    else
        self._btnGoto:SetVisible(true)
        self._btnGetReward:SetVisible(false)
    end
end

function ChapterTargetComponent:OnFeedData()
    if self.module:HasChapterGroupReward() then
        self:InitUI_LastChapter()
    else
        self:InitUI_CurrentChapter()
    end
end

function ChapterTargetComponent:OnChapterRewardedClaimed()
    self._goClaimed:SetVisible(true);
    self._btnGoto:SetVisible(false);
    self._btnGetReward:SetVisible(false);
end

function ChapterTargetComponent:OnShow()
    self:SetVisible(true)
    self:OnFeedData()
    self._animTrigger:PlayAll(FpAnimTriggerEvent.OnShow)
end

function ChapterTargetComponent:OnHide()
    self._animTrigger:PlayAll(FpAnimTriggerEvent.OnClose,function()
        self:SetVisible(false)
    end)
end

return ChapterTargetComponent