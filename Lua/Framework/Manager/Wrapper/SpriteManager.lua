---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by yingjie.cui.
--- DateTime: 2022/8/19 20:25
---

---@class SpriteManager
---@field new fun():SpriteManager
local SpriteManager = class("SpriteManager", require("BaseManager"))
local Utils = require("Utils")

function SpriteManager:ctor()
    ---@type CS.DragonReborn.AssetTool.SpriteManager
    self.manager = CS.DragonReborn.AssetTool.SpriteManager.Instance;
    self.manager:OnGameInitialize(nil)
end

function SpriteManager:SetLRUSize(size)
    self.manager:SetLRUSize(size)
end

function SpriteManager:CleanZeroRefLRU()
    self.manager:CleanZeroRefLRU()
end

function SpriteManager:Reset()
    try_catch_traceback_with_vararg(self.manager.Reset, nil, self.manager)
end

function SpriteManager:OnLowMemory()
    try_catch_traceback_with_vararg(self.manager.OnLowMemory, nil, self.manager)
end

function SpriteManager:LoadSprite(spriteName, image)
    self.manager:LoadSprite(spriteName,image)
end

function SpriteManager:LoadSpriteAsync(spriteName, image)
    self.manager:LoadSprite(spriteName, image, nil, true)
end

function SpriteManager:LoadSpriteAndNotify(spriteName, image)
    self.manager:LoadSpriteAndNotify(spriteName,image)
end

function SpriteManager:LoadSpriteAsyncAndNotify(spriteName, image)
    self.manager:LoadSpriteAndNotify(spriteName,image, nil, true)
end

function SpriteManager:SetNullSprite(image)
    if Utils.IsNull(image) then
        return
    end
    self.manager:SetNullSprite(image)
end

return SpriteManager