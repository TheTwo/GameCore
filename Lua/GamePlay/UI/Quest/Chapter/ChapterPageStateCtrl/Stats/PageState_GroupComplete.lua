---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by shoufeng.zhang.
--- DateTime: 2022/2/17 21:08
---
local PageBaseState = require('PageBaseState')
local QuestStateConstant = require('QuestStateConstant')
local ModuleRefer = require('ModuleRefer')
local Delegate = require('Delegate')
local TimerUtility = require('TimerUtility')
local QueuedTask = require('QueuedTask')
local UIMediatorNames = require('UIMediatorNames')
local EventConst = require('EventConst')
---@class PageState_GroupComplete : PageBaseState
local PageState_GroupComplete = class('PageState_GroupComplete',PageBaseState)

function PageState_GroupComplete:ctor(module,viewer,stateMachine)
    PageBaseState.ctor(self,module,viewer,stateMachine)
end

function PageState_GroupComplete.GetName()
    return 'PageState_GroupComplete'
end


function PageState_GroupComplete:In()    
    self.viewer:ShowChapterTarget()
end

function PageState_GroupComplete:Out()
    
end


function PageState_GroupComplete:Next()
    --if data == nil or data.cmd == nil then return nil end
    local cmd = self.fsm:ReadBlackboard('cmd',true)
    if cmd == QuestStateConstant.StateCmd.ChapterGroupReward then      
            
        if self.module:StartSequence_NewChapterUnlock() then
            return nil
        else
            return QuestStateConstant.StateName.PartNormal
        end
    end
       
end




return PageState_GroupComplete