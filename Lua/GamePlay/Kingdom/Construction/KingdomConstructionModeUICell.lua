---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xh.
--- DateTime: 2022/11/7 14:54
---

local Delegate = require('Delegate')
local BaseTableViewProCell = require("BaseTableViewProCell")
local I18N = require("I18N")
local ModuleRefer = require("ModuleRefer")
local ConfigRefer = require("ConfigRefer")
local KingdomMapUtils = require("KingdomMapUtils")
local UIHelper = require("UIHelper")

---@class KingdomConstructionModeUICell : BaseTableViewProCell
---@field configCell FlexibleMapBuildingConfigCell
---@field matGoList table
---@field matIconList table
---@field matTextNormalList table
---@field matTextRedList table
local KingdomConstructionModeUICell = class("KingdomConstructionModeUICell", BaseTableViewProCell)
---@type KingdomConstructionModeUICell
KingdomConstructionModeUICell.currentCell = nil

function KingdomConstructionModeUICell:ctor()
    BaseTableViewProCell.ctor(self)
    self._isLocked = false
end

function KingdomConstructionModeUICell:OnCreate(param)
    self._p_btn_click = self:Button("p_btn_click", Delegate.GetOrCreate(self, self.OnClick))

    self._p_icon_ban = self:GameObject("p_icon_ban")
    self._p_case_unactivated = self:GameObject("p_case_unactivated")
    self._p_case_activated = self:GameObject("p_case_activated")
    self._p_txt_hint = self:Text("p_txt_hint")

    self._p_txt_unlock = self:Text("p_txt_unlock", "build_unknown")

    self._p_img_select = self:GameObject("p_img_select")

    self._p_lv = self:GameObject("p_lv")
    self._p_text_lv = self:Text("p_text_lv")
    self._p_txt_name = self:Text("p_txt_name")
    self._p_icon_building_activated = self:Image("p_icon_building_activated")
    self._p_quantity_building = self:GameObject("p_quantity_building")
    self._p_txt_quantity_building = self:Text("p_txt_quantity_building")

    self._p_material = self:GameObject("p_material")
    self._p_item_material_1 = self:GameObject("p_item_material_1")
    self._p_icon_material_1 = self:Image("p_icon_material_1")
    self._p_txt_quantity_n_1 = self:Text("p_txt_quantity_n_1")
    self._p_txt_quantity_red_1 = self:Text("p_txt_quantity_red_1")

    self._p_item_material_2 = self:GameObject("p_item_material_2")
    self._p_icon_material_2 = self:Image("p_icon_material_2")
    self._p_txt_quantity_n_2 = self:Text("p_txt_quantity_n_2")
    self._p_txt_quantity_red_2 = self:Text("p_txt_quantity_red_2")

    self._p_item_material_3 = self:GameObject("p_item_material_3")
    self._p_icon_material_3 = self:Image("p_icon_material_3")
    self._p_txt_quantity_n_3 = self:Text("p_txt_quantity_n_3")
    self._p_txt_quantity_red_3 = self:Text("p_txt_quantity_red_3")

    self._p_save = self:GameObject("p_save")

    self.child_reddot_default = self:GameObject("child_reddot_default")
    self._p_type_3 = self:GameObject("p_type_3")
    self._p_text_new = self:Text("p_text_new", "build_newitem")

    self._p_area = self:GameObject("p_area")
    self._p_txt_quantity_area = self:Text("p_txt_quantity_area")

    self.matGoList = {self._p_item_material_1, self._p_item_material_2, self._p_item_material_3}
    self.matIconList = {self._p_icon_material_1, self._p_icon_material_2, self._p_icon_material_3}
    self.matTextNormalList = {self._p_txt_quantity_n_1, self._p_txt_quantity_n_2, self._p_txt_quantity_n_3}
    self.matTextRedList = {self._p_txt_quantity_red_1, self._p_txt_quantity_red_2, self._p_txt_quantity_red_3}
end

function KingdomConstructionModeUICell:OnOpened(param)
    self._p_save:SetActive(false)
end

function KingdomConstructionModeUICell:OnClose(param)
    KingdomConstructionModeUICell.currentCell = nil
end

---@param data FlexibleMapBuildingUIData
function KingdomConstructionModeUICell:OnFeedData(data)
    self.configCell = data.Config
    
    self._p_txt_name.text = I18N.Get(self.configCell:Name())

    self._isLocked = not ModuleRefer.AllianceTechModule:IsBuildingTechSatisfy(data.Config)
    
    self._p_icon_ban:SetActive(false)
    self.child_reddot_default:SetActive(false)
    self._p_case_unactivated:SetActive(self._isLocked)
    self._p_case_activated:SetActive(not self._isLocked)
    self:LoadSprite(self.configCell:Image(), self._p_icon_building_activated)

    if self.configCell:CostAllianceCurrency() ~= 0 then
        self._p_material:SetActive(true)
        self:SetMaterial(1)
        for i = 1, #self.matGoList do
            self.matGoList[i]:SetActive(i == 1)
            if i == 1 then
                self:SetMaterial(i)
            end
        end
    else
        self._p_material:SetActive(false)
    end
    
    self._p_text_lv.text = self.configCell:Level()
    
    local sizeX, sizeY, _ = KingdomMapUtils.GetLayoutSize(self.configCell:Layout())
    self._p_area:SetVisible(true)
    self._p_txt_quantity_area.text = string.format("%sx%s", sizeX, sizeY)
    self._p_txt_quantity_building.text = string.format("%d/%d", data.Count, ModuleRefer.KingdomConstructionModule:GetBuildingLimitCount(self.configCell))
end

function KingdomConstructionModeUICell:OnClick()
    if self._isLocked then
        ModuleRefer.ToastModule:AddSimpleToast(I18N.Get("alliance_jz_lingdichakan"))
        return
    end
    self:SelectSelf()
end

function KingdomConstructionModeUICell:Select()
    self._p_img_select.gameObject:SetActive(true)
end

function KingdomConstructionModeUICell:UnSelect()
    self._p_img_select.gameObject:SetActive(false)
end

function KingdomConstructionModeUICell:SetMaterial(index)
    local currency = self.configCell:CostAllianceCurrency()
    local need = self.configCell:CostAllianceCurrencyCount()
    local item = ConfigRefer.AllianceCurrency:Find(currency)
    local icon = self.matIconList[index]
    local textNormal = self.matTextNormalList[index]
    local textRed = self.matTextRedList[index]
    
    g_Game.SpriteManager:LoadSprite(UIHelper.IconOrMissing(item and item:Icon()), icon)
    local have = ModuleRefer.AllianceModule:GetAllianceCurrencyById(currency)

    textNormal.gameObject:SetActive(have >= need)
    textRed.gameObject:SetActive(have < need)

    if have >= need then
        textNormal.text = tostring(need)
    else
        textRed.text = tostring(need)
    end
end

return KingdomConstructionModeUICell