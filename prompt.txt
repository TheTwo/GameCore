【项目背景】
本项目为Unity游戏项目，包含丰富的功能模块和资源，需自动维护操作提示词，每次操作前先读取本文件内容，结合用户新需求和历史提示词进行思考，操作后自动更新本文件，持续优化提示词和上下文。

【开发原则】
1.  **相机优先稳定**: 在实现相机功能时，应优先保证视角的稳定性和玩家体验的舒适性，避免剧烈的、自动的旋转晃动。相机逻辑应精确、健壮。

【已完成的主要改造】
1.  **动态地图生成**:
    -   已将原有的静态预生成地图（`LevelGenerate.cs`）重构为动态区块生成系统。
    -   系统现在会根据玩家（蛇）的位置，在前方动态生成新的地图区块，并回收后方超出视野的旧区块。
    -   此改造实现了无限地图的可能，并显著优化了性能和内存占用。
2.  **精确相机跟随**:
    -   已重构相机跟随脚本（`CameralFollow.cs`）。
    -   新的相机系统保持编辑器设定的初始旋转和高度不变，仅在XZ水平面平移。
    -   通过几何计算，相机能精确地将蛇头投影到屏幕的指定位置（默认为中心偏下），提供了稳定、舒适的跟随体验。

【当前理解的主要功能模块】
1. Scripts（脚本）：
  - Camera：摄像机相关控制。
  - GameCenter：游戏主控、入口或集成中心。
  - Level：关卡生成与设计工具。
  - Node：节点系统，包含基础节点、彩虹节点、金币节点、边界节点等，可能用于地图或关卡元素。
  - Notification：iOS推送通知相关。
  - Pool：对象池系统，含自动恢复、工厂接口、异常处理等，提升性能。
  - Skill：技能控制。
  - Task：任务系统，包含吃方块、匹配、得分等任务类型及UI控制。
  - Tutorial：新手引导与提示系统。
2. Prefabs（预制体）：各类方块、奖励、特效、UI等。
3. Animations（动画）：UI、角色、特效等动画及控制器。
4. UI：游戏界面相关图片资源。
5. Resources：配置、特效、字体、语言包等。
6. Plugins/Plugin：第三方库（如iTween动画、DOTween、SharpZipLib等）。
7. Editor：自定义编辑器工具（如批量打包、字体导入、地图编辑等）。
8. Packages：Unity包管理，含渲染管线、微信小游戏等扩展。

【后续操作建议】
- 持续记录和优化本文件内容，便于后续开发计划讨论。

【待办】
-   **Roguelike模式扩展 - 阶段一**:
    -   设计并实现多样化的地图区块（Chunk）类型，例如：障碍区、奖励区、特殊事件区等。可以修改 `LevelGenerate.cs` 的 `GenerateChunk` 方法，根据难度或随机规则生成不同的区块。
    -   设计并实现新的节点（Node）或技能（Skill）类型，以增加游戏的可玩性和随机性。
-   自动化梳理脚本功能细节。
-   梳理资源与脚本的关联关系。
