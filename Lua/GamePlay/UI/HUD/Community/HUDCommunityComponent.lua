---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by shoufeng.zhang.
--- DateTime: 2022/5/16 17:10
---
local BaseUIComponent = require('BaseUIComponent')
local ModuleRefer = require('ModuleRefer')
local Delegate = require('Delegate')
local EventConst = require('EventConst')
---@class HUDCommunityComponent : BaseUIMediator
local HUDCommunityComponent = class("HUDCommunityComponent",BaseUIComponent)
local UIMediatorNames = require("UIMediatorNames")

---@protected
function HUDCommunityComponent:ctor(...)
    BaseUIComponent.ctor(self, ...)
end

function HUDCommunityComponent:OnCreate(param)
	
	self.chatGroup = self:GameObject("p_group_chat")
	self.chatButton = self:Button("p_btn_chat", Delegate.GetOrCreate(self, self.OnChatClicked))
	
	self.chatLine = {}
	self.chatType = {}
	self.chatTypeBase = {}
	--self.chatTypeText = {}
	self.chatText = {}
	
	---@type NotificationNode
	self.chatRedDot = self:LuaObject("child_reddot_default")

	self.chatLine[1] = self:GameObject("p_chat_1")
	self.chatType[1] = self:GameObject("p_type_1")
	self.chatTypeBase[1] = self:Image("p_base_type_1")
	--self.chatTypeText[1] = self:Text("p_text_type_1")
	self.chatText[1] = self:LuaObject("p_text_chat_1")

	self.chatLine[2] = self:GameObject("p_chat_2")
	self.chatType[2] = self:GameObject("p_type_2")
	self.chatTypeBase[2] = self:Image("p_base_type_2")
	--self.chatTypeText[2] = self:Text("p_text_type_2")
	self.chatText[2] = self:LuaObject("p_text_chat_2")
end

function HUDCommunityComponent:OnShow(param)
	g_Game.EventManager:TriggerEvent(EventConst.HUD_COMMUNITY_COMP_SHOW, self)
end

function HUDCommunityComponent:OnHide(param)
	g_Game.EventManager:TriggerEvent(EventConst.HUD_COMMUNITY_COMP_HIDE, self)
end


function HUDCommunityComponent:OnChatClicked()
	ModuleRefer.ChatModule:TryOpenChatPanel()
end

function HUDCommunityComponent:HideAllChatLines()
	for i = 1, #self.chatLine do
		self.chatType[i]:SetActive(false)
		self.chatText[i].CSComponent.gameObject:SetActive(false)
	end
end

--- 显示聊天行
---@param self HUDCommunityComponent
---@param line number
---@param msg CS.FunPlusChat.Models.FPMessage
function HUDCommunityComponent:ShowChatLine(line, msg)
	if (not line or not msg) then return false end

	local session = ModuleRefer.ChatModule:GetSession(msg.SessionId)
	local sp = ModuleRefer.ChatModule:GetTagSpriteName(session.SessionType, session.GroupType)
	g_Game.SpriteManager:LoadSprite(sp, self.chatTypeBase[line])
	--self.chatTypeText[line].text = ModuleRefer.ChatModule:GetTagText(session.SessionType, session.GroupType)
	self.chatText[line]:FeedData({
		text = ModuleRefer.ChatModule:GetFullText(msg),
	})
	--chatLine:SetActive(true)
	self.chatType[line]:SetActive(true)
	self.chatText[line].CSComponent.gameObject:SetActive(true)
	return true
end

---@return NotificationNode
function HUDCommunityComponent:GetRedDot()
	return self.chatRedDot
end

return HUDCommunityComponent
