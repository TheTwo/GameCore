-- ---
-- --- Generated by EmmyLua(https://github.com/EmmyLua)
-- --- Created by hao.wu.ss
-- --- DateTime: 2023/2/9 9:39
-- ---
-- --- scene: scene_child_card_pet_s
-- local BaseUIComponent = require('BaseUIComponent')
-- local Delegate = require('Delegate')
-- local ModuleRefer = require("ModuleRefer")
-- local I18N = require("I18N")
-- local UIHelper = require('UIHelper')
-- local ConfigRefer = require("ConfigRefer")

-- ---@class UIPetIconData
-- ---@field id number @宠物ID
-- ---@field cfgId number @宠物配置ID
-- ---@field onClick fun(data: UIPetIconData)
-- ---@field selected boolean
-- ---@field level number
-- ---@field rank number
-- ---@field showMask boolean
-- ---@field showDelete boolean
-- ---@field onDeleteClick fun(data: UIPetIconData)
-- ---@field disabled boolean
-- ---@field onSelect fun(data: UIPetIconData)
-- ---@field onUnselect fun(data: UIPetIconData)
-- ---@field heroId number

-- ---@class UIPetIcon : BaseUIComponent
-- local UIPetIcon = class('UIPetIcon', BaseUIComponent)

-- function UIPetIcon:ctor()
-- end

-- function UIPetIcon:OnCreate(param)
--     self:InitObjects()
-- end

-- function UIPetIcon:InitObjects()
--     self._button = self:Button("", Delegate.GetOrCreate(self, self.OnClick))
--     self._selected = self:GameObject("p_img_select")
--     self._frame = self:Image("p_base_frame")
--     self._icon = self:Image("p_img_pet")
--     self._textLevel = self:Text("p_text_lv")
--     self._mask = self:GameObject("p_img_none")
--     self._buttonDelete = self:Button("p_btn_delete", Delegate.GetOrCreate(self, self.OnDeleteClick))
--     self._heroNode = self:GameObject("p_hero")
--     -- self._quality = self:Image("p_base_pet")
--     self._lock = self:GameObject("p_icon_lock")
--     ---@type HeroInfoItemComponent
--     self._heroComp = self:LuaObject("child_card_hero_s_ex")
--     -- ---@type UIPetStrengthenCell
--     -- self.strengthPet = self:LuaObject('p_strengthen_pet_icon')

--     self.stars = {}
--     self.stars[1] = self:GameObject('p_star_1')
--     self.stars[2] = self:GameObject('p_star_2')
--     self.stars[3] = self:GameObject('p_star_3')
--     self.stars[4] = self:GameObject('p_star_4')
--     self.stars[5] = self:GameObject('p_star_5')
-- end

-- ---@param data UIPetIconData
-- function UIPetIcon:OnFeedData(data)
--     if (data) then
--         self.data = data
--         self.id = data.id
--         self.cfgId = data.cfgId
--         self.cfg = ModuleRefer.PetModule:GetPetCfg(data.cfgId)
--         self.onClick = data.onClick
--         self.selected = data.selected
--         self.level = data.level
--         self.rank = data.rank
--         self.showMask = data.showMask
--         self.showDelete = data.showDelete
--         self.onDeleteClick = data.onDeleteClick
--         self.disabled = data.disabled
--         self.onSelect = data.onSelect
--         self.onUnselect = data.onUnselect
--         self.heroId = data.heroId
--         self.lockByTeam = data.lockByTeam
--         self.templateIds = data.templateIds or {}
--     end
--     self:RefreshUI()
-- end

-- function UIPetIcon:RefreshUI()
--     self._selected:SetActive(self.selected == true)
--     if (self.cfg) then
--         local petIcon = UIHelper.GetFitPetHeadIcon(self._icon, self.cfg)
--         g_Game.SpriteManager:LoadSprite(petIcon, self._icon)
--         local rarityCfg = ConfigRefer.PetRarity:Find(self.cfg:Quality())
--         if (rarityCfg) then
--             self:LoadSprite(rarityCfg:Background(), self._frame)
--         end
--     end
--     if self.id and self.id > 0 then
--         self._lock:SetActive(ModuleRefer.PetModule:IsPetLocked(self.id))
--     end
--     if (self.level and self.level > 0) then
--         self._textLevel.text = I18N.GetWithParams("pet_param4", self.level)
--     end

--     self._mask:SetActive(self.showMask == true)
--     self._buttonDelete.gameObject:SetActive(self.showDelete == true)
--     if (self._heroComp and self.heroId and self.heroId > 0) then
--         self._heroNode:SetActive(true)
--         local heroData = ModuleRefer.HeroModule:GetHeroByCfgId(self.heroId)
--         self._heroComp:FeedData({heroData = heroData, hideExtraInfo = true})
--     else
--         self._heroNode:SetActive(false)
--     end
--     if (self.disabled or self.lockByTeam) then
--         UIHelper.SetGray(self.CSComponent.gameObject, true)
--     else
--         UIHelper.SetGray(self.CSComponent.gameObject, false)
--     end
-- end

-- function UIPetIcon:OnClick(args)
--     if (not self.disabled and self.onClick) then
--         self.onClick(self.data)
--     end
-- end

-- function UIPetIcon:OnDeleteClick(args)
--     if (not self.disabled and self.onDeleteClick) then
--         self.onDeleteClick(self.data)
--     end
-- end

-- function UIPetIcon:SetStars()
--     for i = 1, 5 do
--         self.stars[i]:SetVisible(i <= self.rank)
--     end
-- end

-- return UIPetIcon

