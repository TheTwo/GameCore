---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hao.wu.ss
--- DateTime: 2021/8/6 10:19
---
local SEUnitType = require("SEUnitType")
local SEUnit = require("SEUnit")
local SELogger = require("SELogger")
local ArtResourceUtils = require("ArtResourceUtils")
local ArtResourceConsts = require("ArtResourceConsts")
local Utils = require("Utils")
local I18N = require("I18N")

---@class SEHero:SEUnit
---@field new fun(manager:SEUnitManager, id:number, data:SEUnitData):SEHero
---@field super SEUnit
local SEHero = class("SEHero",  SEUnit)

---@param manager SEUnitManager
---@param id number
---@param data SEUnitData
---@return void
function SEHero:ctor(manager, id, data)
    SEHero.super.ctor(self, manager, id, SEUnitType.Hero)
    self._isLeader = false
    self._inElevator = false
    self._cameraFollow = true
	---@type HeroesConfigCell
	self._heroConfig = nil
	---@type CS.UnityEngine.GameObject
	self._waypointGo = nil
	self._waypointPending = false
	self._isCaptain = false
	self._lastEnergy = -1
	self._energyPrg = 0
    self._hasActiveSkill = false

    local SEUnitAudio = require("SEUnitAudio")
    local SEUnitController = require("SEUnitController")
    local SEActor = require("SEActor")
    local SEUnitRenderer = require("SEUnitRenderer")
    local SEUnitStateMachine = require("SEUnitStateMachine")
    local SEUnitLocomotion = require("SEUnitLocomotion")
    self.m_actor = SEActor.new(self)
    data:SetUnit(self)
    self:AddComponent(data)
    self:AddComponent(SEUnitAudio.new(self))
    self:AddComponent(SEUnitRenderer.new(self))
    self:AddComponent(SEUnitStateMachine.new(self))
    self:AddComponent(SEUnitLocomotion.new(self))
    self:AddComponent(SEUnitController.new(self))
end

function SEHero:SetInit()
    self:RefreshHasActiveSkill()
    SEHero.super.SetInit(self)
end

---@return number
function SEHero:GetHeroConfigId()
    return self.m_entity.BasicInfo.ConfID
end

function SEHero:GetHeroPresetIndex()
    return self.m_entity.BasicInfo.PresetIndex
end

function SEHero:GetHeroConfig()
	return self._heroConfig
end

function SEHero:GetDebugName()
    return I18N.Get(self._heroConfig:Name())
end

function SEHero:SetHeroConfig(config)
	self._heroConfig = config
end

---@return boolean
function SEHero:IsInElevator()
    return self._inElevator
end

---@param is_in boolean
---@return void
function SEHero:SetInElevator(is_in)
    self._inElevator = is_in
end

-- ---@param self SEHero
-- ---@return boolean
-- function SEHero:IsCaptain()
--     local id = self:GetID()
--     local captainId = self._manager:GetCaptainId()
--     return id == captainId
-- end

---@param delta number
function SEHero:Update(delta, nowTime)
    SEHero.super.Update(self, delta, nowTime)

    -- 队长
    if (self._isCaptain) then
        -- Update position and camera follow target
        self:UpdatePositionAndCameraFollow()
		-- 高度雾
		self:UpdateFogSpace()
    end

	-- 7Day+ 版本: 能量条
	self:UpdateEnergy(delta)
end

function SEHero:UpdateEnergy(delta)
	if self._hasActiveSkill and (not self:IsDead() and self._manager._env:IsInBattle()) and self:GetMapStatesBattle() then
		local fight = self:GetFight()
		if (not fight) then return end
		if (self._lastEnergy ~= fight.EnergyPoint) then
			self._energyPrg = fight.EnergyPoint / fight.EnergyPointMax
			self._lastEnergy = fight.EnergyPoint
			--g_Logger.Trace("***** hero %s energy set to %s", self._id, self._lastEnergy)
		else
			if (fight.EnergyPointSpeed > 0) then
				self._energyPrg = self._energyPrg + 1 / fight.EnergyPointSpeed * 10 * delta / fight.EnergyPointMax
			end
			--g_Logger.Trace("***** hero %s energy prg inc to %s", self._id, self._energyPrg)
		end
		self._energyPrg = math.clamp01(self._energyPrg)
		local hud = self:GetHud()
		if (hud) then
			hud:ManualSetProgress(self._energyPrg)
		end
	else
		local hud = self:GetHud()
		if (hud) then
			hud:HideProgress()
		end
	end
end

function SEHero:UpdateFogSpace()
	local actor = self.m_actor
	local pos = actor:GetPosition()
	if (not actor or not pos) then return end
	self._manager._env:SetFogSpace(pos.y)
end

function SEHero:UpdatePositionAndCameraFollow()
    local actor = self.m_actor
	local pos = actor:GetPosition()
    if (not actor or not pos) then
        SELogger.LogLow("hero %s no actor", self._id)
        return
    end

    -- 玩家位置引用与相机目标
    self._manager._env:SetPlayerPositionRefAndCameraTargets(pos, self._cameraFollow)
end

---@param follow boolean
---@return void
function SEHero:SetCameraFollow(follow)
    self._cameraFollow = follow
end

---@return CS.UnityEngine.GameObject
function SEHero:GetWaypointGo()
    return self._waypointGo
end

---@param callback fun()
function SEHero:PrecacheWaypointGo(callback)
	if (Utils.IsNotNull(self._waypointGo) or self._waypointPending) then return end
	self._waypointPending = true
    local helper = self._manager._env:GetCreateHelper()
    helper:Create(ArtResourceUtils.GetItem(ArtResourceConsts.se_waypoint), require("SESceneRoot").GetSceneRoot(), function(go)
        self._waypointGo = go
        self._waypointGo.transform:SetParent(self._manager._env:GetMapRoot())
        self._waypointGo:SetActive(false)
		self._waypointPending = false
        if (callback) then
            callback()
        end
    end)
end

---@param pos CS.UnityEngine.Vector3
function SEHero:ShowWaypoint(pos)
    if (Utils.IsNull(self._waypointGo)) then
        self:PrecacheWaypointGo(function()
            if (Utils.IsNotNull(self._waypointGo)) then
                self._waypointGo.transform.position = pos
                self._waypointGo:SetActive(false)
                self._waypointGo:SetActive(true)
            end
        end)
    else
        self._waypointGo.transform.position = pos
        self._waypointGo:SetActive(false)
        self._waypointGo:SetActive(true)
    end
end

function SEHero:HideWaypoint()
    if Utils.IsNotNull(self._waypointGo) then
        self._waypointGo:SetActive(false)
    end
end

function SEHero:Release()
    if Utils.IsNotNull(self._waypointGo) then
        CS.UnityEngine.GameObject.Destroy(self._waypointGo)
        self._waypointGo = nil
    end
    SEUnit.Release(self)
end

function SEHero:OnLevelChanged()
    self:RefreshHasActiveSkill()
    SEHero.super.OnLevelChanged(self)
end

function SEHero:RefreshHasActiveSkill()
    self._hasActiveSkill = false
    local entity = self:GetEntity()
    if not entity then
        return
    end
    local heroConfig = self:GetHeroConfig()
    if not heroConfig then
        return
    end
    local level = entity.BasicInfo.Level
    local activeSkillCount = heroConfig:CardsLength()
    if activeSkillCount <= 0 then
        return
    end
    local unlockLvsCount = heroConfig:SkillUnlockLevelLength()
    if unlockLvsCount < activeSkillCount then
        self._hasActiveSkill = true
        return
    end
    for i = 1, activeSkillCount do
        if level >= heroConfig:SkillUnlockLevel(i) then
            self._hasActiveSkill = true
            return
        end
    end
end

function SEHero:RefreshHudLevel()
    local unitRedner = self:GetRenderer()
    if not unitRedner then return end
    local hud = self:GetHud()
    if not hud then return end
    unitRedner:RefreshHudLevel(self, hud, self:GetData():GetConfig())
end

function SEHero:IsMeleeHero()
    if self._heroConfig == nil then
        return false
    end

    local ConfigRefer = require("ConfigRefer")
    local seNpcCfg = ConfigRefer.SeNpc:Find(self._heroConfig:SeNpcCfgId())
    if seNpcCfg == nil then
        return false
    end

    local SEUnitCategory = require("SEUnitCategory")
    return seNpcCfg:Category() == SEUnitCategory.HeroShortDis
end

return SEHero
