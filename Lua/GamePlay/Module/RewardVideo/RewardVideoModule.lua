---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hao.wu.ss
--- DateTime: 2023/8/8 11:42
---

local BaseModule = require('BaseModule')
local ModuleRefer = require("ModuleRefer")
local ConfigRefer = require("ConfigRefer")
local ConfigTimeUtility = require("ConfigTimeUtility")

---@class RewardVideoModule
local RewardVideoModule = class('RewardVideoModule', BaseModule)

function RewardVideoModule:ctor()
	self._lastSyncServerTimeMs = 0
	self._lastSyncLocalTimeMs = 0
	self._lastSyncDeltaTimeMs = 0
end

function RewardVideoModule:OnRegister()
    self:SyncTime()
end

function RewardVideoModule:OnRemove()
    
end

function RewardVideoModule:SyncTime()
	local serverTime = g_Game.ServerTime:GetServerTimestampInMilliseconds()
	self._lastSyncServerTimeMs = serverTime
	self._lastSyncLocalTimeMs = CS.TimeUtils.GetCurrentUtcTimestamp()
	self._lastSyncDeltaTimeMs = self._lastSyncLocalTimeMs - self._lastSyncServerTimeMs
end

---@param self RewardVideoModule
---@param cfgId number
---@return boolean, boolean, number, RewardVideoConfigCell, number @是否可观看视频 是否可领取奖励 剩余冷却时间 配置 已经看过次数
function RewardVideoModule:GetRewardVideoStatus(cfgId)
	local canWatchVideo = false
	local canClaimReward = false
	local remainCdTime = 0
	local watchTime = 0

	local rewardCfg = ConfigRefer.RewardVideo:Find(cfgId)
	if (not rewardCfg) then return canWatchVideo, canClaimReward, remainCdTime, rewardCfg, watchTime end
	local player = ModuleRefer.PlayerModule:GetPlayer()
	if not player then return canWatchVideo, canClaimReward, remainCdTime, rewardCfg, watchTime end

	local rvInfo = ModuleRefer.PlayerModule:GetPlayer().PlayerWrapper2.RewardVideos
	if (rvInfo and rvInfo.Videos[cfgId]) then
		---@type wds.RewardVideo
		local rv = rvInfo.Videos[cfgId]
		watchTime = rv.WatchTimes
		if (rv.WatchTimes >= rewardCfg:Times()) then
			canClaimReward = true
		else
			local localTime = CS.TimeUtils.GetCurrentUtcTimestamp()
			local eServerTime = localTime - self._lastSyncDeltaTimeMs
			local videoTime = rv.LastWatchTime.Seconds
			local elapsedTime = math.floor(eServerTime / 1000 - videoTime)
			g_Logger.Trace("**** advideo elapsedTime %s eServerTime %s videoTime %s", elapsedTime, math.floor(eServerTime / 1000), videoTime)
			remainCdTime = ConfigTimeUtility.NsToSeconds(rewardCfg:Cd()) - elapsedTime
			canWatchVideo = remainCdTime <= 0
		end
	else
		canWatchVideo = true
	end
	
	return canWatchVideo, canClaimReward, remainCdTime, rewardCfg, watchTime
end

return RewardVideoModule
