---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by shoufeng.zhang.
--- DateTime: 2022/6/13 10:42
---
local BaseModule = require('BaseModule')
local ModuleRefer = require('ModuleRefer')
local ConfigRefer = require('ConfigRefer')
local Delegate = require('Delegate')
local EventConst = require('EventConst')
local DBEntityPath = require("DBEntityPath")
local NpcServiceObjectType = require("NpcServiceObjectType")
local serviceState = wds.NpcServiceState

---@class StoryPopupTradeModule
local StoryPopupTradeModule = class('StoryPopupTradeModule',BaseModule)

function StoryPopupTradeModule:OnRegister()
    g_Game.EventManager:AddListener(EventConst.ITEM_COUNT_ALL_CHANGED, Delegate.GetOrCreate(self, self.RefreshBubble))
end

function StoryPopupTradeModule:OnRemove()
    g_Game.EventManager:RemoveListener(EventConst.ITEM_COUNT_ALL_CHANGED, Delegate.GetOrCreate(self, self.RefreshBubble))
end

function StoryPopupTradeModule:RefreshBubble()
    g_Game.EventManager:TriggerEvent(EventConst.ON_CHANGE_ITEMS)
end

---@param objectType number @NpcServiceObjectType
function StoryPopupTradeModule:GetTargetNpc(objectType, cityElementId)
    return ModuleRefer.PlayerServiceModule:GetServiceMapByObjectType(objectType)[cityElementId] or {}
end

---@param objectType number @NpcServiceObjectType
function StoryPopupTradeModule:GetServicesInfo(objectType, cityElementId, serviceId)
    local targetNpc = self:GetTargetNpc(objectType, cityElementId)
    local servicesCount = targetNpc.Services
    local serviceCount = (servicesCount or {})[serviceId] or {}
    return serviceCount.ItemCount or {}
end

---@param objectType number @NpcServiceObjectType
function StoryPopupTradeModule:CheckServiceFinished(objectType, cityElementId, serviceId)
    local targetNpc = self:GetTargetNpc(objectType, cityElementId)
    local services = targetNpc.Services or {}
    if services[serviceId] then
        return services[serviceId].State == serviceState.NpcServiceStateFinished
    end
    return false
end

---@return {id:number, count:number}[]
function StoryPopupTradeModule:GetNeedItems(serviceId)
    local itemGroupId = ConfigRefer.NpcService:Find(serviceId):ServiceParam()
    return ModuleRefer.InventoryModule:ItemGroupId2ItemIds(itemGroupId)
end

function StoryPopupTradeModule:GetNeedCount(serviceId, itemId)
    local itemIds = self:GetNeedItems(serviceId)
    for _, item  in pairs(itemIds) do
        if item.id == itemId then
            return item.count
        end
    end
end

---@param objectType number @NpcServiceObjectType
function StoryPopupTradeModule:CheckItemsAllEnough(objectType, cityElementId, serviceId)
    local curItemInfos = self:GetServicesInfo(objectType, cityElementId, serviceId)
    local itemIds = self:GetNeedItems(serviceId)
    for _, item  in pairs(itemIds) do
       local count = item.count
       local submitCount = curItemInfos[item.id] or 0
       local curHaveNum = ModuleRefer.InventoryModule:GetAmountByConfigId(item.id)
       if curHaveNum < count - submitCount then
            return false
       end
    end
    return true
end

return StoryPopupTradeModule