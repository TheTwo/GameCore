---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by wupei.
--- DateTime: 2020/11/18
---
local SlgLocalConfig = require("SlgLocalConfig")
local FTUtil = CS.DragonReborn.SLG.FloatingText.FloatingTextUtility
local I18N = require('I18N')

---@class UISlgBattleInfo
local UISlgBattleInfo = class('UIDamageNum')

UISlgBattleInfo.InCityScale = 0.0125 * 0.5

---@param rootGo CS.UnityEngine.GameObject
---@param assetPathes string[]
function UISlgBattleInfo.Init(rootGo)
    FTUtil.InitSystem(rootGo,SlgLocalConfig.BattleInfoPrefabPath)
end

function UISlgBattleInfo.Clear()
    FTUtil.Clear()
end

---@param buffCfg KheroBuffLogicalConfigCell
function UISlgBattleInfo.SpawnBuffName(module,buffCfg,ctrl)    
    local isPositive = buffCfg:IsPositive()
    local buffName = I18N.Get(buffCfg:NameKey())
    if not buffName then
        return
    end
    buffName = string.trim(buffName)
    if buffName == '' then
        return
    end
    if isPositive then
        UISlgBattleInfo.SpawnTextFromCtrl(module,SlgLocalConfig.FloatingTextStyle.BlueName,buffName,ctrl,0)        
    else
        UISlgBattleInfo.SpawnTextFromCtrl(module,SlgLocalConfig.FloatingTextStyle.RedName,buffName,ctrl,0)
    end
end

---@param module SlgModule
---@param style CS.SEFloatingText.Style | number
---@param info string
---@param ctrl TroopCtrl
function UISlgBattleInfo.SpawnTextFromCtrl(module,style,info,ctrl,delay)
    if not module or not ctrl then return end   
    local view = ctrl:GetCSView()
    if not view then return end    
    UISlgBattleInfo.SpawnTextCommon(module,style,info,view.transform.position,delay)
end

---@param module SlgModule
function UISlgBattleInfo.SpawnStartStatus(module,ctrl)
    UISlgBattleInfo.SpawnTextFromCtrl(module,SlgLocalConfig.FloatingTextStyle.Status_Start,I18N.Get('slg_warshow'),ctrl,0)   
end

---@param module SlgModule
function UISlgBattleInfo.SpawnWinStatus(module,ctrl)
    UISlgBattleInfo.SpawnTextFromCtrl(module,SlgLocalConfig.FloatingTextStyle.Status_Win,I18N.Get('slg_victoryshow'),ctrl,0)   
end

---@param module SlgModule
function UISlgBattleInfo.SpawnFailStatus(module,ctrl)
    UISlgBattleInfo.SpawnTextFromCtrl(module,SlgLocalConfig.FloatingTextStyle.Status_Fail,I18N.Get('slg_failshow'),ctrl,0)   
end

---@private
---@param sceneRoot CS.UnityEngine.Transform
---@param position CS.UnityEngine.Vector3
---@param module SlgModule
function UISlgBattleInfo.SpawnTextCommon(module,style,info,position,delay)   
    local cam = module.battleManager._sceneCam    
    local offset = SlgLocalConfig.DamageNumPos[style]
    delay = delay or 0   
    if module.slgScale < 0.999 then
        offset = offset * UISlgBattleInfo.InCityScale
    end
    FTUtil.SpawnText(0,style,tostring(info),SlgLocalConfig.FloatingTextLife[style],position + offset,cam,SlgLocalConfig.FloatingTextOrthographicScale,delay)
end
---@return number
function UISlgBattleInfo.GetTextLifeForStyle(style) 
    if not style then return 0 end   
    return SlgLocalConfig.FloatingTextLife[style] or 0
end

---@return CS.UnityEngine.Vector3
function UISlgBattleInfo.GetTextOffsetForStyle(style,isInCity)
    local offset = SlgLocalConfig.DamageNumPos[style]   
    if isInCity then
        offset = offset * UISlgBattleInfo.InCityScale
    end
    return offset
end

return UISlgBattleInfo